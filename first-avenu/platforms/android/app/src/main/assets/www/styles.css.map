{"version":3,"sources":["./node_modules/@angular/material/badge/_badge-theme.scss","./src/theme/variables.scss","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-legacy-theme.scss","./node_modules/@angular/material/form-field/_form-field-fill-theme.scss","./node_modules/@angular/material/form-field/_form-field-outline-theme.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./node_modules/@angular/material/input/_input-theme.scss","./node_modules/@angular/material/menu/_menu-theme.scss","./node_modules/@angular/material/paginator/_paginator-theme.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/option/_optgroup-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_focus-indicators.scss","./node_modules/@angular/material/core/_core.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/core/style/_form-common.scss","./node_modules/@angular/material/form-field/_form-field-standard-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/core/style/_vendor-prefixes.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./src/global.scss","./node_modules/@ionic/angular/src/css/core.scss","./node_modules/@ionic/angular/css/core.css","./node_modules/@ionic/angular/src/themes/ionic.mixins.scss","./node_modules/@ionic/angular/src/themes/ionic.globals.scss","./node_modules/@ionic/angular/src/components/menu/menu.ios.vars.scss","./node_modules/@ionic/angular/src/components/menu/menu.md.vars.scss","./node_modules/@ionic/angular/src/css/normalize.scss","./node_modules/@ionic/angular/css/normalize.css","./node_modules/@ionic/angular/src/css/structure.scss","./node_modules/@ionic/angular/css/structure.css","./node_modules/@ionic/angular/src/css/typography.scss","./node_modules/@ionic/angular/css/typography.css","./node_modules/@ionic/angular/src/css/display.scss","./node_modules/@ionic/angular/css/display.css","./node_modules/@ionic/angular/src/css/padding.scss","./node_modules/@ionic/angular/css/padding.css","./node_modules/@ionic/angular/src/css/float-elements.scss","./node_modules/@ionic/angular/css/float-elements.css","./node_modules/@ionic/angular/src/css/text-alignment.scss","./node_modules/@ionic/angular/css/text-alignment.css","./node_modules/@ionic/angular/src/css/text-transformation.scss","./node_modules/@ionic/angular/css/text-transformation.css","./node_modules/@ionic/angular/src/css/flex-utils.scss","./node_modules/@ionic/angular/css/flex-utils.css"],"names":[],"mappings":"AA8ME;EACE,gBAlMU;EAmMV,eApMQ;EAqMR;AC7MJ;;ADgNE;EAEE;AC9MJ;;ADiNE;EACE;AC9MJ;;AC0KE;ECnGE;EAcF;EDuFE;ADtKJ;;ACyKE;ECxGE;EAcF;ED4FE;ADrKJ;;ACwKE;EC7GE;EAcF;EDiGE;ADpKJ;;ACuKE;EClHE;EAcF;EDsGE;ADnKJ;;ACyKE;EC1HE;EDmIA;AD7KJ;;ACgLE;ECtIE;ED+IA;ADpLJ;;ACuLE;EClJE;EAcF;AF9CF;;ACsLE;ECtJE;EAcF;AFzCF;;ACoLI;EACE;ADlLN;;ACsLE;EC9JE;EAcF;AFjCF;;ACqLE;EClKE;EAcF;EDsJE;ADjLJ;;ACoLE;ECvKE;EAcF;ED2JE;ADhLJ;;ACmLE;EC5KE;EAcF;EDgKE;AD/KJ;;ACkLE;ECjLE;EAcF;EDqKE;AD9KJ;;AGnEE;ED8DE;EAcF;AFJF;;AI2EE;;EAGI;EACA;EACA;AJzEN;;AKXE;EACE;ALcJ;;AMzEE;EACE;AN4EJ;;AMzEE;EAEI;EACA;AN2EN;;AMvEE;EACE;AN0EJ;;AMvEE;;EAEE;AN0EJ;;AOpBE;EACE;APuBJ;;AOnBE;EACE;APsBJ;;AQpCE;EACE;EACA;ARuCJ;;AQrCI;;EAEE,eA7FkB;ARoIxB;;ASrGE;EACE;ATwGJ;;ASrGE;EACE;EACA;ATwGJ;;ASrGE;EACE;ATwGJ;;AUmCE;EACE;AVhCJ;;AUmCE;EACE,eAlLsB;AVkJ1B;;AUmCE;;EAGI;EACA;AVjCN;;AUqCE;EAEI,eA9L6B;EA+L7B;AVnCN;;AWrJE;ET6DE;EAcF;AF+EF;;AYrHE;EAEI;EACA;EACA;AZuHN;;AYnHE;EVgBE;EAcF;AF0FF;;AatBE;EX3FE,kBAiBU;EAhBV,gBAiBY;EAhBZ,kBAiBY;EAhBZ,iDAiBY;EAGd;AFkGF;;Aa1BE;EACE,yBAPuB;AboC3B;;AavBI;;EACE,eAvB2B;EAwB3B,kBAxCU;AbmEhB;;AavBI;;EACE;EACA;Ab0BN;;AaxBM;;EACE;EACA,kBAlDQ;Ab6EhB;;AatBE;EACE;EAEA;AbwBJ;;AapBI;;EAzEF;EAEA;AbiGF;;AalBI;EAjFF;EAEA;AbqGF;;AafE;EACE;EACA,sBApEiB;AbsFrB;;AafE;EACE;AbkBJ;;AafE;EAGE,iBAhEuB;AbgF3B;;AabE;EACE,cA/EoB;EAgFpB,0BAzEqB;EA6ErB;AbaJ;;AcnJI;EACE,sBAJqB;Ad0J3B;;AcnJI;EACE;AdqJN;;AcjJM;;EA7DJ;EAIA;EAGA;Ad6MF;;AchJM;EApEJ;EAIA;EAGA;AdkNF;;Ac7IM;EA5EJ;EAIA;EAGA;AduNF;;Ac3II;EACE;Ad6IN;;Ac1II;EAGE,cAzCqB;AdmL3B;;AcvII;EACE,0BAjDmB;EAqDnB;AdsIN;;AchIE;EAGM;;IA3FN;Ed8NA;Ec5HM;IAlGN;EdiOA;EcvHM;IA1GN;EdoOA;AACF;;AevNI;EACE;AfyNN;;AetNI;EACE;EACA,kBAT2B;AfiOjC;;AepNM;;EAnCJ;EAEA;Af0PF;;AehNM;EA5CJ;EAEA;Af8PF;;AgBzMI;EACE;AhB4MN;;AgBzMI;EACE;EACA,mBAT8B;AhBoNpC;;AgBvMM;;EA1CJ;EAEA;AhBoPF;;AgBnMM;EAnDJ;EAEA;AhBwPF;;AiB5TE;;EAGE;AjB8TJ;;AkBlUE;;EARA;EACA;EACA;EAQE;EACA;AlBuUJ;;AkBpUI;;EACE,eDJwB;AjB2U9B;;AmB9QE;EACE;AnBiRJ;;AoB7SE;EAEI;EACA;EACA;ApB+SN;;AqBtTE;;EAGI;EACA;ArBwTN;;AsBhSE;EACE;AtBmSJ;;AuBrSE;EACE;AvBwSJ;;AuBrSE;EACE;AvBwSJ;;AwBtSE;EACE;AxBySJ;;AyB5ME;EAEI;EACA;EACA;AzB8MN;;A0BhRE;EACE;A1BmRJ;;A0BhRE;EAEI;EACA;A1BkRN;;A0B9QE;EACE;A1BiRJ;;A0B9QE;EACE;A1BiRJ;;A0B9QE;EAEI;EACA;A1BgRN;;A2BtQE;EACE;A3ByQJ;;A2BtQE;EAEI;EACA;EACA;A3BwQN;;A4BtVE;;;;;;;E1BUE;EAcF;E0BhBE;A5B0VJ;;A6BhZE;EACE;EACA,eAtBQ;EAuBR,gBAtBe;EAuBf,mBAvBe;A7B0anB;;A6BhZE;EACE,eAxBgB;EAyBhB,gBAvBA;EAwBA,mBAxBA;A7B2aJ;;A8BtYE;EACE,iDAHY;A9B4YhB;;A8BtYE;EACE,iDAPY;A9BgZhB;;A8BpYI;EACE;A9BuYN;;AkBzbE;EARA;EACA;EACA;EAQE;EACA;AlB6bJ;;AkB1bI;EACE,eY4C0B;A9BgZhC;;A8B7YI;EACE;A9B+YN;;AkBtcE;EARA;EACA;EACA;EAQE;EACA;AlB0cJ;;AkBvcI;EACE,eYiD0B;A9BwZhC;;A8BrZI;EACE;EACA;EACA;A9BuZN;;A8BjZI;EACE;A9BoZN;;AkBzdE;EARA;EACA;EACA;EAQE;EACA;AlB6dJ;;AkB1dI;EACE,eY+D0B;A9B6ZhC;;A8B1ZI;EACE;A9B4ZN;;AkBteE;EARA;EACA;EACA;EAQE;EACA;AlB0eJ;;AkBveI;EACE,eYoE0B;A9BqahC;;A8BlaI;EACE,iDA1CU;EA2CV;EACA;A9BoaN;;A+B5cE;EAEI;EACA;A/B8cN;;AgChfE;E9B8DE;EAcF;AFyaF;;AiC7eE;EAEI;EACA;AjC+eN;;AiC3eE;EACE;EAEE;EACA;EACA;AjC6eN;;AkC7fE;EACE;AlCggBJ;;AkC7fE;;EAEE;EACA;AlCggBJ;;AmC3hBE;EACE;EAIA;AnC2hBJ;;AmCphBI;EACE;AnCshBN;;AmClhBE;EACE;AnCqhBJ;;AmClhBE;EACE;EACA;EACA;EAEA;EACA;AnCohBJ;;AoC7gBI;EDHE;AnCmhBN;;AoCpjBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EAGA;EAGA;EACA;ApCgjBJ;;AqCtjBE;EAEE;EAGA;EACA;EACA;EACA;ArCsjBJ;;AqCljBE;EACE;EACA,aA3BwB;ArCglB5B;;AqCnjBI;EAGE;ArCmjBN;;AqC3iBE;EACE;EACA;EACA,aA1Cc;ArCwlBlB;;AqC1iBE;EAGE;EACA;EACA;EACA,aApDc;EAwDd;EACA;EACA;ArCwiBJ;;AqCriBE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApEuB;EAqEvB;EACA;EACA;EACA;ArCsiBJ;;AqCpiBI;EACE;ArCsiBN;;AqCjiBM;EAGE;ArCiiBR;;AqC5hBE;EACE,+BAtFqB;ArCqnBzB;;AqCvhBI;EACE;ArC0hBN;;AqCphBE;EACE;EACA,aA3Gc;EAgHd;EAIA;EAGA;EACA;ArC8gBJ;;AqC1gBE;EACE;EAKA;EAKA;ArCqgBJ;;AsC5oBE;EACE;AtC+oBJ;;AsCzoBE;EAyCA;EACA;EAxCE;EACA;AtC6oBJ;;AsCpoBE;EA6BA;EACA;EA5BE;AtCwoBJ;;AsC9nBE;EAA0C;AtCkoB5C;;AsCjoBE;EAAwC;AtCooB1C;;AsCloBE;EAEE;AtCmoBJ;;AsChoBE;EAEE;AtCkoBJ;;AuCxlBE;EACE;AvC2lBJ;;AwCppBE;EACE;AxCupBJ;;AyC5qBE;EAII;AzC4qBN;;A+B9qBE;EACE;A/BirBJ;;A+B/qBI;EAEE;A/BgrBN;;A+B5qBI;EACE;A/B8qBN;;A+B3qBI;EACE;EACA;A/B6qBN;;A+B1qBI;EACE;A/B4qBN;;A+BxqBE;EACE;A/B2qBJ;;A+BxqBE;EACE;A/B2qBJ;;A+BxqBE;EACE;A/B2qBJ;;AgC/sBE;EACE;AhCktBJ;;AgC/sBE;EACE;AhCktBJ;;A0C7sBE;EACE;A1CgtBJ;;A0C9sBI;EACE;A1CgtBN;;A0C5sBE;EACE,cAZe;A1C2tBnB;;A0C5sBE;;EAEE;A1C+sBJ;;A0CvsBE;;;;EAIE;A1C0sBJ;;A0CvsBE;;EAEE;A1C0sBJ;;A0CrsBI;;EACE,mBAxCa;A1CivBnB;;A2ClvBE;EAIE;EACA;A3CkvBJ;;A2C3uBI;ECkIF;A5C6mBF;;A2C/uBI;ECkIF;A5CinBF;;A2CnvBI;ECkIF;A5CqnBF;;A2CvvBI;ECkIF;A5CynBF;;A2C3vBI;ECkIF;A5C6nBF;;A2C/vBI;ECkIF;A5CioBF;;A2CnwBI;ECkIF;A5CqoBF;;A2CvwBI;ECkIF;A5CyoBF;;A2C3wBI;ECkIF;A5C6oBF;;A2C/wBI;ECkIF;A5CipBF;;A2CnxBI;ECkIF;A5CqpBF;;A2CvxBI;ECkIF;A5CypBF;;A2C3xBI;ECkIF;A5C6pBF;;A2C/xBI;ECkIF;A5CiqBF;;A2CnyBI;ECkIF;A5CqqBF;;A2CvyBI;ECkIF;A5CyqBF;;A2C3yBI;ECkIF;A5C6qBF;;A2C/yBI;ECkIF;A5CirBF;;A2CnzBI;ECkIF;A5CqrBF;;A2CvzBI;ECkIF;A5CyrBF;;A2C3zBI;ECkIF;A5C6rBF;;A2C/zBI;ECkIF;A5CisBF;;A2Cn0BI;ECkIF;A5CqsBF;;A2Cv0BI;ECkIF;A5CysBF;;A2C30BI;ECkIF;A5C6sBF;;A2Cx0BI;EACE;A3C20BN;;A6Cr2BE;EAEE;EACA;A7Cu2BJ;;A4C3sBE;EAXA;A5CytBF;;A6Cn2BI;EACE;A7Cq2BN;;A6Cn2BM;EACE;A7Cq2BR;;ADxxBE;EACE;AC2xBJ;;ADvxBI;EACE;AC0xBN;;ADtxBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ACyxBJ;;ADtxBE;;EAEE;ACyxBJ;;ADpxBE;EAEE;ACsxBJ;;ADn4BE;EACE,WATS;EAUT,YAVS;EAWT,iBAXS;ACi5Bb;;ADl4BI;EACE;ACo4BN;;AD/3BI;EACE;ACi4BN;;AD53BI;EACE;AC83BN;;ADz3BI;EACE;EACA;AC23BN;;ADt3BI;EACE;ACw3BN;;ADn3BI;EACE;EACA;ACq3BN;;AD/2BM;EACE;ACi3BR;;AD52BM;EACE;EACA;AC82BR;;ADz2BM;EACE;AC22BR;;ADt2BM;EACE;EACA;ACw2BR;;AD36BE;EACE,WAVW;EAWX,YAXW;EAYX,iBAZW;AC07Bf;;AD16BI;EACE;AC46BN;;ADv6BI;EACE;ACy6BN;;ADp6BI;EACE;ACs6BN;;ADj6BI;EACE;EACA;ACm6BN;;AD95BI;EACE;ACg6BN;;AD35BI;EACE;EACA;AC65BN;;ADv5BM;EACE;ACy5BR;;ADp5BM;EACE;EACA;ACs5BR;;ADj5BM;EACE;ACm5BR;;AD94BM;EACE;EACA;ACg5BR;;ADn9BE;EACE,WARS;EAST,YATS;EAUT,iBAVS;ACg+Bb;;ADl9BI;EACE;ACo9BN;;AD/8BI;EACE;ACi9BN;;AD58BI;EACE;AC88BN;;ADz8BI;EACE;EACA;AC28BN;;ADt8BI;EACE;ACw8BN;;ADn8BI;EACE;EACA;ACq8BN;;AD/7BM;EACE;ACi8BR;;AD57BM;EACE;EACA;AC87BR;;ADz7BM;EACE;AC27BR;;ADt7BM;EACE;EACA;ACw7BR;;ADt3BE;EACE;EACA;ACy3BJ;;AoCh/BI;ErC0HE;EACA;ACy3BN;;ADp3BI;EACE;EACA;ACu3BN;;ADl3BI;EACE;EACA;ACq3BN;;ADh3BI;EAWI;EAMF;ACo2BN;;AG/hCE;EyCkJA;EzChJE;EACA;AHkiCJ;;AIh9BE;EAKE;EACA;AJ+8BJ;;AI/+BE;EACE;AJi/BJ;;AI/+BE;EACE;AJi/BJ;;AI/+BE;EACE;AJi/BJ;;AI7+BI;EAEE;AJ8+BN;;AIjjCE;EACE;AJmjCJ;;AIhjCE;EACE;AJkjCJ;;AI/iCE;EACE;AJijCJ;;AI9iCE;EACE;AJgjCJ;;AI/9BI;EACE,YAxGY;EAyGZ;AJi+BN;;AI79BE;EACE;AJg+BJ;;AI39BE;EACE;AJ89BJ;;AI39BE;EAEE;EACA;AJ69BJ;;AIxhCE;EACE;AJ0hCJ;;AIxhCE;EACE;AJ0hCJ;;AIxhCE;EACE;AJ0hCJ;;AIthCI;EAEE;AJuhCN;;AIpiCE;EACE;AJsiCJ;;AIpiCE;EACE;AJsiCJ;;AIpiCE;EACE;AJsiCJ;;AIliCI;EAEE;AJmiCN;;AIrkCE;EAXA,0CADmB;AJolCrB;;AIpkCE;EAfA,0CADmB;AJulCrB;;AInkCE;EAnBA,0CADmB;AJ0lCrB;;A4Cv9BE;EAXA;A5Cs+BF;;A4C39BE;EAXA;A5C0+BF;;A4C/9BE;EAXA;A5C6+BF;;A4Cl+BE;EAXA;A5Cg/BF;;A4Cr+BE;EAXA;A5Co/BF;;A4Cz+BE;EAXA;A5Cu/BF;;A4C5+BE;EAXA;A5C0/BF;;AKzoCE;;EuC+IA;A5C+/BF;;AKzoCE;;EAEE;AL4oCJ;;AKzoCE;EACE;AL4oCJ;;AK1oCI;EACE;AL4oCN;;AKxoCE;EACE;EACA;AL2oCJ;;AKzoCI;EACE;AL2oCN;;AKvoCE;EACE;AL0oCJ;;AKvoCE;EACE;EACA;AL0oCJ;;AKtoCI;EACE;EACA;EACA;ALyoCN;;AKroCE;EACE;EACA;ALwoCJ;;AKtoCI;EACE;ALwoCN;;AKpoCE;EACE;EACA;ALuoCJ;;AKroCI;EACE;ALuoCN;;AKpoCI;EACE;ALsoCN;;AKloCE;;EAEE;ALqoCJ;;AKnnCI;EACE,iBALc;AL2nCpB;;AM/sCE;EAEE;EACA;ANitCJ;;A4CxjCE;EAXA;A5CskCF;;A4C3jCE;EAXA;A5CykCF;;AM/sCE;EACE;ANktCJ;;AOhtCE;EACE;APmtCJ;;AOhtCE;EACE,aAdoB;APiuCxB;;AOhtCE;EAGE;APitCJ;;AO9sCE;EACE,yBAxBoB;APyuCxB;;AO7sCI;EACE;APgtCN;;AO7sCI;EACE;AP+sCN;;AO5sCI;EACE;AP8sCN;;AOvsCM;EACE,yBAtCW;APgvCnB;;AOrsCM;EACE,qBA5CW;APmvCnB;;AOnsCI;EACE;APqsCN;;AO/rCE;EACE;APksCJ;;AO7rCI;;EACE;APisCN;;AO9rCI;;EACE;APisCN;;AO9rCI;;EACE;APisCN;;AQzuCE;EA5CA,yBAyCwB;EAxCxB,0BAyCwB;ARgvC1B;;AQvxCE;EACE,0BAsCsB;EArCtB;ARyxCJ;;AQ9uCM;EoCmGJ;A5C8oCF;;AQ7uCM;EACE;AR+uCR;;AQ3uCI;EACE;AR6uCN;;AQ1uCI;EACE;AR4uCN;;AQvuCI;EAnEF,yBAyBE;EAxBF,YAuBwB;ARuxC1B;;AQ5yCE;EACE,YAoBsB;EAnBtB;AR8yCJ;;AQxxCE;EAVA,0CADmB;ARsyCrB;;AQ/uCI;EAvEF,yBAyBE;EAxBF,YAuBwB;ARkyC1B;;AQvzCE;EACE,YAoBsB;EAnBtB;ARyzCJ;;AQnyCE;EAVA,0CADmB;ARizCrB;;AQtvCI;EA3EF,yBAyBE;EAxBF,YAuBwB;AR6yC1B;;AQl0CE;EACE,YAoBsB;EAnBtB;ARo0CJ;;AQ9yCE;EAVA,0CADmB;AR4zCrB;;AS50CE;EACE;AT+0CJ;;AS50CE;;;;EAIE;AT+0CJ;;AS50CE;;EAEE;AT+0CJ;;AS50CE;EACE;AT+0CJ;;AS50CE;EACE;AT+0CJ;;AU1yCE;EACE;AV6yCJ;;AUxyCE;;;EAGE;AV2yCJ;;AUxyCE;EACE;AV2yCJ;;AUxyCE;EACE;AV2yCJ;;AUxyCE;EACE;AV2yCJ;;AUxyCE;;EAEE;EACA;AV2yCJ;;AUj1CE;EA2CI,0BAlCa;AV40CnB;;AUtyCE;EACE,0BAvCe;AVg1CnB;;AUtyCE;EAOI;AVmyCN;;AU71CE;EAqEI;AV4xCN;;AUj2CE;EA8EM;AVuxCR;;AUrsCE;EACE,kCAvMA;AV+4CJ;;AUrsCE;;EAEE,kCAViB;AVktCrB;;AUrsCE;;EAEE;AVwsCJ;;AUrsCE;;EAEE;AVwsCJ;;AUrsCE;;EAEE,mBAxBc;AVguClB;;AUrsCE;;EAEE,mBA5BuB;AVouC3B;;AUt6CE;EACE;EACA;AVy6CJ;;AUt6CE;EAII;AVs6CN;;AU75CE;EACE;AVg6CJ;;AU/4CE;;;EARM;AV65CR;;AUzzCE;EkCQA;ElCNE;EACA;AV4zCJ;;AU3vCE;EACE,mCAvMA;AVo8CJ;;AU1vCE;;EAEE,kCAViB;AVswCrB;;AUzvCE;;EAEE;AV2vCJ;;AUxvCE;;EAEE;AV0vCJ;;AUvvCE;;EAEE,mBAxBc;AVixClB;;AUtvCE;;EAEE,mBA5BuB;AVoxC3B;;AUt9CE;EACE;EACA;AVw9CJ;;AUr9CE;EAII;AVo9CN;;AU38CE;EACE;AV68CJ;;AU57CE;;;EARM;AVy8CR;;AUjyCE;EACE,kCAvMA;AV0+CJ;;AUhyCE;;EAEE,kCAViB;AV4yCrB;;AU/xCE;;EAEE;AViyCJ;;AU9xCE;;EAEE;AVgyCJ;;AU7xCE;;EAEE,mBAxBc;AVuzClB;;AU5xCE;;EAEE,mBA5BuB;AV0zC3B;;AU5/CE;EACE;EACA;AV8/CJ;;AU3/CE;EAII;AV0/CN;;AUj/CE;EACE;AVm/CJ;;AUl+CE;;;EARM;AV++CR;;AU73CE;EkCNA;A5Cu4CF;;AU73CE;EACE;AVg4CJ;;AU93CI;EACE;AVg4CN;;AU73CI;EACE;AV+3CN;;AU33CE;EACE;AV83CJ;;AWtiDE;EiCiJA;EjC/IE;EACA;AXyiDJ;;A8CjjDE;EACE;A9CojDJ;;A8CjjDE;EACE;A9CojDJ;;AYljDE;EAEE;EACA;AZojDJ;;A4C75CE;EAXA;A5C26CF;;AYpjDE;EACE;AZujDJ;;A+CvkDM;EnCoBF;AZujDJ;;AYljDE;EACE;IAEE;EZojDJ;AACF;;AYjjDE;EACE;AZmjDJ;;AYhjDE;;EAEE;AZmjDJ;;AYhjDE;EACE;AZmjDJ;;AYjjDI;;EAEE;AZmjDN;;AYthDI;EACE,YALe;AZ8hDrB;;AYvhDM;EACE,YAVY;AZmiDpB;;Aa3kDE;EACE,yBAZA;Ab0lDJ;;Aa3kDE;EACE,yBAhBA;Ab8lDJ;;Aa3kDE;EACE,cAnBoB;AbimDxB;;Aa5kDI;EACE,cAhBqB;Ab8lD3B;;Aa3kDI;EACE,cAnBmB;AbgmDzB;;AazkDE;EACE,cA9BqB;Ab0mDzB;;AazkDE;EACE,qCA9BA;Ab0mDJ;;AaxkDI;EACE,yBAhCsB;Ab2mD5B;;AazkDM;EACE,yBArCmB;AbgnD3B;;AaxkDM;EACE,yBAxCiB;AbknDzB;;AapkDI;EACE,cA9CsB;AbqnD5B;;AapkDI;EACE,cApDqB;Ab0nD3B;;AankDI;EACE,cAvDmB;Ab4nDzB;;Aa7jDI;EACE,cAhEmB;AbgoDzB;;Aa9jDM;;EAEE,cApEiB;AbooDzB;;Aa5jDI;;EAEE,yBA1EmB;AbwoDzB;;Aa1jDE;EACE,cA/EqB;Ab4oDzB;;AcvpDI;EACE,0BANU;AdgqDhB;;AcvpDI;EACE,0BAVU;AdmqDhB;;ActpDI;EACE,qCAZF;AdoqDJ;;AcrpDI;EkCzBF;EACA;EACA;AhDirDF;;AiD3qDI;EACE,qCAJF;AjDkrDJ;;AiD3qDI;EDZF;EACA;EACA;AhD0rDF;;Ae5qDI;EACE,qCATF;AfwrDJ;;Ae5qDI;EACE,qCAXF;AfyrDJ;;Ae3qDI;EACE,qCAbF;Af0rDJ;;AezqDM;EACE,0BAjBiB;Af4rDzB;;AexqDM;EACE;Af0qDR;;AgBtrDI;EACE,0BAXF;AhBosDJ;;AgBtrDI;EACE,0BAbF;AhBqsDJ;;AgBprDM;EACE,cAjBkB;AhBusD1B;;AgBnrDM;EACE,cApBiB;AhBysDzB;;AgBlrDM;EACE,cAvBe;AhB2sDvB;;AgB9qDM;EACE,cA9Be;AhB8sDvB;;AgB3qDM;EACE,0BA3CiB;AhBwtDzB;;AgB1qDM;EACE,0BAtCJ;AhBktDJ;;AkDhuDI;EACE;AlDmuDN;;AkDhuDI;EACE;AlDkuDN;;AkD/tDI;EACE;AlDiuDN;;AmBruDE;EACE;AnBwuDJ;;AmBruDE;;EAEE;AnBwuDJ;;AmBruDE;EACE;AnBwuDJ;;AmD1vDE;EhCqBI;AnBwuDN;;AmDzvDE;EhCiBI;AnB2uDN;;AmDxvDE;EhCaI;AnB8uDN;;AmDvvDE;EhCSI;AnBivDN;;AmB9tDE;EACE;AnBiuDJ;;AmB9tDE;;EAEE;AnBiuDJ;;AmB9tDE;EACE;AnBiuDJ;;A8B/wDI;EACE;A9BkxDN;;A8B/wDI;EACE;A9BixDN;;A8B9wDI;EACE;A9BgxDN;;A8B5wDE;EACE;A9B+wDJ;;A8BzwDI;;;;;EACE;A9BgxDN;;A8B3wDI;EACE;A9B8wDN;;AoB1yDE;EAEE;ApB4yDJ;;A4ClpDE;EAXA;A5CgqDF;;AoB5yDE;EACE;EACA;ApB+yDJ;;AoB5yDM;;;EAGE;ApB8yDR;;AoBzyDE;;EAEE;ApB4yDJ;;AoBryDI;;;;EACE;ApB2yDN;;AqBv0DE;EACE;ArB00DJ;;AqBv0DE;;EAEE;ArB00DJ;;AqBv0DE;;EAEE;EACA;ArB00DJ;;AqBv0DE;;EAEE;ArB00DJ;;AqBt0DI;;;;EAIE;ArBy0DN;;AqBlzDI;EACE,gBALK;ArB0zDX;;AoD31DE;EACE;ApD81DJ;;AoD31DE;EACE;ApD81DJ;;AoD31DE;EACE;ApD81DJ;;AoD11DI;EACE;ApD61DN;;AoD11DI;EACE;ApD41DN;;AoDz1DI;EACE;ApD21DN;;AoDt1DI;EACE;ApDy1DN;;AoDt1DI;EACE;ApDw1DN;;AoDr1DI;EACE;ApDu1DN;;AqDx4DI;EACE;ArD24DN;;AqDx4DI;EACE;ArD04DN;;AqDv4DI;EACE;ArDy4DN;;AsBl4DE;EACE;AtBq4DJ;;AsB15DE;EACE;AtB65DJ;;AsB15DE;;EAIE;AtB05DJ;;AsBl6DE;EACE;AtBo6DJ;;AsBj6DE;;EAIE;AtBi6DJ;;AsBz6DE;EACE;AtB26DJ;;AsBx6DE;;EAIE;AtBw6DJ;;AsBv4DM;;EAEE;AtBy4DR;;AsBt4DM;;EAEE;AtBw4DR;;AsBr4DM;EACE;AtBu4DR;;AsBj4DI;EACE;AtBm4DN;;AuBp7DE;EACE;AvBu7DJ;;AuBp7DE;EACE;AvBu7DJ;;AuBp7DE;EACE;AvBu7DJ;;AuBp7DE;EACE;AvBu7DJ;;AuBp7DE;EACE;AvBu7DJ;;A4ChzDE;EAXA;A5C8zDF;;AuBv7DI;EACE;AvBy7DN;;AuBn7DM;EACE;AvBs7DR;;AuBn7DM;EACE;AvBq7DR;;AuBl7DM;EACE;AvBo7DR;;AuBh7DI;EACE;AvBk7DN;;AuB/6DI;EACE;AvBi7DN;;AsD39DE;EACE,yBALmC;EAMnC;AtD89DJ;;AsD39DE;EACE,uBAXwB;EAYxB;AtD89DJ;;AsD59DI;EACE,uBAb2B;AtD2+DjC;;AsD39DI;EV6HF;A5Ci2DF;;AsDv9DE;EACE,2CAvBmB;AtDi/DvB;;AsDx9DI;EACE,0CA1BiB;EA2BjB;AtD09DN;;AsDt9DE;EACE,0CAhCmB;EAiCnB;AtDy9DJ;;AsDv9DI;EACE;EACA,2CArCiB;AtD8/DvB;;AsDr9DE;EAQI;AtDi9DN;;AwB1gEI;EACE;AxB6gEN;;AwB1gEI;EAGE;AxB0gEN;;AwBvgEI;EAGE;AxBugEN;;AwBphEI;EACE;AxBshEN;;AwBnhEI;EAGE;AxBmhEN;;AwBhhEI;EAGE;AxBghEN;;AwB7hEI;EACE;AxB+hEN;;AwB5hEI;EAGE;AxB4hEN;;AwBzhEI;EAGE;AxByhEN;;AwBp/DI;EAGE,uBAhBqB;AxBogE3B;;AwBh/DE;EoB2FA;EpBzFE;AxBm/DJ;;AwBh/DE;EACE,qCA3BoB;AxB8gExB;;AyBzgEE;EACE,qCAbqB;AzByhEzB;;AyBxjEE;;;EAGE;AzB2jEJ;;AyBxjEE;EACE;AzB0jEJ;;AyBvjEE;EAGE,wCADQ;AzBwjEZ;;AyBpkEE;;;EAGE;AzBukEJ;;AyBpkEE;EACE;AzBskEJ;;AyBnkEE;EAGE,yCADQ;AzBokEZ;;AyBhlEE;;;EAGE;AzBmlEJ;;AyBhlEE;EACE;AzBklEJ;;AyB/kEE;EAGE,wCADQ;AzBglEZ;;AyB/hEI;;EACE,qCA9B2B;AzBikEjC;;AyB9hEI;;;EAGE,qCArCwB;AzBskE9B;;AyB7hEM;EACE,qCA1CsB;AzBykE9B;;AyBzhEI;EAGE,qCADQ;AzB2hEd;;AyBhhEM;;EAEE,qCA7DJ;AzB+kEJ;;AyB9gEQ;;EAEE,qCAjEN;AzBilEJ;;AyB1gEM;EACE,iCA9EiB;EA+EjB;AzB4gER;;AyBvgEQ;EACE,iCApFuB;AzB6lEjC;;AyBtgEQ;EACE,iCAvFoB;AzB+lE9B;;AyBlgEE;EACE,gCAvFA;AzB4lEJ;;AyB5/DE;EACE;EAIA;AzB4/DJ;;AyBl/DE;EACE;AzBq/DJ;;A0BnoEI;EAGE;A1BooEN;;A0B9nEI;EACE;IACE;E1BgoEN;AACF;;A0B7nEI;;EAIE;A1B6nEN;;A0B1nEI;EAGE;EACA;A1B0nEN;;A0BvnEI;;;EAGE;EACA;A1BynEN;;A0BrnEM;EACE;A1BunER;;A0BpnEM;;;EAGE;EACA;A1BsnER;;A0BjnEM;EACE;A1BmnER;;A0BhnEM;;;EAGE;EACA;A1BknER;;A0B9mEI;EACE;EACA;A1BgnEN;;A0B7mEI;EACE;A1B+mEN;;A0B5mEI;EACE;A1B8mEN;;A0B1mEE;EACE;A1B6mEJ;;A0B1mEE;EACE;A1B6mEJ;;A0B1mEE;;;EAGE;A1B6mEJ;;A0BpkEI;EACE,YANK;A1B6kEX;;A0BpkEI;;EAEE;A1BukEN;;A0BlkEI;EACE;EACA;A1BqkEN;;A0BhkEM;EACE;A1BmkER;;A0B9jEI;EACE;A1BikEN;;AuDjuEE;EAYI;AvDytEN;;A2BjuEE;;EAEE,4CAJc;A3BwuElB;;A2BhuEI;;EAEE,yCAVY;EAWZ;A3BmuEN;;A2B/tEE;EACE;A3BkuEJ;;A2BhuEI;EACE;A3BkuEN;;A2B9tEE;EACE;A3BiuEJ;;A2B9tEE;EACE;A3BiuEJ;;A2B7tEE;;EAEE;EACA;A3BguEJ;;A2BlrEM;;;;;EACE;A3ByrER;;A2BpsEE;EACE;A3BssEJ;;A2BvsEE;EACE;A3BysEJ;;A2BhsEM;;;;;EACE;A3BssER;;A2BjtEE;EACE;A3BmtEJ;;A2BptEE;EACE;A3BstEJ;;A2B7sEM;;;;;EACE;A3BmtER;;A2B9tEE;EACE;A3BguEJ;;A2BjuEE;EACE;A3BmuEJ;;A2B1tEM;;;;;EACE;A3BguER;;A2BrtEE;EACE;A3ButEJ;;A2BntEE;EACE;A3BqtEJ;;A2BntEI;EACE;A3BqtEN;;A2BhtEE;;;;;;;EAIE;A3BqtEJ;;A2BltEE;;;EAEE;A3BqtEJ;;A2BhtEE;;;;;EAGE;A3BotEJ;;A2B/vEM;;;;;EACE;A3BqwER;;A2B1vEE;EACE;A3B4vEJ;;A2BxvEE;EACE;A3B0vEJ;;A2BxvEI;EACE;A3B0vEN;;A2BrvEE;;;;;;;EAIE;A3B0vEJ;;A2BvvEE;;;EAEE;A3B0vEJ;;A2BrvEE;;;;;EAGE;A3ByvEJ;;A2BpyEM;;;;;EACE;A3B0yER;;A2B/xEE;EACE;A3BiyEJ;;A2B7xEE;EACE;A3B+xEJ;;A2B7xEI;EACE;A3B+xEN;;A2B1xEE;;;;;;;EAIE;A3B+xEJ;;A2B5xEE;;;EAEE;A3B+xEJ;;A2B1xEE;;;;;EAGE;A3B8xEJ;;A4Bp3EE;EACE;EACA;A5Bu3EJ;;A4Br3EI;EApCF;EACA;A5B45EF;;A4Br3EI;EAxCF;EACA;A5Bg6EF;;A4Br3EI;EA5CF;EACA;A5Bo6EF;;A4Bh6EE;;;EAGE;A5Bk6EJ;;A4B/5EE;;;;;EAKE;A5Bi6EJ;;A4B95EE;EACE;A5Bg6EJ;;A4B77EE;EACE,gBA6Ee;A5Bm3EnB;;A4B97EE;EACE,YA0Ee;A5Bu3EnB;;A4B32EI;EA1FF;IACE,gBA+Ec;E5B03EhB;;E4Bv8EA;IACE,YA4Ec;E5B83EhB;AACF;;A6Br8EE;EACE;A7Bu8EJ;;AkC/8EE;EACE;AlCk9EJ;;AkC/8EE;;EAEE;AlCk9EJ;;AkC17EI;EACE,gBALK;AlCk8EX;;AiC59EE;EAGE;EACA;EW6IF;A5Ci1EF;;AiCz9EE;EACE;AjC49EJ;;AA58EA;;AACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AA+8EF;;AA58EA;EACE;EACA;EACA;EACA;AA+8EF;;AA78EA;EACE;EACA;EACA;EACA;AA+8EF;;AA78EA;EACE;EACA;EACA;EACA;AA+8EF;;AA78EA;EACE;IACE;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAED;IACD;IACA;IACA;IACA;IACA;IAEE;IACA;IACA;IACA;IACA;IACA;EAu8EF;AACF;;AAn8EA;EAAa;AAs8Eb;;AAr8EA;EAAO;EAAW;AA08ElB,C;AwD7oFA;;;;;;;;;EAAA;AAWA;ACHA;EACE;ACPF;ADSA;EACE;ACNF;ADSA;EACE;ACNF;ADSA;EACE;ACNF;ADSA;EACE;ACNF;ADmBA;EACE;AChBF;ADsBA;EACE;ACnBF;AD4CE;EATA;EACA;EACA;EACA;EACA;EACA;AC/BF;ADmCE;EATA;EACA;EACA;EACA;EACA;EACA;ACtBF;AD0BE;EATA;EACA;EACA;EACA;EACA;EACA;ACbF;ADiBE;EATA;EACA;EACA;EACA;EACA;EACA;ACJF;ADQE;EATA;EACA;EACA;EACA;EACA;EACA;ACKF;ADDE;EATA;EACA;EACA;EACA;EACA;EACA;ACcF;ADVE;EATA;EACA;EACA;EACA;EACA;EACA;ACuBF;ADnBE;EATA;EACA;EACA;EACA;EACA;EACA;ACgCF;AD5BE;EATA;EACA;EACA;EACA;EACA;EACA;ACyCF;AD5BA;EEuPM,OFtPuB;EEuPvB,QFvPiB;EEgRrB,MFhRkB;EEiRlB,SFjRwB;EAExB;EACA;EAEA;EACA;EAEA;EACA;EACA,UGxC+B;AFuEjC;AD5BA;EACE;AC+BF;AD5BA;;;;;;;;;;;;;;;EAeE;EACA;AC+BF;AD5BA;EACE;AC+BF;AD5BA;EACE;AC+BF;ADxBA;EACE;AC2BF;ADxBA;EACE;IACE;EC2BF;AACF;ADvBA;EACE;IACE;IACA;IACA;IACA;ECyBF;AACF;ADtBA;EACE;IACE;IACA;IACA;IACA;ECwBF;AACF;ADjBA;;EAEE;ACmBF;ADXA;EEkWM;ADnVN;ADXA;EACE;EACA;EAIA;ACWF;ADRA;EACE,2CI7K+B;AHwLjC;ADRA;EACE,0CI9K+B;AHyLjC;ADJA;EACE,4CK5L8B;AJmMhC;ADJA;EACE,4CKhM8B;AJuMhC;AFlMA;AOPA;;;;EAIE;ACNF;ADWA;EACE;EAEA;ACTF;ADiBA;;EAEE;ACdF;ADsBA;EACE;EAEA;ACpBF;ADwBA;EACE;ACrBF;AD6BA;EACE;AC1BF;AD6BA;EACE;EAEA;EAEA;AC5BF;ADgCA;EACE;AC7BF;ADiCA;;;;EAIE;EACA;AC9BF;AD8CA;;;;EAIE;EACA;AC3CF;AD8CA;EACE;EAEA;EAEA;EACA;AC7CF;ADgDA;EACE;AC7CF;ADgDA;;;;EAIE;EAEA;EACA;AC9CF;ADsDA;;;EAGE;EAEA;ACpDF;ADwDA;;;;;;;;;;;;;;;;;;EAkBE;ACrDF;ADwDA;;EAEE;ACrDF;ADwDA;EACE;EACA;EACA;EACA;EACA;EAAA;EACA;EACA;EACA;EAEA;ACtDF;ADyDA;EACE;ACtDF;AD0DA;;;EAGE;ACvDF;AD2DA;;EAEE;EAEA;ACzDF;AD+DA;;EAEE;EAEA;AC7DF;ADmEA;;EAEE;AChEF;ADsEA;;EAEE;ACnEF;AD2EA;EACE;EACA;ACxEF;AD2EA;;EAEE;ACxEF;ACxJA;EACE;EAEA;EACA;EACA;ACTF;ADYA;EACE;EACA;EAEA;UAAA;ACVF;ADaA;EACE;ACVF;ADaA;EACE;ACVF;ADaA;EN6CE;EACA;EAoKE,cMhNc;ENiNd,eMjNc;ENqPhB,aMrPgB;ENsPhB,gBMtPgB;ENgNd,eM/Me;ENgNf,gBMhNe;ENoPjB,cMpPiB;ENqPjB,iBMrPiB;EAEjB;EAEA;EACA;EACA;EACA;EAEA;EAEA;EAEA;EAEA;EAEA;EAEA;EAEA;EAEA;UAAA;ACbF;ACdA;EACE;AC9BF;ADiCA;EACE;EACA;AC9BF;ADiCA;;;;;;ER+OE,gBQzOgB;ER0OhB,mBQ1O4B;EAE5B,gBAxC6B;EA0C7B,gBAvC6B;ACQ/B;ADkCA;ERkOE,gBQjOgB;EAEhB,eA1C6B;ACS/B;ADoCA;ER4NE,gBQ3NgB;EAEhB,eA7C6B;ACU/B;ADsCA;EACE,eA9C6B;ACU/B;ADuCA;EACE,eA/C6B;ACW/B;ADuCA;EACE,eAhD6B;ACY/B;ADuCA;EACE,eAjD6B;ACa/B;ADuCA;EACE;ACpCF;ADuCA;;EAEE;EAEA;EAEA;EAEA;ACvCF;AD0CA;EACE;ACvCF;AD0CA;EACE;ACvCF;ACtDA;EACE;ACPF;ADiBI;EACE;ACdN;ADqBI;EACE;AClBN;AXsHI;EU7GA;IACE;ECLJ;AACF;AXyJI;EU9IA;IACE;ECRJ;AACF;AX2GI;EU7GA;IACE;ECKJ;AACF;AX+II;EU9IA;IACE;ECEJ;AACF;AXiGI;EU7GA;IACE;ECeJ;AACF;AXqII;EU9IA;IACE;ECYJ;AACF;AXuFI;EU7GA;IACE;ECyBJ;AACF;AX2HI;EU9IA;IACE;ECsBJ;AACF;Ad/BA;AeJA;EACE;EACA;EACA;EACA;EZ8NE,eY5Ne;EZ6Nf,gBY7Ne;EZiQjB,cYjQiB;EZkQjB,iBYlQiB;ACbnB;ADgBA;EACE;EACA;EACA;EACA;EZyNE,sCY5OM;EZ6ON,uCY7OM;EZ6QR,qCY7QQ;EZ8QR,wCY9QQ;ACUV;AbsOM;EACE;IAEI;IAGA;IAIF,8CY1PA;IZ4PA,4CY5PA;ECmBR;AACF;ADIA;EACE;EZoPA,qCY7QQ;ACyBV;ADKA;EACE;EZ6ME,sCY5OM;AC6BV;AbmNM;EACE;IAEI;IAOF,8CY1PA;ECmCR;AACF;ADAA;EACE;EZwME,uCY7OM;ACyCV;AbuMM;EACE;IAKI;IAMF,4CY5PA;EC+CR;AACF;ADNA;EACE;EZmOA,wCY9QQ;ACqDV;ADLA;EACE;EACA;EZ2NA,qCY7QQ;EZ8QR,wCY9QQ;AC2DV;ADJA;EACE;EACA;EZmLE,sCY5OM;EZ6ON,uCY7OM;ACiEV;Ab+KM;EACE;IAEI;IAGA;IAIF,8CY1PA;IZ4PA,4CY5PA;EC0ER;AACF;ADTA;EACE;EACA;EACA;EACA;EZkKE,cYhKc;EZiKd,eYjKc;EZqMhB,aYrMgB;EZsMhB,gBYtMgB;ACclB;ADXA;EACE;EACA;EACA;EACA;EZ6JE,oCY3OK;EZ4OL,qCY5OK;EZ4QP,mCY5QO;EZ6QP,sCY7QO;ACgGT;Ab+IM;EACE;IAEI;IAGA;IAIF,4CYzPD;IZ2PC,0CY3PD;ECyGP;AACF;ADvBA;EACE;EZwLA,mCY5QO;AC+GT;ADtBA;EACE;EZiJE,oCY3OK;ACmHT;Ab4HM;EACE;IAEI;IAOF,4CYzPD;ECyHP;AACF;AD3BA;EACE;EZ4IE,qCY5OK;AC+HT;AbgHM;EACE;IAKI;IAMF,0CY3PD;ECqIP;AACF;ADjCA;EACE;EZuKA,sCY7QO;AC2IT;ADhCA;EACE;EACA;EZ+JA,mCY5QO;EZ6QP,sCY7QO;ACiJT;AD/BA;EACE;EACA;EZuHE,oCY3OK;EZ4OL,qCY5OK;ACuJT;AbwFM;EACE;IAEI;IAGA;IAIF,4CYzPD;IZ2PC,0CY3PD;ECgKP;AACF;AC9JI;EdmaE;Ae/aN;ADgBI;Ed+ZE;Ae3aN;ADgBI;Ed6YE;AezZN;Af4LW;EAgOL;AezZN;ADaI;EdgZE;AezZN;AfqLW;EAuOL;AezZN;Af4GI;EclHA;IdmaE;EexZJ;;EDPE;Id+ZE;EepZJ;;EDPE;Id6YE;EelYJ;EfqKS;IAgOL;EelYJ;;EDVE;IdgZE;EelYJ;Ef8JS;IAuOL;EelYJ;AACF;AfoFI;EclHA;IdmaE;EejYJ;;ED9BE;Id+ZE;Ee7XJ;;ED9BE;Id6YE;Ee3WJ;Ef8IS;IAgOL;Ee3WJ;;EDjCE;IdgZE;Ee3WJ;EfuIS;IAuOL;Ee3WJ;AACF;Af6DI;EclHA;IdmaE;Ee1WJ;;EDrDE;Id+ZE;EetWJ;;EDrDE;Id6YE;EepVJ;EfuHS;IAgOL;EepVJ;;EDxDE;IdgZE;EepVJ;EfgHS;IAuOL;EepVJ;AACF;AfsCI;EclHA;IdmaE;EenVJ;;ED5EE;Id+ZE;Ee/UJ;;ED5EE;Id6YE;Ee7TJ;EfgGS;IAgOL;Ee7TJ;;ED/EE;IdgZE;Ee7TJ;EfyFS;IAuOL;Ee7TJ;AACF;ACnGI;EACE;ACbN;ADgBI;EACE;ACbN;ADgBI;EACE;ACbN;ADgBI;EACE;ACbN;ADgBI;EACE;ACbN;ADgBI;EACE;ACbN;ADgBI;EACE;ACbN;ADgBI;EACE;ACbN;AjBkGI;EgBlHA;IACE;ECoBJ;;EDjBE;IACE;ECoBJ;;EDjBE;IACE;ECoBJ;;EDjBE;IACE;ECoBJ;;EDjBE;IACE;ECoBJ;;EDjBE;IACE;ECoBJ;;EDjBE;IACE;ECoBJ;;EDjBE;IACE;ECoBJ;AACF;AjBgEI;EgBlHA;IACE;ECqDJ;;EDlDE;IACE;ECqDJ;;EDlDE;IACE;ECqDJ;;EDlDE;IACE;ECqDJ;;EDlDE;IACE;ECqDJ;;EDlDE;IACE;ECqDJ;;EDlDE;IACE;ECqDJ;;EDlDE;IACE;ECqDJ;AACF;AjB+BI;EgBlHA;IACE;ECsFJ;;EDnFE;IACE;ECsFJ;;EDnFE;IACE;ECsFJ;;EDnFE;IACE;ECsFJ;;EDnFE;IACE;ECsFJ;;EDnFE;IACE;ECsFJ;;EDnFE;IACE;ECsFJ;;EDnFE;IACE;ECsFJ;AACF;AjBFI;EgBlHA;IACE;ECuHJ;;EDpHE;IACE;ECuHJ;;EDpHE;IACE;ECuHJ;;EDpHE;IACE;ECuHJ;;EDpHE;IACE;ECuHJ;;EDpHE;IACE;ECuHJ;;EDpHE;IACE;ECuHJ;;EDpHE;IACE;ECuHJ;AACF;ACrJI;EACE;EACA;ACbN;ADgBI;EACE;EACA;ACbN;ADgBI;EACE;EACA;ACbN;AnBmHI;EkBlHA;IACE;IACA;ECGJ;;EDAE;IACE;IACA;ECGJ;;EDAE;IACE;IACA;ECGJ;AACF;AnBkGI;EkBlHA;IACE;IACA;ECmBJ;;EDhBE;IACE;IACA;ECmBJ;;EDhBE;IACE;IACA;ECmBJ;AACF;AnBkFI;EkBlHA;IACE;IACA;ECmCJ;;EDhCE;IACE;IACA;ECmCJ;;EDhCE;IACE;IACA;ECmCJ;AACF;AnBkEI;EkBlHA;IACE;IACA;ECmDJ;;EDhDE;IACE;IACA;ECmDJ;;EDhDE;IACE;IACA;ECmDJ;AACF;ACtEA;EACE;ACPF;ADUA;EACE;ACPF;ADUA;EACE;ACPF;ADUA;EACE;ACPF;ADUA;EACE;ACPF;ADUA;EACE;ACPF;ADcA;EACE;ACXF;ADcA;EACE;ACXF;ADcA;EACE;ACXF;ADkBA;EACE;ACfF;ADkBA;EACE;ACfF;ADkBA;EACE;ACfF;ADkBA;EACE;ACfF;ADkBA;EACE;ACfF;ADkBA;EACE;ACfF;ADsBA;EACE;ACnBF;ADsBA;EACE;ACnBF;ADsBA;EACE;ACnBF;ADsBA;EACE;ACnBF;ADsBA;EACE;ACnBF;AxBpDA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAFF;AAIA;EACI;AADJ;AAGA;EACE;EACA;AAAF;AAEA;EACE;AACF;AACA;EACE;EACA;EACA;EACA;AAEF;AAAA;EACE;EACA;EACA;EACA;EACA;AAGF;AADA;EACE;EACA;EACA;EACA;AAIF;AAFA;EACE;EACA;EACA;EACA;AAKF;AAHA;EACE;EACA;EACA;EACA;AAMF;AAJA;EACE;EACA;EACA;EACA;AAOF;AALA;EACE;EACA;EACA;EACA;AAQF;AANA;EACE;EACA;EACA;EACA;AASF;AAPA;EACE;AAUF,C","file":"styles.css","sourcesContent":["// This contains all of the styles for the badge\r\n// rather than just the color/theme because of\r\n// no style sheet support for directives.\r\n@use 'sass:color';\r\n@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/style/private';\r\n@use '../../cdk/a11y';\r\n\r\n$font-size: 12px;\r\n$font-weight: 600;\r\n$default-size: 22px !default;\r\n$small-size: $default-size - 6;\r\n$large-size: $default-size + 6;\r\n$_badge-structure-emitted: false !default;\r\n\r\n// Mixin for building offset given different sizes\r\n@mixin _badge-size($size) {\r\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\r\n  // stylelint-disable material/no-ampersand-beyond-selector-start\r\n  .mat-badge-content {\r\n    width: $size;\r\n    height: $size;\r\n    line-height: $size;\r\n  }\r\n\r\n  &.mat-badge-above {\r\n    .mat-badge-content {\r\n      top: private.private-div(-$size, 2);\r\n    }\r\n  }\r\n\r\n  &.mat-badge-below {\r\n    .mat-badge-content {\r\n      bottom: private.private-div(-$size, 2);\r\n    }\r\n  }\r\n\r\n  &.mat-badge-before {\r\n    .mat-badge-content {\r\n      left: -$size;\r\n    }\r\n  }\r\n\r\n  [dir='rtl'] &.mat-badge-before {\r\n    .mat-badge-content {\r\n      left: auto;\r\n      right: -$size;\r\n    }\r\n  }\r\n\r\n  &.mat-badge-after {\r\n    .mat-badge-content {\r\n      right: -$size;\r\n    }\r\n  }\r\n\r\n  [dir='rtl'] &.mat-badge-after {\r\n    .mat-badge-content {\r\n      right: auto;\r\n      left: -$size;\r\n    }\r\n  }\r\n\r\n  &.mat-badge-overlap {\r\n    &.mat-badge-before {\r\n      .mat-badge-content {\r\n        left: private.private-div(-$size, 2);\r\n      }\r\n    }\r\n\r\n    [dir='rtl'] &.mat-badge-before {\r\n      .mat-badge-content {\r\n        left: auto;\r\n        right: private.private-div(-$size, 2);\r\n      }\r\n    }\r\n\r\n    &.mat-badge-after {\r\n      .mat-badge-content {\r\n        right: private.private-div(-$size, 2);\r\n      }\r\n    }\r\n\r\n    [dir='rtl'] &.mat-badge-after {\r\n      .mat-badge-content {\r\n        right: auto;\r\n        left: private.private-div(-$size, 2);\r\n      }\r\n    }\r\n  }\r\n  // stylelint-enable\r\n}\r\n\r\n// Structural styles for the badge. They have to be included as a part of the theme,\r\n// because the badge is a directive and we have no other way of attaching styles to it.\r\n@mixin _badge-structure {\r\n  .mat-badge {\r\n    position: relative;\r\n  }\r\n\r\n  .mat-badge-hidden {\r\n    .mat-badge-content {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .mat-badge-content {\r\n    position: absolute;\r\n    text-align: center;\r\n    display: inline-block;\r\n    border-radius: 50%;\r\n    transition: transform 200ms ease-in-out;\r\n    transform: scale(0.6);\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .ng-animate-disabled .mat-badge-content,\r\n  .mat-badge-content._mat-animation-noopable {\r\n    transition: none;\r\n  }\r\n\r\n  // The active class is added after the element is added\r\n  // so it can animate scale to default\r\n  .mat-badge-content.mat-badge-active {\r\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\r\n    transform: none;\r\n  }\r\n\r\n  .mat-badge-small {\r\n    @include _badge-size($small-size);\r\n  }\r\n\r\n  .mat-badge-medium {\r\n    @include _badge-size($default-size);\r\n  }\r\n\r\n  .mat-badge-large {\r\n    @include _badge-size($large-size);\r\n  }\r\n}\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $primary: map.get($config, primary);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-badge-content {\r\n    color: theming.get-color-from-palette($primary, default-contrast);\r\n    background: theming.get-color-from-palette($primary);\r\n\r\n    @include a11y.high-contrast(active, off) {\r\n      outline: solid 1px;\r\n      border-radius: 0;\r\n    }\r\n  }\r\n\r\n  .mat-badge-accent {\r\n    .mat-badge-content {\r\n      background: theming.get-color-from-palette($accent);\r\n      color: theming.get-color-from-palette($accent, default-contrast);\r\n    }\r\n  }\r\n\r\n  .mat-badge-warn {\r\n    .mat-badge-content {\r\n      color: theming.get-color-from-palette($warn, default-contrast);\r\n      background: theming.get-color-from-palette($warn);\r\n    }\r\n  }\r\n\r\n  .mat-badge-disabled {\r\n    .mat-badge-content {\r\n      $app-background: theming.get-color-from-palette($background, 'background');\r\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\r\n\r\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\r\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\r\n      // we convert it into a solid color by taking the opacity from the rgba value and using\r\n      // the value to determine the percentage of the background to put into foreground when\r\n      // mixing the colors together.\r\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\r\n        $badge-opacity: opacity($badge-color);\r\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\r\n      }\r\n      @else {\r\n        background: $badge-color;\r\n      }\r\n\r\n      color: theming.get-color-from-palette($foreground, disabled-text);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-badge-content {\r\n    font-weight: $font-weight;\r\n    font-size: $font-size;\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n  .mat-badge-small .mat-badge-content {\r\n    // Set the font size to 75% of the original.\r\n    font-size: $font-size * 0.75;\r\n  }\r\n\r\n  .mat-badge-large .mat-badge-content {\r\n    font-size: $font-size * 2;\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    // Try to reduce the number of times that the structural styles are emitted.\r\n    @if not $_badge-structure-emitted {\r\n      @include _badge-structure;\r\n\r\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\r\n      // inclusion might be inside of a theme class which will exclude the structural styles\r\n      // from all other themes.\r\n      @if not & {\r\n        $_badge-structure-emitted: true !global;\r\n      }\r\n    }\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n",".mat-badge-content {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-badge-small .mat-badge-content {\n  font-size: 9px;\n}\n\n.mat-badge-large .mat-badge-content {\n  font-size: 24px;\n}\n\n.mat-h1, .mat-headline, .mat-typography h1 {\n  font: 400 24px / 32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n\n.mat-h2, .mat-title, .mat-typography h2 {\n  font: 500 20px / 32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\n  font: 400 16px / 28px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\n  font: 400 15px / 24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n\n.mat-h5, .mat-typography h5 {\n  font: 400 calc(14px * 0.83) / 20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px;\n}\n\n.mat-h6, .mat-typography h6 {\n  font: 400 calc(14px * 0.67) / 20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px;\n}\n\n.mat-body-strong, .mat-body-2 {\n  font: 500 14px / 24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-body, .mat-body-1, .mat-typography {\n  font: 400 14px / 20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-body p, .mat-body-1 p, .mat-typography p {\n  margin: 0 0 12px;\n}\n\n.mat-small, .mat-caption {\n  font: 400 12px / 20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-display-4, .mat-typography .mat-display-4 {\n  font: 300 112px / 112px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.05em;\n  margin: 0 0 56px;\n}\n\n.mat-display-3, .mat-typography .mat-display-3 {\n  font: 400 56px / 56px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.02em;\n  margin: 0 0 64px;\n}\n\n.mat-display-2, .mat-typography .mat-display-2 {\n  font: 400 45px / 48px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.005em;\n  margin: 0 0 64px;\n}\n\n.mat-display-1, .mat-typography .mat-display-1 {\n  font: 400 34px / 40px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 64px;\n}\n\n.mat-bottom-sheet-container {\n  font: 400 14px / 20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n.mat-flat-button, .mat-fab, .mat-mini-fab {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-button-toggle {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-card {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-card-title {\n  font-size: 24px;\n  font-weight: 500;\n}\n\n.mat-card-header .mat-card-title {\n  font-size: 20px;\n}\n\n.mat-card-subtitle,\n.mat-card-content {\n  font-size: 14px;\n}\n\n.mat-checkbox {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-checkbox-layout .mat-checkbox-label {\n  line-height: 24px;\n}\n\n.mat-chip {\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-chip .mat-chip-trailing-icon.mat-icon,\n.mat-chip .mat-chip-remove.mat-icon {\n  font-size: 18px;\n}\n\n.mat-table {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-header-cell {\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.mat-cell, .mat-footer-cell {\n  font-size: 14px;\n}\n\n.mat-calendar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-calendar-body {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-dialog-title {\n  font: 500 20px / 32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-expansion-panel-header {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-expansion-panel-content {\n  font: 400 14px / 20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-form-field {\n  font-size: inherit;\n  font-weight: 400;\n  line-height: 1.125;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-form-field-wrapper {\n  padding-bottom: 1.34375em;\n}\n\n.mat-form-field-prefix .mat-icon,\n.mat-form-field-suffix .mat-icon {\n  font-size: 150%;\n  line-height: 1.125;\n}\n.mat-form-field-prefix .mat-icon-button,\n.mat-form-field-suffix .mat-icon-button {\n  height: 1.5em;\n  width: 1.5em;\n}\n.mat-form-field-prefix .mat-icon-button .mat-icon,\n.mat-form-field-suffix .mat-icon-button .mat-icon {\n  height: 1.125em;\n  line-height: 1.125;\n}\n\n.mat-form-field-infix {\n  padding: 0.5em 0;\n  border-top: 0.84375em solid transparent;\n}\n\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34374em) scale(0.75);\n  width: 133.3333433333%;\n}\n\n.mat-form-field-label-wrapper {\n  top: -0.84375em;\n  padding-top: 0.84375em;\n}\n\n.mat-form-field-label {\n  top: 1.34375em;\n}\n\n.mat-form-field-underline {\n  bottom: 1.34375em;\n}\n\n.mat-form-field-subscript-wrapper {\n  font-size: 75%;\n  margin-top: 0.6666666667em;\n  top: calc(100% - 1.7916666667em);\n}\n\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-infix {\n  padding: 0.4375em 0;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n  -ms-transform: translateY(-1.28125em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\n  -ms-transform: translateY(-1.28124em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\n  -ms-transform: translateY(-1.28123em) scale(0.75);\n  width: 133.3333533333%;\n}\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  top: 1.28125em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\n  margin-top: 0.5416666667em;\n  top: calc(100% - 1.6666666667em);\n}\n\n@media print {\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28122em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28121em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.2812em) scale(0.75);\n  }\n}\n.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.75em 0;\n}\n.mat-form-field-appearance-fill .mat-form-field-label {\n  top: 1.09375em;\n  margin-top: -0.5em;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n\n.mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 1em 0 1em 0;\n}\n.mat-form-field-appearance-outline .mat-form-field-label {\n  top: 1.84375em;\n  margin-top: -0.25em;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px;\n}\n.mat-grid-tile-header .mat-line,\n.mat-grid-tile-footer .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header .mat-line:nth-child(n+2),\n.mat-grid-tile-footer .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n\ninput.mat-input-element {\n  margin-top: -0.0625em;\n}\n\n.mat-menu-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n}\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n}\n\n.mat-radio-button {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-select {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-select-trigger {\n  height: 1.125em;\n}\n\n.mat-slide-toggle-content {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-slider-thumb-label-text {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.mat-stepper-vertical, .mat-stepper-horizontal {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-step-label {\n  font-size: 14px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error {\n  font-weight: normal;\n}\n\n.mat-step-label-error {\n  font-size: 14px;\n}\n\n.mat-step-label-selected {\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-tab-group {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-tab-label, .mat-tab-link {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font: 500 20px / 32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0;\n}\n\n.mat-tooltip {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 10px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\n\n.mat-tooltip-handset {\n  font-size: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n\n.mat-list-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-list-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-list-base .mat-list-item {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-list-option {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-list-base[dense] .mat-list-item {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.mat-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 16px;\n}\n\n.mat-optgroup-label {\n  font: 500 14px / 24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-simple-snackbar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n}\n\n.mat-simple-snackbar-action {\n  line-height: 1;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500;\n}\n\n.mat-tree {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  font-weight: 400;\n  font-size: 14px;\n}\n\n.mat-ripple {\n  overflow: hidden;\n  position: relative;\n}\n.mat-ripple:not(:empty) {\n  transform: translateZ(0);\n}\n\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible;\n}\n\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n}\n.cdk-high-contrast-active .mat-ripple-element {\n  display: none;\n}\n\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  white-space: nowrap;\n  outline: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000;\n}\n.cdk-overlay-container:empty {\n  display: none;\n}\n\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000;\n}\n\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0;\n}\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 1;\n}\n.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0.6;\n}\n\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32);\n}\n\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0;\n}\n\n.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px;\n}\n\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll;\n}\n\ntextarea.cdk-textarea-autosize {\n  resize: none;\n}\n\ntextarea.cdk-textarea-autosize-measuring {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: auto !important;\n  overflow: hidden !important;\n}\n\ntextarea.cdk-textarea-autosize-measuring-firefox {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: 0 !important;\n}\n\n@keyframes cdk-text-field-autofill-start {\n  /*!*/\n}\n@keyframes cdk-text-field-autofill-end {\n  /*!*/\n}\n.cdk-text-field-autofill-monitored:-webkit-autofill {\n  animation: cdk-text-field-autofill-start 0s 1ms;\n}\n\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n  animation: cdk-text-field-autofill-end 0s 1ms;\n}\n\n.mat-focus-indicator {\n  position: relative;\n}\n\n.mat-mdc-focus-indicator {\n  position: relative;\n}\n\n.mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.mat-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-option.mat-active {\n  background: rgba(0, 0, 0, 0.04);\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-option.mat-option-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #3f51b5;\n}\n\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #ff4081;\n}\n\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #f44336;\n}\n\n.mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-pseudo-checkbox::after {\n  color: #fafafa;\n}\n\n.mat-pseudo-checkbox-disabled {\n  color: #b0b0b0;\n}\n\n.mat-primary .mat-pseudo-checkbox-checked,\n.mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #3f51b5;\n}\n\n.mat-pseudo-checkbox-checked,\n.mat-pseudo-checkbox-indeterminate,\n.mat-accent .mat-pseudo-checkbox-checked,\n.mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #ff4081;\n}\n\n.mat-warn .mat-pseudo-checkbox-checked,\n.mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #f44336;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #b0b0b0;\n}\n\n.mat-app-background {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker {\n  display: none;\n}\n\n.mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-autocomplete-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n  background: white;\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-badge {\n  position: relative;\n}\n\n.mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n\n.mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled .mat-badge-content,\n.mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active {\n  transform: none;\n}\n\n.mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content {\n  color: white;\n  background: #3f51b5;\n}\n.cdk-high-contrast-active .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent .mat-badge-content {\n  background: #ff4081;\n  color: white;\n}\n\n.mat-badge-warn .mat-badge-content {\n  color: white;\n  background: #f44336;\n}\n\n.mat-badge-disabled .mat-badge-content {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-button, .mat-icon-button, .mat-stroked-button {\n  color: inherit;\n  background: transparent;\n}\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n  color: #3f51b5;\n}\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\n  color: #ff4081;\n}\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\n  color: #f44336;\n}\n.mat-button.mat-primary.mat-button-disabled, .mat-button.mat-accent.mat-button-disabled, .mat-button.mat-warn.mat-button-disabled, .mat-button.mat-button-disabled.mat-button-disabled, .mat-icon-button.mat-primary.mat-button-disabled, .mat-icon-button.mat-accent.mat-button-disabled, .mat-icon-button.mat-warn.mat-button-disabled, .mat-icon-button.mat-button-disabled.mat-button-disabled, .mat-stroked-button.mat-primary.mat-button-disabled, .mat-stroked-button.mat-accent.mat-button-disabled, .mat-stroked-button.mat-warn.mat-button-disabled, .mat-stroked-button.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n  background-color: #3f51b5;\n}\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n  background-color: #ff4081;\n}\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n  background-color: #f44336;\n}\n.mat-button.mat-button-disabled .mat-button-focus-overlay, .mat-icon-button.mat-button-disabled .mat-button-focus-overlay, .mat-stroked-button.mat-button-disabled .mat-button-focus-overlay {\n  background-color: transparent;\n}\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\n  opacity: 0.1;\n  background-color: currentColor;\n}\n\n.mat-button-focus-overlay {\n  background: black;\n}\n\n.mat-stroked-button:not(.mat-button-disabled) {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white;\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  color: white;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  color: white;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  color: white;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  background-color: #3f51b5;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  background-color: #ff4081;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  background-color: #f44336;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-stroked-button:not([class*=mat-elevation-z]), .mat-flat-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-raised-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-fab:not([class*=mat-elevation-z]), .mat-mini-fab:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]), .mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-fab.mat-button-disabled:not([class*=mat-elevation-z]), .mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone,\n.mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  box-shadow: none;\n}\n\n.mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: black;\n}\n\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-button-toggle-disabled {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: white;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #bdbdbd;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n  line-height: 48px;\n}\n\n.mat-card {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-card:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-card.mat-card-flat:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-checkbox-checkmark {\n  fill: #fafafa;\n}\n\n.mat-checkbox-checkmark-path {\n  stroke: #fafafa !important;\n}\n\n.mat-checkbox-mixedmark {\n  background-color: #fafafa;\n}\n\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #3f51b5;\n}\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #ff4081;\n}\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336;\n}\n\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0;\n}\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0;\n}\n.mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-checkbox .mat-ripple-element {\n  background-color: black;\n}\n\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #3f51b5;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #ff4081;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #f44336;\n}\n\n.mat-chip.mat-standard-chip {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-chip.mat-standard-chip .mat-chip-remove {\n  color: rgba(0, 0, 0, 0.87);\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n  opacity: 0.54;\n}\n.mat-chip.mat-standard-chip.mat-chip-disabled {\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip::after {\n  background: black;\n}\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #3f51b5;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #f44336;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #ff4081;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-table {\n  background: white;\n}\n\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\nmat-header-row, mat-row, mat-footer-row,\n[mat-header-row], [mat-row], [mat-footer-row],\n.mat-table-sticky {\n  background: inherit;\n}\n\nmat-row, mat-header-row, mat-footer-row,\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-header-cell {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-cell, .mat-footer-cell {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-calendar-arrow {\n  fill: rgba(0, 0, 0, 0.54);\n}\n\n.mat-datepicker-toggle,\n.mat-datepicker-content .mat-calendar-next-button,\n.mat-datepicker-content .mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-calendar-table-header {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-calendar-table-header-divider::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n\n.mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-calendar-body-cell-content,\n.mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-calendar-body-in-preview {\n  color: rgba(0, 0, 0, 0.24);\n}\n\n.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n\n.mat-calendar-body-in-range::before {\n  background: rgba(63, 81, 181, 0.2);\n}\n\n.mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected {\n  background-color: #3f51b5;\n  color: white;\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(63, 81, 181, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(63, 81, 181, 0.3);\n}\n\n.mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: rgba(255, 64, 129, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: #ff4081;\n  color: white;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(255, 64, 129, 0.4);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 64, 129, 0.3);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: rgba(244, 67, 54, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: #f44336;\n  color: white;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(244, 67, 54, 0.4);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(244, 67, 54, 0.3);\n}\n\n.mat-datepicker-content-touch {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active {\n  color: #3f51b5;\n}\n.mat-datepicker-toggle-active.mat-accent {\n  color: #ff4081;\n}\n.mat-datepicker-toggle-active.mat-warn {\n  color: #f44336;\n}\n\n.mat-date-range-input-inner[disabled] {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-divider-vertical {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-expansion-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: white;\n  }\n}\n.mat-expansion-panel-header-title {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-expansion-panel-header-description,\n.mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n\n.mat-expansion-panel-header {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded {\n  height: 64px;\n}\n\n.mat-form-field-label {\n  color: rgba(0, 0, 0, 0.6);\n}\n\n.mat-hint {\n  color: rgba(0, 0, 0, 0.6);\n}\n\n.mat-form-field.mat-focused .mat-form-field-label {\n  color: #3f51b5;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n  color: #ff4081;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n  color: #f44336;\n}\n\n.mat-focused .mat-form-field-required-marker {\n  color: #ff4081;\n}\n\n.mat-form-field-ripple {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #3f51b5;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n  background-color: #ff4081;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n  background-color: #f44336;\n}\n\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #3f51b5;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #ff4081;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #f44336;\n}\n\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #f44336;\n}\n\n.mat-error {\n  color: #f44336;\n}\n\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n.mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.02);\n}\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent;\n}\n\n.mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.12);\n}\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #3f51b5;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #ff4081;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.06);\n}\n\n.mat-icon.mat-primary {\n  color: #3f51b5;\n}\n.mat-icon.mat-accent {\n  color: #ff4081;\n}\n.mat-icon.mat-warn {\n  color: #f44336;\n}\n\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-input-element:disabled,\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-input-element {\n  caret-color: #3f51b5;\n}\n.mat-input-element::placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element::-webkit-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element:-ms-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n\n.mat-form-field.mat-accent .mat-input-element {\n  caret-color: #ff4081;\n}\n\n.mat-form-field.mat-warn .mat-input-element,\n.mat-form-field-invalid .mat-input-element {\n  caret-color: #f44336;\n}\n\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #f44336;\n}\n\n.mat-list-base .mat-list-item {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-list-base .mat-list-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-list-base .mat-subheader {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-list-item-disabled {\n  background-color: #eeeeee;\n}\n\n.mat-list-option:hover, .mat-list-option:focus,\n.mat-nav-list .mat-list-item:hover,\n.mat-nav-list .mat-list-item:focus,\n.mat-action-list .mat-list-item:hover,\n.mat-action-list .mat-list-item:focus {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n.mat-list-single-selected-option, .mat-list-single-selected-option:hover, .mat-list-single-selected-option:focus {\n  background: rgba(0, 0, 0, 0.12);\n}\n\n.mat-menu-panel {\n  background: white;\n}\n.mat-menu-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-menu-item[disabled],\n.mat-menu-item[disabled] .mat-menu-submenu-icon,\n.mat-menu-item[disabled] .mat-icon-no-color {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-menu-item .mat-icon-no-color,\n.mat-menu-submenu-icon {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-menu-item:hover:not([disabled]),\n.mat-menu-item.cdk-program-focused:not([disabled]),\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n.mat-paginator {\n  background: white;\n}\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-paginator-decrement,\n.mat-paginator-increment {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n\n.mat-paginator-first,\n.mat-paginator-last {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n\n.mat-icon-button[disabled] .mat-paginator-decrement,\n.mat-icon-button[disabled] .mat-paginator-increment,\n.mat-icon-button[disabled] .mat-paginator-first,\n.mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-paginator-container {\n  min-height: 56px;\n}\n\n.mat-progress-bar-background {\n  fill: #cbd0e9;\n}\n\n.mat-progress-bar-buffer {\n  background-color: #cbd0e9;\n}\n\n.mat-progress-bar-fill::after {\n  background-color: #3f51b5;\n}\n\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #fbccdc;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #fbccdc;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #ff4081;\n}\n\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #f9ccc9;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #f9ccc9;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336;\n}\n\n.mat-progress-spinner circle, .mat-spinner circle {\n  stroke: #3f51b5;\n}\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\n  stroke: #ff4081;\n}\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\n  stroke: #f44336;\n}\n\n.mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #3f51b5;\n}\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #3f51b5;\n}\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #ff4081;\n}\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #ff4081;\n}\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336;\n}\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #f44336;\n}\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button .mat-ripple-element {\n  background-color: black;\n}\n\n.mat-select-value {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-select-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n\n.mat-select-disabled .mat-select-value {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-select-arrow {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-select-panel {\n  background: white;\n}\n.mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n  background: rgba(0, 0, 0, 0.12);\n}\n\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #3f51b5;\n}\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #ff4081;\n}\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-drawer-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-drawer {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-drawer.mat-drawer-push {\n  background-color: white;\n}\n.mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n\n[dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n[dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #ff4081;\n}\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(255, 64, 129, 0.54);\n}\n.mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #ff4081;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #3f51b5;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(63, 81, 181, 0.54);\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #3f51b5;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #f44336;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.54);\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #f44336;\n}\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: black;\n}\n\n.mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #fafafa;\n}\n\n.mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n\n.mat-primary .mat-slider-track-fill,\n.mat-primary .mat-slider-thumb,\n.mat-primary .mat-slider-thumb-label {\n  background-color: #3f51b5;\n}\n.mat-primary .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-primary .mat-slider-focus-ring {\n  background-color: rgba(63, 81, 181, 0.2);\n}\n\n.mat-accent .mat-slider-track-fill,\n.mat-accent .mat-slider-thumb,\n.mat-accent .mat-slider-thumb-label {\n  background-color: #ff4081;\n}\n.mat-accent .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-accent .mat-slider-focus-ring {\n  background-color: rgba(255, 64, 129, 0.2);\n}\n\n.mat-warn .mat-slider-track-fill,\n.mat-warn .mat-slider-thumb,\n.mat-warn .mat-slider-thumb-label {\n  background-color: #f44336;\n}\n.mat-warn .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-warn .mat-slider-focus-ring {\n  background-color: rgba(244, 67, 54, 0.2);\n}\n\n.mat-slider:hover .mat-slider-track-background,\n.mat-slider.cdk-focused .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-slider-disabled .mat-slider-track-background,\n.mat-slider-disabled .mat-slider-track-fill,\n.mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n\n.mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent;\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n}\n\n.mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(0, 0, 0, 0.7);\n}\n\n.mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n\n.mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .mat-step-header:hover {\n    background: none;\n  }\n}\n.mat-step-header .mat-step-label,\n.mat-step-header .mat-step-optional {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-step-header .mat-step-icon {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.mat-step-header .mat-step-icon-selected,\n.mat-step-header .mat-step-icon-state-done,\n.mat-step-header .mat-step-icon-state-edit {\n  background-color: #3f51b5;\n  color: white;\n}\n.mat-step-header.mat-accent .mat-step-icon {\n  color: white;\n}\n.mat-step-header.mat-accent .mat-step-icon-selected,\n.mat-step-header.mat-accent .mat-step-icon-state-done,\n.mat-step-header.mat-accent .mat-step-icon-state-edit {\n  background-color: #ff4081;\n  color: white;\n}\n.mat-step-header.mat-warn .mat-step-icon {\n  color: white;\n}\n.mat-step-header.mat-warn .mat-step-icon-selected,\n.mat-step-header.mat-warn .mat-step-icon-state-done,\n.mat-step-header.mat-warn .mat-step-icon-state-edit {\n  background-color: #f44336;\n  color: white;\n}\n.mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #f44336;\n}\n.mat-step-header .mat-step-label.mat-step-label-active {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-step-header .mat-step-label.mat-step-label-error {\n  color: #f44336;\n}\n\n.mat-stepper-horizontal, .mat-stepper-vertical {\n  background-color: white;\n}\n\n.mat-stepper-vertical-line::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-horizontal-stepper-header::before,\n.mat-horizontal-stepper-header::after,\n.mat-stepper-horizontal-line {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-horizontal-stepper-header {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n.mat-vertical-stepper-header {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after, .mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n  top: 36px;\n}\n\n.mat-sort-header-arrow {\n  color: #757575;\n}\n\n.mat-tab-nav-bar,\n.mat-tab-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\n.mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: none;\n}\n\n.mat-tab-label, .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-tab-group[class*=mat-background-] .mat-tab-header,\n.mat-tab-nav-bar[class*=mat-background-] {\n  border-bottom: none;\n  border-top: none;\n}\n\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(197, 202, 233, 0.3);\n}\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #3f51b5;\n}\n.mat-tab-group.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #ff4081;\n}\n.mat-tab-group.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(197, 202, 233, 0.3);\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header, .mat-tab-group.mat-background-primary > .mat-tab-link-container, .mat-tab-group.mat-background-primary > .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header, .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination {\n  background-color: #3f51b5;\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label, .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label, .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-focus-indicator::before, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-group.mat-background-primary > .mat-tab-header-pagination .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header, .mat-tab-group.mat-background-accent > .mat-tab-link-container, .mat-tab-group.mat-background-accent > .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header, .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination {\n  background-color: #ff4081;\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label, .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label, .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-focus-indicator::before, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-group.mat-background-accent > .mat-tab-header-pagination .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header, .mat-tab-group.mat-background-warn > .mat-tab-link-container, .mat-tab-group.mat-background-warn > .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header, .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label, .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label, .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-focus-indicator::before, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-focus-indicator::before,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-group.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-group.mat-background-warn > .mat-tab-header-pagination .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-ripple-element,\n.mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-toolbar.mat-primary {\n  background: #3f51b5;\n  color: white;\n}\n.mat-toolbar.mat-accent {\n  background: #ff4081;\n  color: white;\n}\n.mat-toolbar.mat-warn {\n  background: #f44336;\n  color: white;\n}\n.mat-toolbar .mat-form-field-underline,\n.mat-toolbar .mat-form-field-ripple,\n.mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.mat-toolbar .mat-form-field-label,\n.mat-toolbar .mat-focused .mat-form-field-label,\n.mat-toolbar .mat-select-value,\n.mat-toolbar .mat-select-arrow,\n.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows {\n  min-height: 64px;\n}\n\n.mat-toolbar-row, .mat-toolbar-single-row {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows {\n    min-height: 56px;\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 56px;\n  }\n}\n.mat-tooltip {\n  background: rgba(97, 97, 97, 0.9);\n}\n\n.mat-tree {\n  background: white;\n}\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-tree-node {\n  min-height: 48px;\n}\n\n.mat-snack-bar-container {\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-simple-snackbar-action {\n  color: #ff4081;\n}\n\n/** Ionic CSS Variables **/\n:root {\n  /** primary **/\n  --ion-color-primary: #3880FF;\n  --ion-color-primary-rgb: 56, 128, 255;\n  --ion-color-primary-contrast: #ffffff;\n  --ion-color-primary-contrast-rgb: 255, 255, 255;\n  --ion-color-primary-shade: #3171e0;\n  --ion-color-primary-tint: #4c8dff;\n  /** secondary **/\n  --ion-color-secondary: #3dc2ff;\n  --ion-color-secondary-rgb: 61, 194, 255;\n  --ion-color-secondary-contrast: #ffffff;\n  --ion-color-secondary-contrast-rgb: 255, 255, 255;\n  --ion-color-secondary-shade: #36abe0;\n  --ion-color-secondary-tint: #50c8ff;\n  /** tertiary **/\n  --ion-color-tertiary: #6976EC;\n  --ion-color-tertiary-rgb: 82, 96, 255;\n  --ion-color-tertiary-contrast: #ffffff;\n  --ion-color-tertiary-contrast-rgb: 255, 255, 255;\n  --ion-color-tertiary-shade: #4854e0;\n  --ion-color-tertiary-tint: #6370ff;\n  /** success **/\n  --ion-color-success: #2dd36f;\n  --ion-color-success-rgb: 45, 211, 111;\n  --ion-color-success-contrast: #ffffff;\n  --ion-color-success-contrast-rgb: 255, 255, 255;\n  --ion-color-success-shade: #28ba62;\n  --ion-color-success-tint: #42d77d;\n  /** warning **/\n  --ion-color-warning: #ffc409;\n  --ion-color-warning-rgb: 255, 196, 9;\n  --ion-color-warning-contrast: #000000;\n  --ion-color-warning-contrast-rgb: 0, 0, 0;\n  --ion-color-warning-shade: #e0ac08;\n  --ion-color-warning-tint: #ffca22;\n  /** danger **/\n  --ion-color-danger: #eb445a;\n  --ion-color-danger-rgb: 235, 68, 90;\n  --ion-color-danger-contrast: #ffffff;\n  --ion-color-danger-contrast-rgb: 255, 255, 255;\n  --ion-color-danger-shade: #cf3c4f;\n  --ion-color-danger-tint: #ed576b;\n  /** dark **/\n  --ion-color-dark: #222428;\n  --ion-color-dark-rgb: 34, 36, 40;\n  --ion-color-dark-contrast: #ffffff;\n  --ion-color-dark-contrast-rgb: 255, 255, 255;\n  --ion-color-dark-shade: #1e2023;\n  --ion-color-dark-tint: #383a3e;\n  /** medium **/\n  --ion-color-medium: #ffffff;\n  --ion-color-medium-rgb: 255, 255, 255;\n  --ion-color-medium-contrast: #484751;\n  --ion-color-medium-contrast-rgb: 72, 71, 81;\n  --ion-color-medium-shade: #d9d9d9;\n  --ion-color-medium-tint: #d9d9d9;\n  /** light **/\n  --ion-color-light: #f4f5f8;\n  --ion-color-light-rgb: 244, 245, 248;\n  --ion-color-light-contrast: #000000;\n  --ion-color-light-contrast-rgb: 0, 0, 0;\n  --ion-color-light-shade: #d7d8da;\n  --ion-color-light-tint: #f5f6f9;\n  --ion-font-family: \"text-barlow-condensed\";\n  --ion-font-family: \"text\";\n  --ion-font-family: \"roboto\";\n}\n\n@font-face {\n  font-family: \"text\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../assets/fonts/FiraSansCondensed-Medium.ttf\");\n}\n@font-face {\n  font-family: \"text-barlow-condensed\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../assets/fonts/BarlowCondensed-Medium.ttf\");\n}\n@font-face {\n  font-family: \"roboto\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../assets/fonts/Roboto-Black.ttf\");\n}\n@media (prefers-color-scheme: light) {\n  body {\n    --ion-color-primary: #afccff;\n    --ion-color-primary-rgb: 175, 204, 255;\n    --ion-color-primary-contrast: #000000;\n    --ion-color-primary-contrast-rgb: 0, 0, 0;\n    --ion-color-primary-shade: #9ab4e0;\n    --ion-color-primary-tint: #b7d1ff;\n    --ion-color-secondary: #50c8ff;\n    --ion-color-secondary-rgb: 80,200,255;\n    --ion-color-secondary-contrast: #ffffff;\n    --ion-color-secondary-contrast-rgb: 255,255,255;\n    --ion-color-secondary-shade: #46b0e0;\n    --ion-color-secondary-tint: #62ceff;\n    --ion-color-tertiary: #6a64ff;\n    --ion-color-tertiary-rgb: 106,100,255;\n    --ion-color-tertiary-contrast: #ffffff;\n    --ion-color-tertiary-contrast-rgb: 255,255,255;\n    --ion-color-tertiary-shade: #5d58e0;\n    --ion-color-tertiary-tint: #7974ff;\n    --ion-color-success: #2fdf75;\n    --ion-color-success-rgb: 47,223,117;\n    --ion-color-success-contrast: #000000;\n    --ion-color-success-contrast-rgb: 0,0,0;\n    --ion-color-success-shade: #29c467;\n    --ion-color-success-tint: #44e283;\n    --ion-color-warning: #ffd534;\n    --ion-color-warning-rgb: 255,213,52;\n    --ion-color-warning-contrast: #000000;\n    --ion-color-warning-contrast-rgb: 0,0,0;\n    --ion-color-warning-shade: #e0bb2e;\n    --ion-color-warning-tint: #ffd948;\n    --ion-color-danger: #ff4961;\n    --ion-color-danger-rgb: 255,73,97;\n    --ion-color-danger-contrast: #ffffff;\n    --ion-color-danger-contrast-rgb: 255,255,255;\n    --ion-color-danger-shade: #e04055;\n    --ion-color-danger-tint: #ff5b71;\n    --ion-color-dark: #f4f5f8;\n    --ion-color-dark-rgb: 244,245,248;\n    --ion-color-dark-contrast: #000000;\n    --ion-color-dark-contrast-rgb: 0,0,0;\n    --ion-color-dark-shade: #d7d8da;\n    --ion-color-dark-tint: #f5f6f9;\n    --ion-color-medium: #ffffff;\n    --ion-color-medium-rgb: 255, 255, 255;\n    --ion-color-medium-contrast: #484751;\n    --ion-color-medium-contrast-rgb: 72, 71, 81;\n    --ion-color-medium-shade: #d9d9d9;\n    --ion-color-medium-tint: #d9d9d9;\n    --ion-color-light: #222428;\n    --ion-color-light-rgb: 34,36,40;\n    --ion-color-light-contrast: #ffffff;\n    --ion-color-light-contrast-rgb: 255,255,255;\n    --ion-color-light-shade: #1e2023;\n    --ion-color-light-tint: #383a3e;\n  }\n}\nhtml, body {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}","@use 'sass:map';\r\n@use 'typography-utils';\r\n@use '../theming/theming';\r\n\r\n/// Defines a typography level from the Material Design spec.\r\n/// @param {String} $font-size The font-size for this level.\r\n/// @param {String | Number} $line-height The line-height for this level.\r\n/// @param {String | Number} $font-weight The font-weight for this level.\r\n/// @param {String} $font-family The font-family for this level.\r\n/// @param {String} $letter-spacing The letter-spacing for this level.\r\n/// @returns {Map} A map representing the definition of this typpographic level.\r\n@function define-typography-level(\r\n  $font-size,\r\n  $line-height: $font-size,\r\n  $font-weight: 400,\r\n  $font-family: null,\r\n  $letter-spacing: normal) {\r\n\r\n  @return (\r\n    font-size: $font-size,\r\n    line-height: $line-height,\r\n    font-weight: $font-weight,\r\n    font-family: $font-family,\r\n    letter-spacing: $letter-spacing\r\n  );\r\n}\r\n\r\n/// Defines a collection of typography levels to configure typography for an application.\r\n/// Any level not specified defaults to the values defined in the Material Design specification:\r\n/// https://material.io/guidelines/style/typography.html.\r\n///\r\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\r\n/// The values here come from reverse engineering the Material Design examples.\r\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\r\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\r\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\r\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\r\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\r\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\r\n/// @param {Map} $title Configuration for the \"title\" typographic level.\r\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\r\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\r\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\r\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\r\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\r\n/// @param {Map} $button Configuration for the \"button\" typographic level.\r\n/// @param {Map} $input Configuration for the \"input\" typographic level.\r\n/// @returns {Map} A typography config for the application.\r\n@function define-typography-config(\r\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\r\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\r\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\r\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\r\n  $display-1:     define-typography-level(34px, 40px, 400),\r\n  $headline:      define-typography-level(24px, 32px, 400),\r\n  $title:         define-typography-level(20px, 32px, 500),\r\n  $subheading-2:  define-typography-level(16px, 28px, 400),\r\n  $subheading-1:  define-typography-level(15px, 24px, 400),\r\n  $body-2:        define-typography-level(14px, 24px, 500),\r\n  $body-1:        define-typography-level(14px, 20px, 400),\r\n  $caption:       define-typography-level(12px, 20px, 400),\r\n  $button:        define-typography-level(14px, 14px, 500),\r\n  // Line-height must be unit-less fraction of the font-size.\r\n  $input:         define-typography-level(inherit, 1.125, 400)\r\n) {\r\n\r\n  // Declare an initial map with all of the levels.\r\n  $config: (\r\n    display-4:      $display-4,\r\n    display-3:      $display-3,\r\n    display-2:      $display-2,\r\n    display-1:      $display-1,\r\n    headline:       $headline,\r\n    title:          $title,\r\n    subheading-2:   $subheading-2,\r\n    subheading-1:   $subheading-1,\r\n    body-2:         $body-2,\r\n    body-1:         $body-1,\r\n    caption:        $caption,\r\n    button:         $button,\r\n    input:          $input,\r\n  );\r\n\r\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\r\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\r\n  @each $key, $level in $config {\r\n    @if map.get($level, font-family) == null {\r\n      $new-level: map.merge($level, (font-family: $font-family));\r\n      $config: map.merge($config, ($key: $new-level));\r\n    }\r\n  }\r\n\r\n  // Add the base font family to the config.\r\n  @return map.merge($config, (font-family: $font-family));\r\n}\r\n\r\n// Whether a config is for the Material Design 2018 typography system.\r\n@function private-typography-is-2018-config($config) {\r\n  @return map.get($config, headline-1) != null;\r\n}\r\n\r\n// Whether a config is for the Material Design 2014 typography system.\r\n@function private-typography-is-2014-config($config) {\r\n  @return map.get($config, headline) != null;\r\n}\r\n\r\n// Given a config for either the 2014 or 2018 Material Design typography system,\r\n// produces a normalized typography config for the 2014 Material Design typography system.\r\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\r\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\r\n//\r\n// Components using this function should be migrated to normalize to the 2018 style config instead.\r\n// New components should not use this function.\r\n@function private-typography-to-2014-config($config) {\r\n  @if $config == null {\r\n    @return null;\r\n  }\r\n  @if not private-typography-is-2014-config($config) {\r\n    $args: (\r\n        display-4: map.get($config, headline-1),\r\n        display-3: map.get($config, headline-2),\r\n        display-2: map.get($config, headline-3),\r\n        display-1: map.get($config, headline-4),\r\n        headline: map.get($config, headline-5),\r\n        title: map.get($config, headline-6),\r\n        subheading-2: map.get($config, subtitle-1),\r\n        subheading-1: map.get($config, subtitle-2),\r\n        body-2: map.get($config, body-1),\r\n        body-1: map.get($config, body-2),\r\n        button: map.get($config, button),\r\n        caption: map.get($config, caption),\r\n    );\r\n    $non-null-args: ();\r\n    @each $key, $value in $args {\r\n      @if $value != null {\r\n        $non-null-args: map.merge($non-null-args, ($key: $value));\r\n      }\r\n    }\r\n    @return define-typography-config($non-null-args...);\r\n  }\r\n  @return $config;\r\n}\r\n\r\n// Given a config for either the 2014 or 2018 Material Design typography system,\r\n// produces a normalized typography config for the 2018 Material Design typography system.\r\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\r\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\r\n@function private-typography-to-2018-config($config) {\r\n  @if $config == null {\r\n    @return null;\r\n  }\r\n  @if not private-typography-is-2018-config($config) {\r\n    @return (\r\n        headline-1: map.get($config, display-4),\r\n        headline-2: map.get($config, display-3),\r\n        headline-3: map.get($config, display-2),\r\n        headline-4: map.get($config, display-1),\r\n        headline-5: map.get($config, headline),\r\n        headline-6: map.get($config, title),\r\n        subtitle-1: map.get($config, subheading-2),\r\n        subtitle-2: map.get($config, subheading-1),\r\n        body-1: map.get($config, body-2),\r\n        body-2: map.get($config, body-1),\r\n        button: map.get($config, button),\r\n        caption: map.get($config, caption),\r\n        overline: if(map.get($config, overline), map.get($config, overline),\r\n            define-typography-level(12px, 32px, 500)\r\n        )\r\n    );\r\n  }\r\n  @return $config;\r\n}\r\n\r\n// stylelint-disable material/theme-mixin-api\r\n\r\n/// Emits baseline typographic styles based on a given config.\r\n/// @param {Map} $config-or-theme A typography config for an entire theme.\r\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\r\n///     be styled.\r\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\r\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\r\n\r\n  .mat-h1, .mat-headline, #{$selector} h1 {\r\n    @include typography-utils.typography-level($config, headline);\r\n    margin: 0 0 16px;\r\n  }\r\n\r\n  .mat-h2, .mat-title, #{$selector} h2 {\r\n    @include typography-utils.typography-level($config, title);\r\n    margin: 0 0 16px;\r\n  }\r\n\r\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\r\n    @include typography-utils.typography-level($config, subheading-2);\r\n    margin: 0 0 16px;\r\n  }\r\n\r\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\r\n    @include typography-utils.typography-level($config, subheading-1);\r\n    margin: 0 0 16px;\r\n  }\r\n\r\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\r\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\r\n  // and h6 at 0.67em.\r\n  .mat-h5, #{$selector} h5 {\r\n    @include typography-utils.font-shorthand(\r\n       // calc is used here to support css variables\r\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\r\n      typography-utils.font-weight($config, body-1),\r\n      typography-utils.line-height($config, body-1),\r\n      typography-utils.font-family($config, body-1)\r\n    );\r\n\r\n    margin: 0 0 12px;\r\n  }\r\n\r\n  .mat-h6, #{$selector} h6 {\r\n    @include typography-utils.font-shorthand(\r\n       // calc is used here to support css variables\r\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\r\n      typography-utils.font-weight($config, body-1),\r\n      typography-utils.line-height($config, body-1),\r\n      typography-utils.font-family($config, body-1)\r\n    );\r\n\r\n    margin: 0 0 12px;\r\n  }\r\n\r\n  .mat-body-strong, .mat-body-2 {\r\n    @include typography-utils.typography-level($config, body-2);\r\n  }\r\n\r\n  .mat-body, .mat-body-1, #{$selector} {\r\n    @include typography-utils.typography-level($config, body-1);\r\n\r\n    p {\r\n      margin: 0 0 12px;\r\n    }\r\n  }\r\n\r\n  .mat-small, .mat-caption {\r\n    @include typography-utils.typography-level($config, caption);\r\n  }\r\n\r\n  .mat-display-4, #{$selector} .mat-display-4 {\r\n    @include typography-utils.typography-level($config, display-4);\r\n    margin: 0 0 56px;\r\n  }\r\n\r\n  .mat-display-3, #{$selector} .mat-display-3 {\r\n    @include typography-utils.typography-level($config, display-3);\r\n    margin: 0 0 64px;\r\n  }\r\n\r\n  .mat-display-2, #{$selector} .mat-display-2 {\r\n    @include typography-utils.typography-level($config, display-2);\r\n    margin: 0 0 64px;\r\n  }\r\n\r\n  .mat-display-1, #{$selector} .mat-display-1 {\r\n    @include typography-utils.typography-level($config, display-1);\r\n    margin: 0 0 64px;\r\n  }\r\n}\r\n\r\n// stylelint-enable material/theme-mixin-api\r\n","@use 'sass:list';\r\n@use 'sass:map';\r\n@use 'sass:math';\r\n@use 'sass:meta';\r\n@use 'sass:string';\r\n@use '../style/private';\r\n\r\n\r\n// Utility for fetching a nested value from a typography config.\r\n@function _mat-get-type-value($config, $level, $name) {\r\n  @return map.get(map.get($config, $level), $name);\r\n}\r\n\r\n/// Gets the font size for a level inside a typography config.\r\n/// @param {Map} $config A typography config.\r\n/// @param {Map} $level A typography level.\r\n@function font-size($config, $level) {\r\n  @return _mat-get-type-value($config, $level, font-size);\r\n}\r\n\r\n/// Gets the line height for a level inside a typography config.\r\n/// @param {Map} $config A typography config.\r\n/// @param {Map} $level A typography level.\r\n@function line-height($config, $level) {\r\n  @return _mat-get-type-value($config, $level, line-height);\r\n}\r\n\r\n/// Gets the font weight for a level inside a typography config.\r\n/// @param {Map} $config A typography config.\r\n/// @param {Map} $level A typography level.\r\n@function font-weight($config, $level) {\r\n  @return _mat-get-type-value($config, $level, font-weight);\r\n}\r\n\r\n/// Gets the letter spacing for a level inside a typography config.\r\n/// @param {Map} $config A typography config.\r\n/// @param {Map} $level A typography level.\r\n@function letter-spacing($config, $level) {\r\n  @return _mat-get-type-value($config, $level, letter-spacing);\r\n}\r\n\r\n/// Gets the font-family from a typography config and removes the quotes around it.\r\n/// @param {Map} $config A typography config.\r\n/// @param {Map} $level A typography level.\r\n@function font-family($config, $level: null) {\r\n  $font-family: map.get($config, font-family);\r\n\r\n  @if $level != null {\r\n    $font-family: _mat-get-type-value($config, $level, font-family);\r\n  }\r\n\r\n  // Guard against unquoting non-string values, because it's deprecated.\r\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\r\n}\r\n\r\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\r\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\r\n/// @param {String} $font-size The font-size value.\r\n/// @param {String | Number} $font-weight The font-weight value.\r\n/// @param {String | Number} $line-height The line-height value.\r\n/// @param {String} $font-family The font-family value.\r\n/// @returns {String} The `font` shorthand value combining the given parts.\r\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\r\n  // If any of the values are set to `inherit`, we can't use the shorthand\r\n  // so we fall back to passing in the individual properties.\r\n  @if ($font-size == inherit or\r\n       $font-weight == inherit or\r\n       $line-height == inherit or\r\n       $font-family == inherit or\r\n       $font-size == null or\r\n       $font-weight == null or\r\n       $line-height == null or\r\n       $font-family == null) {\r\n\r\n    font-size: $font-size;\r\n    font-weight: $font-weight;\r\n    line-height: $line-height;\r\n    font-family: $font-family;\r\n  }\r\n  @else {\r\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\r\n    // that we need to use `list.slash` for `font-size/line-height` in order to prevent\r\n    // Sass from dividing the two values.\r\n    font: $font-weight private.private-slash($font-size, $line-height) $font-family;\r\n  }\r\n}\r\n\r\n/// Emits CSS styles for the given typography level.\r\n/// @param {Map} $config A typography config.\r\n/// @param {Map} $level A typography level.\r\n@mixin typography-level($config, $level) {\r\n  $font-size: font-size($config, $level);\r\n  $font-weight: font-weight($config, $level);\r\n  $line-height: line-height($config, $level);\r\n  $font-family: font-family($config, $level);\r\n\r\n  @include font-shorthand($font-size, $font-weight, $line-height, $font-family);\r\n  letter-spacing: letter-spacing($config, $level);\r\n}\r\n\r\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\r\n/// the value provided.\r\n@function private-coerce-unitless-to-em($value) {\r\n  @return if(math.is-unitless($value), 1em * $value, $value);\r\n}\r\n","@use 'sass:map';\r\n@use '../core/style/private';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/theming/theming';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-bottom-sheet-container {\r\n    @include private.private-theme-elevation(16, $config);\r\n    background: theming.get-color-from-palette($background, dialog);\r\n    color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-bottom-sheet-container {\r\n    @include typography-utils.typography-level($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../core/theming/theming';\r\n@use '../core/style/private';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n$_ripple-opacity: 0.1;\r\n\r\n// Applies a focus style to an mat-button element for each of the supported palettes.\r\n@mixin _focus-overlay-color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n\r\n  &.mat-primary .mat-button-focus-overlay {\r\n    background-color: theming.get-color-from-palette($primary);\r\n  }\r\n\r\n  &.mat-accent .mat-button-focus-overlay {\r\n    background-color: theming.get-color-from-palette($accent);\r\n  }\r\n\r\n  &.mat-warn .mat-button-focus-overlay {\r\n    background-color: theming.get-color-from-palette($warn);\r\n  }\r\n\r\n  &.mat-button-disabled .mat-button-focus-overlay {\r\n    background-color: transparent;\r\n  }\r\n}\r\n\r\n// Applies the background color for a ripple. If the value provided is not a Sass color,\r\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\r\n// on a CSS variable, we instead add the opacity directly to the ripple element.\r\n@mixin _ripple-background($palette, $hue, $opacity) {\r\n  $background-color: theming.get-color-from-palette($palette, $hue, $opacity);\r\n  background-color: $background-color;\r\n  @if (meta.type-of($background-color) != color) {\r\n    opacity: $opacity;\r\n  }\r\n}\r\n\r\n@mixin _ripple-color($theme, $hue, $opacity: $_ripple-opacity) {\r\n  $primary: map.get($theme, primary);\r\n  $accent: map.get($theme, accent);\r\n  $warn: map.get($theme, warn);\r\n\r\n  &.mat-primary .mat-ripple-element {\r\n    @include _ripple-background($primary, $hue, $opacity);\r\n  }\r\n\r\n  &.mat-accent .mat-ripple-element {\r\n    @include _ripple-background($accent, $hue, $opacity);\r\n  }\r\n\r\n  &.mat-warn .mat-ripple-element {\r\n    @include _ripple-background($warn, $hue, $opacity);\r\n  }\r\n}\r\n\r\n// Applies a property to an mat-button element for each of the supported palettes.\r\n@mixin _theme-property($theme, $property, $hue) {\r\n  $primary: map.get($theme, primary);\r\n  $accent: map.get($theme, accent);\r\n  $warn: map.get($theme, warn);\r\n  $background: map.get($theme, background);\r\n  $foreground: map.get($theme, foreground);\r\n\r\n  &.mat-primary {\r\n    #{$property}: theming.get-color-from-palette($primary, $hue);\r\n  }\r\n  &.mat-accent {\r\n    #{$property}: theming.get-color-from-palette($accent, $hue);\r\n  }\r\n  &.mat-warn {\r\n    #{$property}: theming.get-color-from-palette($warn, $hue);\r\n  }\r\n\r\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\r\n    &.mat-button-disabled {\r\n      $palette: if($property == 'color', $foreground, $background);\r\n      #{$property}: theming.get-color-from-palette($palette, disabled-button);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-button, .mat-icon-button, .mat-stroked-button {\r\n    // Buttons without a background color should inherit the font color. This is necessary to\r\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\r\n    // that those buttons are always placed inside of containers with the default background\r\n    // color of the theme (e.g. themed toolbars).\r\n    color: inherit;\r\n    background: transparent;\r\n\r\n    @include _theme-property($config, 'color', text);\r\n    @include _focus-overlay-color($config);\r\n\r\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\r\n    // are matching with the current theme palette and are in contrast to the background color\r\n    // (e.g in themed toolbars).\r\n    .mat-ripple-element {\r\n      opacity: $_ripple-opacity;\r\n      background-color: currentColor;\r\n    }\r\n  }\r\n\r\n  .mat-button-focus-overlay {\r\n    background: map.get($foreground, base);\r\n  }\r\n\r\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\r\n  // order of the theme styles and the button reset may end up resetting this as well.\r\n  .mat-stroked-button:not(.mat-button-disabled) {\r\n    border-color: theming.get-color-from-palette($foreground, divider);\r\n  }\r\n\r\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\r\n    // Default font and background color when not using any color palette.\r\n    color: theming.get-color-from-palette($foreground, text);\r\n    background-color: theming.get-color-from-palette($background, raised-button);\r\n\r\n    @include _theme-property($config, 'color', default-contrast);\r\n    @include _theme-property($config, 'background-color', default);\r\n    @include _ripple-color($config, default-contrast);\r\n  }\r\n\r\n  .mat-stroked-button, .mat-flat-button {\r\n    @include private.private-theme-overridable-elevation(0, $config);\r\n  }\r\n\r\n  .mat-raised-button {\r\n    @include private.private-theme-overridable-elevation(2, $config);\r\n\r\n    &:not(.mat-button-disabled):active {\r\n      @include private.private-theme-overridable-elevation(8, $config);\r\n    }\r\n\r\n    &.mat-button-disabled {\r\n      @include private.private-theme-overridable-elevation(0, $config);\r\n    }\r\n  }\r\n\r\n  .mat-fab, .mat-mini-fab {\r\n    @include private.private-theme-overridable-elevation(6, $config);\r\n\r\n    &:not(.mat-button-disabled):active {\r\n      @include private.private-theme-overridable-elevation(12, $config);\r\n    }\r\n\r\n    &.mat-button-disabled {\r\n      @include private.private-theme-overridable-elevation(0, $config);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\r\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\r\n    font: {\r\n      family: typography-utils.font-family($config, button);\r\n      size: typography-utils.font-size($config, button);\r\n      weight: typography-utils.font-weight($config, button);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/style/private';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/density/private/compatibility';\r\n@use './button-toggle-variables';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $background: map.get($config, background);\r\n  $divider-color: theming.get-color-from-palette($foreground, divider);\r\n\r\n  .mat-button-toggle-standalone,\r\n  .mat-button-toggle-group {\r\n    @include private.private-theme-elevation(2, $config);\r\n  }\r\n\r\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\r\n  .mat-button-toggle-group-appearance-standard {\r\n    box-shadow: none;\r\n  }\r\n\r\n  .mat-button-toggle {\r\n    color: theming.get-color-from-palette($foreground, hint-text);\r\n\r\n    .mat-button-toggle-focus-overlay {\r\n      background-color: theming.get-color-from-palette($background, focused-button);\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-appearance-standard {\r\n    color: theming.get-color-from-palette($foreground, text);\r\n    background: theming.get-color-from-palette($background, card);\r\n\r\n    .mat-button-toggle-focus-overlay {\r\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\r\n    border-left: solid 1px $divider-color;\r\n  }\r\n\r\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\r\n    border-left: none;\r\n    border-right: solid 1px $divider-color;\r\n  }\r\n\r\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\r\n    .mat-button-toggle + .mat-button-toggle {\r\n      border-left: none;\r\n      border-right: none;\r\n      border-top: solid 1px $divider-color;\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-checked {\r\n    background-color: theming.get-color-from-palette($background, selected-button);\r\n    color: theming.get-color-from-palette($foreground, secondary-text);\r\n\r\n    &.mat-button-toggle-appearance-standard {\r\n      color: theming.get-color-from-palette($foreground, text);\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-disabled {\r\n    color: theming.get-color-from-palette($foreground, disabled-button);\r\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\r\n\r\n    &.mat-button-toggle-appearance-standard {\r\n      background: theming.get-color-from-palette($background, card);\r\n    }\r\n\r\n    &.mat-button-toggle-checked {\r\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\r\n  .mat-button-toggle-group-appearance-standard {\r\n    border: solid 1px $divider-color;\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-button-toggle {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n}\r\n\r\n@mixin density($config-or-theme) {\r\n  $density-scale: theming.get-density-config($config-or-theme);\r\n  $standard-height: compatibility.private-density-prop-value(\r\n      button-toggle-variables.$standard-density-config, $density-scale, height);\r\n\r\n  @include compatibility.private-density-legacy-compatibility() {\r\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\r\n      line-height: $standard-height;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/style/private';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-card {\r\n    @include private.private-theme-overridable-elevation(1, $config);\r\n    background: theming.get-color-from-palette($background, card);\r\n    color: theming.get-color-from-palette($foreground, text);\r\n\r\n    // Needs extra specificity to be able to override the elevation selectors.\r\n    &.mat-card-flat {\r\n      @include private.private-theme-overridable-elevation(0, $config);\r\n    }\r\n  }\r\n\r\n  .mat-card-subtitle {\r\n    color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-card {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n  .mat-card-title {\r\n    font: {\r\n      size: typography-utils.font-size($config, headline);\r\n      weight: typography-utils.font-weight($config, title);\r\n    }\r\n  }\r\n\r\n  .mat-card-header .mat-card-title {\r\n    font-size: typography-utils.font-size($config, title);\r\n  }\r\n\r\n  .mat-card-subtitle,\r\n  .mat-card-content {\r\n    font-size: typography-utils.font-size($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n\r\n  // The color of the checkbox's checkmark / mixedmark.\r\n  $checkbox-mark-color: theming.get-color-from-palette($background, background);\r\n\r\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\r\n  // this does not work well with elements layered on top of one another. To get around this we\r\n  // blend the colors together based on the base color and the theme background.\r\n  $white-30pct-opacity-on-dark: #686868;\r\n  $black-26pct-opacity-on-light: #b0b0b0;\r\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\r\n\r\n  .mat-checkbox-frame {\r\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-checkbox-checkmark {\r\n    fill: $checkbox-mark-color;\r\n  }\r\n\r\n  .mat-checkbox-checkmark-path {\r\n    // !important is needed here because a stroke must be set as an\r\n    // attribute on the SVG in order for line animation to work properly.\r\n    stroke: $checkbox-mark-color !important;\r\n  }\r\n\r\n  .mat-checkbox-mixedmark {\r\n    background-color: $checkbox-mark-color;\r\n  }\r\n\r\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\r\n    &.mat-primary .mat-checkbox-background {\r\n      background-color: theming.get-color-from-palette($primary);\r\n    }\r\n\r\n    &.mat-accent .mat-checkbox-background {\r\n      background-color: theming.get-color-from-palette($accent);\r\n    }\r\n\r\n    &.mat-warn .mat-checkbox-background {\r\n      background-color: theming.get-color-from-palette($warn);\r\n    }\r\n  }\r\n\r\n  .mat-checkbox-disabled {\r\n    &.mat-checkbox-checked,\r\n    &.mat-checkbox-indeterminate {\r\n      .mat-checkbox-background {\r\n        background-color: $disabled-color;\r\n      }\r\n    }\r\n\r\n    &:not(.mat-checkbox-checked) {\r\n      .mat-checkbox-frame {\r\n        border-color: $disabled-color;\r\n      }\r\n    }\r\n\r\n    .mat-checkbox-label {\r\n      color: theming.get-color-from-palette($foreground, secondary-text);\r\n    }\r\n  }\r\n\r\n  // Switch this to a solid color since we're using `opacity`\r\n  // to control how opaque the ripple should be.\r\n  .mat-checkbox .mat-ripple-element {\r\n    background-color: map.get(map.get($config, foreground), base);\r\n  }\r\n\r\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\r\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\r\n    &.mat-primary .mat-ripple-element {\r\n      background: theming.get-color-from-palette($primary);\r\n    }\r\n\r\n    &.mat-accent .mat-ripple-element {\r\n      background: theming.get-color-from-palette($accent);\r\n    }\r\n\r\n    &.mat-warn .mat-ripple-element {\r\n      background: theming.get-color-from-palette($warn);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-checkbox {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n  // TODO(kara): Remove this style when fixing vertical baseline\r\n  .mat-checkbox-layout .mat-checkbox-label {\r\n    line-height: typography-utils.line-height($config, body-2);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../core/style/private';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n$chip-remove-font-size: 18px;\r\n\r\n@mixin _element-color($foreground, $background) {\r\n  background-color: $background;\r\n  color: $foreground;\r\n\r\n  .mat-chip-remove {\r\n    color: $foreground;\r\n    opacity: 0.4;\r\n  }\r\n}\r\n\r\n\r\n// Applies the background color for a ripple element.\r\n// If the color value provided is not a Sass color,\r\n// we assume that we've been given a CSS variable.\r\n// Since we can't perform alpha-blending on a CSS variable,\r\n// we instead add the opacity directly to the ripple element.\r\n@mixin _ripple-background($palette, $default-contrast, $opacity) {\r\n  $background-color: theming.get-color-from-palette($palette, $default-contrast, $opacity);\r\n  background-color: $background-color;\r\n  @if (meta.type-of($background-color) != color) {\r\n    opacity: $opacity;\r\n  }\r\n}\r\n\r\n@mixin _palette-styles($palette) {\r\n  @include _element-color(theming.get-color-from-palette($palette, default-contrast),\r\n    theming.get-color-from-palette($palette));\r\n\r\n  .mat-ripple-element {\r\n    @include _ripple-background($palette, default-contrast, 0.1);\r\n  }\r\n}\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  $unselected-background: theming.get-color-from-palette($background, unselected-chip);\r\n  $unselected-foreground: theming.get-color-from-palette($foreground, text);\r\n\r\n  .mat-chip.mat-standard-chip {\r\n    @include _element-color($unselected-foreground, $unselected-background);\r\n\r\n    &:not(.mat-chip-disabled) {\r\n      &:active {\r\n        @include private.private-theme-elevation(3, $config);\r\n      }\r\n\r\n      .mat-chip-remove:hover {\r\n        opacity: 0.54;\r\n      }\r\n    }\r\n\r\n    &.mat-chip-disabled {\r\n      opacity: 0.4;\r\n    }\r\n\r\n    &::after {\r\n      background: map.get($foreground, base);\r\n    }\r\n  }\r\n\r\n  .mat-chip.mat-standard-chip.mat-chip-selected {\r\n    &.mat-primary {\r\n      @include _palette-styles($primary);\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _palette-styles($warn);\r\n    }\r\n\r\n    &.mat-accent {\r\n      @include _palette-styles($accent);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-chip {\r\n    font-size: typography-utils.font-size($config, body-2);\r\n    font-weight: typography-utils.font-weight($config, body-2);\r\n\r\n    .mat-chip-trailing-icon.mat-icon,\r\n    .mat-chip-remove.mat-icon {\r\n      font-size: $chip-remove-font-size;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-table {\r\n    background: theming.get-color-from-palette($background, 'card');\r\n  }\r\n\r\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\r\n  mat-header-row, mat-row, mat-footer-row,\r\n  [mat-header-row], [mat-row], [mat-footer-row],\r\n  .mat-table-sticky {\r\n    background: inherit;\r\n  }\r\n\r\n  mat-row, mat-header-row, mat-footer-row,\r\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\r\n    border-bottom-color: theming.get-color-from-palette($foreground, divider);\r\n  }\r\n\r\n  .mat-header-cell {\r\n    color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-cell, .mat-footer-cell {\r\n    color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-table {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n  .mat-header-cell {\r\n    font-size: typography-utils.font-size($config, caption);\r\n    font-weight: typography-utils.font-weight($config, body-2);\r\n  }\r\n\r\n  .mat-cell, .mat-footer-cell {\r\n    font-size: typography-utils.font-size($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:color';\r\n@use 'sass:map';\r\n@use 'sass:math';\r\n@use 'sass:meta';\r\n@use '../core/style/private';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n\r\n$selected-today-box-shadow-width: 1px;\r\n$selected-fade-amount: 0.6;\r\n$range-fade-amount: 0.2;\r\n$today-fade-amount: 0.2;\r\n$calendar-body-font-size: 13px !default;\r\n$calendar-weekday-table-font-size: 11px !default;\r\n\r\n@mixin _color($palette) {\r\n  @include date-range-colors(\r\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\r\n\r\n  .mat-calendar-body-selected {\r\n    background-color: theming.get-color-from-palette($palette);\r\n    color: theming.get-color-from-palette($palette, default-contrast);\r\n  }\r\n\r\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\r\n    $background: theming.get-color-from-palette($palette);\r\n\r\n    @if (meta.type-of($background) == color) {\r\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\r\n    }\r\n    @else {\r\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\r\n      // fall back to fading the content out via `opacity`.\r\n      opacity: $today-fade-amount;\r\n    }\r\n  }\r\n\r\n  .mat-calendar-body-today.mat-calendar-body-selected {\r\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\r\n                theming.get-color-from-palette($palette, default-contrast);\r\n  }\r\n\r\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\r\n  .cdk-keyboard-focused .mat-calendar-body-active,\r\n  .cdk-program-focused .mat-calendar-body-active {\r\n    & > .mat-calendar-body-cell-content {\r\n      @include _unselected-cell {\r\n        background-color: theming.get-color-from-palette($palette, 0.3);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\r\n@mixin _unselected-cell {\r\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $background: map.get($config, background);\r\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\r\n\r\n  .mat-calendar-arrow {\r\n    fill: theming.get-color-from-palette($foreground, icon);\r\n  }\r\n\r\n  // The prev/next buttons need a bit more specificity to\r\n  // avoid being overwritten by the .mat-icon-button.\r\n  .mat-datepicker-toggle,\r\n  .mat-datepicker-content .mat-calendar-next-button,\r\n  .mat-datepicker-content .mat-calendar-previous-button {\r\n    color: theming.get-color-from-palette($foreground, icon);\r\n  }\r\n\r\n  .mat-calendar-table-header {\r\n    color: theming.get-color-from-palette($foreground, hint-text);\r\n  }\r\n\r\n  .mat-calendar-table-header-divider::after {\r\n    background: theming.get-color-from-palette($foreground, divider);\r\n  }\r\n\r\n  .mat-calendar-body-label {\r\n    color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-calendar-body-cell-content,\r\n  .mat-date-range-input-separator {\r\n    color: theming.get-color-from-palette($foreground, text);\r\n    border-color: transparent;\r\n  }\r\n\r\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\r\n    @include _unselected-cell {\r\n      color: $disabled-color;\r\n    }\r\n  }\r\n\r\n  .mat-form-field-disabled .mat-date-range-input-separator {\r\n    color: $disabled-color;\r\n  }\r\n\r\n  .mat-calendar-body-in-preview {\r\n    $divider-color: theming.get-color-from-palette($foreground, divider);\r\n\r\n    @if meta.type-of($divider-color) == color {\r\n      // The divider color is set under the assumption that it'll be used\r\n      // for a solid border, but because we're using a dashed border for the\r\n      // preview range, we need to bump its opacity to ensure that it's visible.\r\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\r\n    }\r\n    @else {\r\n      color: $divider-color;\r\n    }\r\n  }\r\n\r\n  .mat-calendar-body-today {\r\n    @include _unselected-cell {\r\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\r\n      // so we use the hint color.\r\n      border-color: theming.get-color-from-palette($foreground, hint-text);\r\n    }\r\n  }\r\n\r\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\r\n    @include _unselected-cell {\r\n      $color: theming.get-color-from-palette($foreground, hint-text);\r\n\r\n      @if (meta.type-of($color) == color) {\r\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\r\n      }\r\n      @else {\r\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\r\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\r\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\r\n        // to it already and we don't want them to stack on top of each other.\r\n        opacity: 0.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include _color(map.get($config, primary));\r\n\r\n  .mat-datepicker-content {\r\n    @include private.private-theme-elevation(4, $config);\r\n    background-color: theming.get-color-from-palette($background, card);\r\n    color: theming.get-color-from-palette($foreground, text);\r\n\r\n    &.mat-accent {\r\n      @include _color(map.get($config, accent));\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _color(map.get($config, warn));\r\n    }\r\n  }\r\n\r\n  .mat-datepicker-content-touch {\r\n    @include private.private-theme-elevation(24, $config);\r\n  }\r\n\r\n  .mat-datepicker-toggle-active {\r\n    color: theming.get-color-from-palette(map.get($config, primary), text);\r\n\r\n    &.mat-accent {\r\n      color: theming.get-color-from-palette(map.get($config, accent), text);\r\n    }\r\n\r\n    &.mat-warn {\r\n      color: theming.get-color-from-palette(map.get($config, warn), text);\r\n    }\r\n  }\r\n\r\n  .mat-date-range-input-inner[disabled] {\r\n    color: theming.get-color-from-palette($foreground, disabled-text);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-calendar {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n  .mat-calendar-body {\r\n    font-size: $calendar-body-font-size;\r\n  }\r\n\r\n  .mat-calendar-body-label,\r\n  .mat-calendar-period-button {\r\n    font: {\r\n      size: typography-utils.font-size($config, button);\r\n      weight: typography-utils.font-weight($config, button);\r\n    }\r\n  }\r\n\r\n  .mat-calendar-table-header th {\r\n    font: {\r\n      size: $calendar-weekday-table-font-size;\r\n      weight: typography-utils.font-weight($config, body-1);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin date-range-colors(\r\n  $range-color,\r\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\r\n  $overlap-color: #a8dab5,\r\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\r\n\r\n  .mat-calendar-body-in-range::before {\r\n    background: $range-color;\r\n  }\r\n\r\n  .mat-calendar-body-comparison-identical,\r\n  .mat-calendar-body-in-comparison-range::before {\r\n    background: $comparison-color;\r\n  }\r\n\r\n  .mat-calendar-body-comparison-bridge-start::before,\r\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\r\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\r\n  }\r\n\r\n  .mat-calendar-body-comparison-bridge-end::before,\r\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\r\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\r\n  }\r\n\r\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\r\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\r\n    background: $overlap-color;\r\n  }\r\n\r\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\r\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\r\n    background: $overlap-selected-color;\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/style/private';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-dialog-container {\r\n    @include private.private-theme-elevation(24, $config);\r\n    background: theming.get-color-from-palette($background, dialog);\r\n    color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-dialog-title {\r\n    @include typography-utils.typography-level($config, title);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/density/private/compatibility';\r\n@use '../core/theming/theming';\r\n@use '../core/style/private';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use './expansion-variables';\r\n@use './expansion-mixins';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-expansion-panel {\r\n    @include private.private-theme-overridable-elevation(2, $config);\r\n    background: theming.get-color-from-palette($background, card);\r\n    color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n\r\n  .mat-action-row {\r\n    border-top-color: theming.get-color-from-palette($foreground, divider);\r\n  }\r\n\r\n  @include expansion-mixins.private-expansion-focus {\r\n    background: theming.get-color-from-palette($background, hover);\r\n  }\r\n\r\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\r\n  // `@media (hover)` above, because the desktop support browser support isn't great.\r\n  @media (hover: none) {\r\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\r\n      .mat-expansion-panel-header:hover {\r\n      background: theming.get-color-from-palette($background, card);\r\n    }\r\n  }\r\n\r\n  .mat-expansion-panel-header-title {\r\n    color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n\r\n  .mat-expansion-panel-header-description,\r\n  .mat-expansion-indicator::after {\r\n    color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-expansion-panel-header[aria-disabled='true'] {\r\n    color: theming.get-color-from-palette($foreground, disabled-button);\r\n\r\n    .mat-expansion-panel-header-title,\r\n    .mat-expansion-panel-header-description {\r\n      color: inherit;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-expansion-panel-header {\r\n    font: {\r\n      family: typography-utils.font-family($config, subheading-1);\r\n      size: typography-utils.font-size($config, subheading-1);\r\n      weight: typography-utils.font-weight($config, subheading-1);\r\n    }\r\n  }\r\n\r\n  .mat-expansion-panel-content {\r\n    @include typography-utils.typography-level($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin density($config-or-theme) {\r\n  $density-scale: theming.get-density-config($config-or-theme);\r\n  $expanded-height: compatibility.private-density-prop-value(\r\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\r\n  $collapsed-height: compatibility.private-density-prop-value(\r\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\r\n\r\n  @include compatibility.private-density-legacy-compatibility() {\r\n    .mat-expansion-panel-header {\r\n      height: $collapsed-height;\r\n\r\n      &.mat-expanded {\r\n        height: $expanded-height;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/style/private';\r\n\r\n@use './form-field-fill-theme.scss';\r\n@use './form-field-legacy-theme.scss';\r\n@use './form-field-outline-theme.scss';\r\n@use './form-field-standard-theme.scss';\r\n\r\n// Color styles that apply to all appearances of the form-field.\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n\r\n  // Label colors. Required is used for the `*` star shown in the label.\r\n  $label-color:\r\n    theming.get-color-from-palette($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\r\n  $focused-label-color: theming.get-color-from-palette($primary, text);\r\n  $required-label-color: theming.get-color-from-palette($accent, text);\r\n\r\n  // Underline colors.\r\n  $underline-color-base:\r\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\r\n  $underline-color-accent: theming.get-color-from-palette($accent, text);\r\n  $underline-color-warn: theming.get-color-from-palette($warn, text);\r\n  $underline-focused-color: theming.get-color-from-palette($primary, text);\r\n\r\n  .mat-form-field-label {\r\n    color: $label-color;\r\n  }\r\n\r\n  .mat-hint {\r\n    color: $label-color;\r\n  }\r\n\r\n  .mat-form-field.mat-focused .mat-form-field-label {\r\n    color: $focused-label-color;\r\n\r\n    &.mat-accent {\r\n      color: $underline-color-accent;\r\n    }\r\n\r\n    &.mat-warn {\r\n      color: $underline-color-warn;\r\n    }\r\n  }\r\n\r\n  .mat-focused .mat-form-field-required-marker {\r\n    color: $required-label-color;\r\n  }\r\n\r\n  .mat-form-field-ripple {\r\n    background-color: $underline-color-base;\r\n  }\r\n\r\n  .mat-form-field.mat-focused {\r\n    .mat-form-field-ripple {\r\n      background-color: $underline-focused-color;\r\n\r\n      &.mat-accent {\r\n        background-color: $underline-color-accent;\r\n      }\r\n\r\n      &.mat-warn {\r\n        background-color: $underline-color-warn;\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\r\n    .mat-form-field-infix::after {\r\n      color: $underline-focused-color;\r\n    }\r\n\r\n    &.mat-accent .mat-form-field-infix::after {\r\n      color: $underline-color-accent;\r\n    }\r\n\r\n    &.mat-warn .mat-form-field-infix::after {\r\n      color: $underline-color-warn;\r\n    }\r\n  }\r\n\r\n  // Styling for the error state of the form field. Note that while the same can be\r\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\r\n  // logic is used to style the error state and to show the error messages.\r\n  .mat-form-field.mat-form-field-invalid {\r\n    .mat-form-field-label {\r\n      color: $underline-color-warn;\r\n\r\n      &.mat-accent,\r\n      .mat-form-field-required-marker {\r\n        color: $underline-color-warn;\r\n      }\r\n    }\r\n\r\n    .mat-form-field-ripple,\r\n    .mat-form-field-ripple.mat-accent {\r\n      background-color: $underline-color-warn;\r\n    }\r\n  }\r\n\r\n  .mat-error {\r\n    color: $underline-color-warn;\r\n  }\r\n\r\n  @include form-field-legacy-theme.legacy-color($config);\r\n  @include form-field-standard-theme.standard-color($config);\r\n  @include form-field-fill-theme.fill-color($config);\r\n  @include form-field-outline-theme.outline-color($config);\r\n}\r\n\r\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\r\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\r\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\r\n// an unknown pseudo-class it will discard the entire rule set.\r\n$dedupe: 0;\r\n\r\n// Applies a floating label above the form field control itself.\r\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\r\n  transform: translateY(-$infix-margin-top - $infix-padding + $dedupe)\r\n             scale($font-scale);\r\n  width: private.private-div(100%, $font-scale) + $dedupe;\r\n\r\n  $dedupe: $dedupe + 0.00001 !global;\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  // The unit-less line-height from the font config.\r\n  $line-height: typography-utils.line-height($config, input);\r\n\r\n  // The amount to scale the font for the floating label and subscript.\r\n  $subscript-font-scale: 0.75;\r\n  // The amount to scale the font for the prefix and suffix icons.\r\n  $prefix-suffix-icon-font-scale: 1.5;\r\n\r\n  // The padding on the infix. Mocks show half of the text size.\r\n  $infix-padding: 0.5em;\r\n  // The margin applied to the form-field-infix to reserve space for the floating label.\r\n  // If the line-height is given as a unitless number, coerce it to `em`.\r\n  $infix-margin-top: $subscript-font-scale *\r\n      typography-utils.private-coerce-unitless-to-em($line-height);\r\n  // Font size to use for the label and subscript text.\r\n  $subscript-font-size: $subscript-font-scale * 100%;\r\n  // Font size to use for the for the prefix and suffix icons.\r\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\r\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\r\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\r\n  // text font size, so we need to divide by the scale factor to make it half of the original text\r\n  // size.\r\n  $subscript-margin-top: private.private-div(0.5em, $subscript-font-scale);\r\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\r\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\r\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\r\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\r\n\r\n  .mat-form-field {\r\n    @include typography-utils.typography-level($config, input);\r\n  }\r\n\r\n  .mat-form-field-wrapper {\r\n    padding-bottom: $wrapper-padding-bottom;\r\n  }\r\n\r\n  .mat-form-field-prefix,\r\n  .mat-form-field-suffix {\r\n    // Allow icons in a prefix or suffix to adapt to the correct size.\r\n    .mat-icon {\r\n      font-size: $prefix-suffix-icon-font-size;\r\n      line-height: $line-height;\r\n    }\r\n\r\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\r\n    .mat-icon-button {\r\n      height: $prefix-suffix-icon-font-scale * 1em;\r\n      width: $prefix-suffix-icon-font-scale * 1em;\r\n\r\n      .mat-icon {\r\n        height: typography-utils.private-coerce-unitless-to-em($line-height);\r\n        line-height: $line-height;\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-form-field-infix {\r\n    padding: $infix-padding 0;\r\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\r\n    border-top: $infix-margin-top solid transparent;\r\n  }\r\n\r\n  .mat-form-field-can-float {\r\n    &.mat-form-field-should-float .mat-form-field-label,\r\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n      @include _label-floating(\r\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n    }\r\n\r\n    // Server-side rendered matInput with a label attribute but label not shown\r\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n        .mat-form-field-label {\r\n      @include _label-floating(\r\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n    }\r\n  }\r\n\r\n  .mat-form-field-label-wrapper {\r\n    top: -$infix-margin-top;\r\n    padding-top: $infix-margin-top;\r\n  }\r\n\r\n  .mat-form-field-label {\r\n    top: $infix-margin-top + $infix-padding;\r\n  }\r\n\r\n  .mat-form-field-underline {\r\n    // We want the underline to start at the end of the content box, not the padding box,\r\n    // so we move it up by the padding amount.\r\n    bottom: $wrapper-padding-bottom;\r\n  }\r\n\r\n  .mat-form-field-subscript-wrapper {\r\n    font-size: $subscript-font-size;\r\n    margin-top: $subscript-margin-top;\r\n\r\n    // We want the subscript to start at the end of the content box, not the padding box,\r\n    // so we move it up by the padding amount (adjusted for the smaller font size);\r\n    top: calc(100% - #{private.private-div($wrapper-padding-bottom, $subscript-font-scale)});\r\n  }\r\n\r\n  @include form-field-legacy-theme.legacy-typography($config);\r\n  @include form-field-standard-theme.standard-typography($config);\r\n  @include form-field-fill-theme.fill-typography($config);\r\n  @include form-field-outline-theme.outline-typography($config);\r\n}\r\n\r\n@mixin density($config-or-theme) {\r\n  $density-scale: theming.get-density-config($config-or-theme);\r\n  @include form-field-legacy-theme.private-form-field-legacy-density($density-scale);\r\n  @include form-field-standard-theme.private-form-field-standard-density($density-scale);\r\n  @include form-field-fill-theme.private-form-field-fill-density($density-scale);\r\n  @include form-field-outline-theme.private-form-field-outline-density($density-scale);\r\n}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/style/private';\r\n@use '../core/style/form-common';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n\r\n// Theme styles that only apply to the legacy appearance of the form-field.\r\n\r\n@mixin legacy-color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n\r\n  $label-color: theming.get-color-from-palette($foreground, secondary-text);\r\n  $underline-color:\r\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\r\n\r\n  .mat-form-field-appearance-legacy {\r\n    .mat-form-field-label {\r\n      color: $label-color;\r\n    }\r\n\r\n    .mat-hint {\r\n      color: $label-color;\r\n    }\r\n\r\n    .mat-form-field-underline {\r\n      background-color: $underline-color;\r\n    }\r\n\r\n    &.mat-form-field-disabled .mat-form-field-underline {\r\n      @include form-common.private-control-disabled-underline($underline-color);\r\n    }\r\n  }\r\n}\r\n\r\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\r\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\r\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\r\n// an unknown pseudo-class it will discard the entire rule set.\r\n$legacy-dedupe: 0;\r\n\r\n// Applies a floating label above the form field control itself.\r\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\r\n  // We use perspective to fix the text blurriness as described here:\r\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\r\n  // This results in a small jitter after the label floats on Firefox, which the\r\n  // translateZ fixes.\r\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\r\n  translateZ(0.001px + $legacy-dedupe);\r\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\r\n  // worse on IE, so we don't include them in the IE version.\r\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\r\n                  scale($font-scale);\r\n\r\n  width: private.private-div(100%, $font-scale) + $legacy-dedupe;\r\n\r\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\r\n}\r\n\r\n// Same as mixin above, but omits the translateZ for printing purposes.\r\n@mixin _label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\r\n  // This results in a small jitter after the label floats on Firefox, which the\r\n  // translateZ fixes.\r\n  transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\r\n                  scale($font-scale);\r\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\r\n  // worse on IE, so we don't include them in the IE version.\r\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\r\n}\r\n\r\n@mixin legacy-typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  // The unit-less line-height from the font config.\r\n  $line-height: typography-utils.line-height($config, input);\r\n  // The amount to scale the font for the floating label and subscript.\r\n  $subscript-font-scale: 0.75;\r\n  // The amount of space between the top of the line and the top of the actual text\r\n  // (as a fraction of the font-size).\r\n  $line-spacing: private.private-div($line-height - 1, 2);\r\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\r\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\r\n  $infix-padding: 0.5em - $line-spacing;\r\n  // The margin applied to the form-field-infix to reserve space for the floating label.\r\n  // If the line-height is given as a unitless number, coerce it to `em`.\r\n  $infix-margin-top:\r\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\r\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\r\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\r\n  // text font size, so we need to divide by the scale factor to make it half of the original text\r\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\r\n  // text, not the  edge of the line.\r\n  $subscript-margin-top: private.private-div(0.5em, $subscript-font-scale) - ($line-spacing * 2);\r\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\r\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\r\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\r\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\r\n\r\n  .mat-form-field-appearance-legacy {\r\n    .mat-form-field-wrapper {\r\n      padding-bottom: $wrapper-padding-bottom;\r\n    }\r\n\r\n    .mat-form-field-infix {\r\n      padding: $infix-padding 0;\r\n    }\r\n\r\n    &.mat-form-field-can-float {\r\n      &.mat-form-field-should-float .mat-form-field-label,\r\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n        @include _label-floating(\r\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n      }\r\n\r\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\r\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\r\n      .mat-form-field-label {\r\n        @include _label-floating(\r\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n      }\r\n\r\n      // Server-side rendered matInput with a label attribute but label not shown\r\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n      .mat-form-field-label {\r\n        @include _label-floating(\r\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n      }\r\n    }\r\n\r\n    .mat-form-field-label {\r\n      top: $infix-margin-top + $infix-padding;\r\n    }\r\n\r\n    .mat-form-field-underline {\r\n      // We want the underline to start at the end of the content box, not the padding box,\r\n      // so we move it up by the padding amount.\r\n      bottom: $wrapper-padding-bottom;\r\n    }\r\n\r\n    .mat-form-field-subscript-wrapper {\r\n      margin-top: $subscript-margin-top;\r\n\r\n      // We want the subscript to start at the end of the content box, not the padding box,\r\n      // so we move it up by the padding amount (adjusted for the smaller font size);\r\n      top: calc(100% - #{private.private-div($wrapper-padding-bottom, $subscript-font-scale)});\r\n    }\r\n  }\r\n\r\n  // translateZ causes the label to not appear while printing, so we override it to not\r\n  // apply translateZ while printing\r\n  @media print {\r\n    .mat-form-field-appearance-legacy {\r\n      &.mat-form-field-can-float {\r\n        &.mat-form-field-should-float .mat-form-field-label,\r\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n          @include _label-floating-print(\r\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n        }\r\n\r\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\r\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\r\n        .mat-form-field-label {\r\n          @include _label-floating-print(\r\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n        }\r\n\r\n        // Server-side rendered matInput with a label attribute but label not shown\r\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n        .mat-form-field-label {\r\n          @include _label-floating-print(\r\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin private-form-field-legacy-density($config-or-theme) {}\r\n\r\n@mixin legacy-theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include legacy-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include private-form-field-legacy-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include legacy-typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/style/private';\r\n\r\n\r\n// Theme styles that only apply to the fill appearance of the form-field.\r\n\r\n@mixin fill-color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n\r\n  $fill-background:\r\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.1, 0.04));\r\n  $fill-disabled-background:\r\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.05, 0.02));\r\n  $underline-color:\r\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.5, 0.42));\r\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\r\n\r\n  .mat-form-field-appearance-fill {\r\n    .mat-form-field-flex {\r\n      background-color: $fill-background;\r\n    }\r\n\r\n    &.mat-form-field-disabled .mat-form-field-flex {\r\n      background-color: $fill-disabled-background;\r\n    }\r\n\r\n    .mat-form-field-underline::before {\r\n      background-color: $underline-color;\r\n    }\r\n\r\n    &.mat-form-field-disabled {\r\n      .mat-form-field-label {\r\n        color: $label-disabled-color;\r\n      }\r\n\r\n      .mat-form-field-underline::before {\r\n        background-color: transparent;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\r\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\r\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\r\n// an unknown pseudo-class it will discard the entire rule set.\r\n$fill-dedupe: 0;\r\n\r\n// Applies a floating label above the form field control itself.\r\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\r\n  transform: translateY(-$infix-margin-top - $infix-padding + $fill-dedupe)\r\n             scale($font-scale);\r\n  width: private.private-div(100%, $font-scale) + $fill-dedupe;\r\n\r\n  $fill-dedupe: $fill-dedupe + 0.00001 !global;\r\n}\r\n\r\n@mixin fill-typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  // The unit-less line-height from the font config.\r\n  $line-height: typography-utils.line-height($config, input);\r\n  // The amount to scale the font for the floating label and subscript.\r\n  $subscript-font-scale: 0.75;\r\n  // The padding on top of the infix.\r\n  $infix-padding-top: 0.25em;\r\n  // The padding below the infix.\r\n  $infix-padding-bottom: 0.75em;\r\n  // The margin applied to the form-field-infix to reserve space for the floating label.\r\n  $infix-margin-top:\r\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\r\n  // The amount we offset the label from the input text in the fill appearance.\r\n  $fill-appearance-label-offset: -0.5em;\r\n\r\n  .mat-form-field-appearance-fill {\r\n    .mat-form-field-infix {\r\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\r\n    }\r\n\r\n    .mat-form-field-label {\r\n      top: $infix-margin-top + $infix-padding-top;\r\n      margin-top: $fill-appearance-label-offset;\r\n    }\r\n\r\n    &.mat-form-field-can-float {\r\n      &.mat-form-field-should-float .mat-form-field-label,\r\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n        @include _label-floating(\r\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\r\n                $infix-margin-top);\r\n      }\r\n\r\n      // Server-side rendered matInput with a label attribute but label not shown\r\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n      .mat-form-field-label {\r\n        @include _label-floating(\r\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\r\n                $infix-margin-top);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin private-form-field-fill-density($config-or-theme) {}\r\n\r\n@mixin fill-theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include fill-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include private-form-field-fill-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include fill-typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/style/private';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n\r\n// Theme styles that only apply to the outline appearance of the form-field.\r\n\r\n@mixin outline-color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $foreground: map.get($config, foreground);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n\r\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\r\n  $outline-color:\r\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.3, 0.12));\r\n  $outline-color-hover:\r\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\r\n  $outline-color-primary: theming.get-color-from-palette($primary);\r\n  $outline-color-accent: theming.get-color-from-palette($accent);\r\n  $outline-color-warn: theming.get-color-from-palette($warn);\r\n  $outline-color-disabled:\r\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.15, 0.06));\r\n\r\n  .mat-form-field-appearance-outline {\r\n    .mat-form-field-outline {\r\n      color: $outline-color;\r\n    }\r\n\r\n    .mat-form-field-outline-thick {\r\n      color: $outline-color-hover;\r\n    }\r\n\r\n    &.mat-focused {\r\n      .mat-form-field-outline-thick {\r\n        color: $outline-color-primary;\r\n      }\r\n\r\n      &.mat-accent .mat-form-field-outline-thick {\r\n        color: $outline-color-accent;\r\n      }\r\n\r\n      &.mat-warn .mat-form-field-outline-thick {\r\n        color: $outline-color-warn;\r\n      }\r\n    }\r\n\r\n    // Class repeated so that rule is specific enough to override focused accent color case.\r\n    &.mat-form-field-invalid.mat-form-field-invalid {\r\n      .mat-form-field-outline-thick {\r\n        color: $outline-color-warn;\r\n      }\r\n    }\r\n\r\n    &.mat-form-field-disabled {\r\n      .mat-form-field-label {\r\n        color: $label-disabled-color;\r\n      }\r\n\r\n      .mat-form-field-outline {\r\n        color: $outline-color-disabled;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\r\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\r\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\r\n// an unknown pseudo-class it will discard the entire rule set.\r\n$outline-dedupe: 0;\r\n\r\n// Applies a floating label above the form field control itself.\r\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\r\n  transform: translateY(-$infix-margin-top - $infix-padding + $outline-dedupe)\r\n  scale($font-scale);\r\n  width: private.private-div(100%, $font-scale) + $outline-dedupe;\r\n\r\n  $outline-dedupe: $outline-dedupe + 0.00001 !global;\r\n}\r\n\r\n@mixin outline-typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  // The unit-less line-height from the font config.\r\n  $line-height: typography-utils.line-height($config, input);\r\n  // The amount to scale the font for the floating label and subscript.\r\n  $subscript-font-scale: 0.75;\r\n  // The padding above and below the infix.\r\n  $infix-padding: 1em;\r\n  // The margin applied to the form-field-infix to reserve space for the floating label.\r\n  $infix-margin-top:\r\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\r\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\r\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\r\n  // text font size, so we need to divide by the scale factor to make it half of the original text\r\n  // size.\r\n  $subscript-margin-top: private.private-div(0.5em, $subscript-font-scale);\r\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\r\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\r\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\r\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\r\n  // The amount we offset the label from the input text in the outline appearance.\r\n  $outline-appearance-label-offset: -0.25em;\r\n\r\n  .mat-form-field-appearance-outline {\r\n    .mat-form-field-infix {\r\n      padding: $infix-padding 0 $infix-padding 0;\r\n    }\r\n\r\n    .mat-form-field-label {\r\n      top: $infix-margin-top + $infix-padding;\r\n      margin-top: $outline-appearance-label-offset;\r\n    }\r\n\r\n    &.mat-form-field-can-float {\r\n      &.mat-form-field-should-float .mat-form-field-label,\r\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n        @include _label-floating(\r\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\r\n                $infix-margin-top);\r\n      }\r\n\r\n      // Server-side rendered matInput with a label attribute but label not shown\r\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n      .mat-form-field-label {\r\n        @include _label-floating(\r\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\r\n                $infix-margin-top);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin private-form-field-outline-density($config-or-theme) {}\r\n\r\n@mixin outline-theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include outline-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include private-form-field-outline-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include outline-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n","@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/style/list-common';\r\n\r\n\r\n// Include this empty mixin for consistency with the other components.\r\n@mixin color($config-or-theme) {}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-grid-tile-header,\r\n  .mat-grid-tile-footer {\r\n    @include list-common.base(typography-utils.font-size($config, caption));\r\n    font-size: typography-utils.font-size($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\r\n// truncate neatly with an ellipsis.\r\n@mixin truncate-line() {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\r\n// is in dense mode.\r\n@mixin base($secondary-font-size) {\r\n  .mat-line {\r\n    @include truncate-line();\r\n    display: block;\r\n    box-sizing: border-box;\r\n\r\n    // all lines but the top line should have smaller text\r\n    &:nth-child(n+2) {\r\n      font-size: $secondary-font-size;\r\n    }\r\n  }\r\n}\r\n\r\n// This mixin normalizes default element styles, e.g. font weight for heading text.\r\n@mixin normalize-text() {\r\n  & > * {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-weight: normal;\r\n    font-size: inherit;\r\n  }\r\n}\r\n\r\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\r\n@mixin wrapper-base() {\r\n  @include normalize-text();\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: auto;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n\r\n  // Must remove wrapper when lines are empty or it takes up horizontal\r\n  // space and pushes other elements to the right.\r\n  &:empty {\r\n    display: none;\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/palette';\r\n@use '../core/theming/theming';\r\n@use '../core/style/private';\r\n@use '../core/style/form-common';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/style/vendor-prefixes';\r\n\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\r\n    color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-input-element:disabled,\r\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\r\n    color: theming.get-color-from-palette($foreground, disabled-text);\r\n  }\r\n\r\n  .mat-input-element {\r\n    caret-color: theming.get-color-from-palette($primary, text);\r\n\r\n    @include vendor-prefixes.input-placeholder {\r\n      color: form-common.private-control-placeholder-color($config);\r\n    }\r\n\r\n    // On dark themes we set the native `select` color to some shade of white,\r\n    // however the color propagates to all of the `option` elements, which are\r\n    // always on a white background inside the dropdown, causing them to blend in.\r\n    // Since we can't change background of the dropdown, we need to explicitly\r\n    // reset the color of the options to something dark.\r\n    @if (map.get($config, is-dark)) {\r\n      option {\r\n        color: palette.$dark-primary-text;\r\n      }\r\n\r\n      option:disabled {\r\n        color: palette.$dark-disabled-text;\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-form-field.mat-accent .mat-input-element {\r\n    caret-color: theming.get-color-from-palette($accent, text);\r\n  }\r\n\r\n  .mat-form-field.mat-warn .mat-input-element,\r\n  .mat-form-field-invalid .mat-input-element {\r\n    caret-color: theming.get-color-from-palette($warn, text);\r\n  }\r\n\r\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\r\n    color: theming.get-color-from-palette($warn, text);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  // The unit-less line-height from the font config.\r\n  $line-height: typography-utils.line-height($config, input);\r\n\r\n  // The amount of space between the top of the line and the top of the actual text\r\n  // (as a fraction of the font-size).\r\n  $line-spacing: private.private-div($line-height - 1, 2);\r\n\r\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\r\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\r\n  input.mat-input-element {\r\n    margin-top: typography-utils.private-coerce-unitless-to-em(-$line-spacing);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-input') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/style/private';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-menu-panel {\r\n    @include private.private-theme-overridable-elevation(4, $config);\r\n    background: theming.get-color-from-palette($background, 'card');\r\n  }\r\n\r\n  .mat-menu-item {\r\n    background: transparent;\r\n    color: theming.get-color-from-palette($foreground, 'text');\r\n\r\n    &[disabled] {\r\n      &,\r\n      .mat-menu-submenu-icon,\r\n      .mat-icon-no-color {\r\n        color: theming.get-color-from-palette($foreground, 'disabled');\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-menu-item .mat-icon-no-color,\r\n  .mat-menu-submenu-icon {\r\n    color: theming.get-color-from-palette($foreground, 'icon');\r\n  }\r\n\r\n  .mat-menu-item:hover,\r\n  .mat-menu-item.cdk-program-focused,\r\n  .mat-menu-item.cdk-keyboard-focused,\r\n  .mat-menu-item-highlighted {\r\n    &:not([disabled]) {\r\n      background: theming.get-color-from-palette($background, 'hover');\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-menu-item {\r\n    font: {\r\n      family: typography-utils.font-family($config, body-1);\r\n      size: typography-utils.font-size($config, body-1);\r\n      weight: typography-utils.font-weight($config, body-1);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-menu') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/density/private/compatibility';\r\n@use './paginator-variables';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $background: map.get($config, background);\r\n\r\n  .mat-paginator {\r\n    background: theming.get-color-from-palette($background, 'card');\r\n  }\r\n\r\n  .mat-paginator,\r\n  .mat-paginator-page-size .mat-select-trigger {\r\n    color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-paginator-decrement,\r\n  .mat-paginator-increment {\r\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\r\n    border-right: 2px solid theming.get-color-from-palette($foreground, 'icon');\r\n  }\r\n\r\n  .mat-paginator-first,\r\n  .mat-paginator-last {\r\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\r\n  }\r\n\r\n  .mat-icon-button[disabled] {\r\n    .mat-paginator-decrement,\r\n    .mat-paginator-increment,\r\n    .mat-paginator-first,\r\n    .mat-paginator-last {\r\n      border-color: theming.get-color-from-palette($foreground, 'disabled');\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-paginator,\r\n  .mat-paginator-page-size .mat-select-trigger {\r\n    font: {\r\n      family: typography-utils.font-family($config, caption);\r\n      size: typography-utils.font-size($config, caption);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin density($config-or-theme) {\r\n  $density-scale: theming.get-density-config($config-or-theme);\r\n  $height: compatibility.private-density-prop-value(paginator-variables.$density-config,\r\n    $density-scale, height);\r\n\r\n  @include compatibility.private-density-legacy-compatibility() {\r\n    .mat-paginator-container {\r\n      min-height: $height;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-paginator') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n@mixin _color($palette) {\r\n  &.mat-radio-checked .mat-radio-outer-circle {\r\n    border-color: theming.get-color-from-palette($palette);\r\n  }\r\n\r\n  .mat-radio-inner-circle,\r\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\r\n  &.mat-radio-checked .mat-radio-persistent-ripple,\r\n  &:active .mat-radio-persistent-ripple {\r\n    background-color: theming.get-color-from-palette($palette);\r\n  }\r\n}\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-radio-outer-circle {\r\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-radio-button {\r\n    &.mat-primary {\r\n      @include _color($primary);\r\n    }\r\n\r\n    &.mat-accent {\r\n      @include _color($accent);\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _color($warn);\r\n    }\r\n\r\n    // This needs extra specificity, because the classes above are combined\r\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\r\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\r\n    &.mat-radio-disabled {\r\n      &.mat-radio-checked .mat-radio-outer-circle,\r\n      .mat-radio-outer-circle {\r\n        border-color: theming.get-color-from-palette($foreground, disabled);\r\n      }\r\n\r\n      .mat-radio-ripple .mat-ripple-element,\r\n      .mat-radio-inner-circle {\r\n        background-color: theming.get-color-from-palette($foreground, disabled);\r\n      }\r\n\r\n      .mat-radio-label-content {\r\n        color: theming.get-color-from-palette($foreground, disabled);\r\n      }\r\n    }\r\n\r\n    // Switch this to a solid color since we're using `opacity`\r\n    // to control how opaque the ripple should be.\r\n    .mat-ripple-element {\r\n      background-color: map.get($foreground, base);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-radio-button {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/style/private';\r\n@use '../core/style/form-common';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $background: map.get($config, background);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n\r\n  .mat-select-value {\r\n    color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n\r\n  .mat-select-placeholder {\r\n    color: form-common.private-control-placeholder-color($config);\r\n  }\r\n\r\n  .mat-select-disabled .mat-select-value {\r\n    color: theming.get-color-from-palette($foreground, disabled-text);\r\n  }\r\n\r\n  .mat-select-arrow {\r\n    color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-select-panel {\r\n    background: theming.get-color-from-palette($background, card);\r\n    @include private.private-theme-overridable-elevation(4, $config);\r\n\r\n    .mat-option.mat-selected:not(.mat-option-multiple) {\r\n      background: theming.get-color-from-palette($background, hover, 0.12);\r\n    }\r\n  }\r\n\r\n  .mat-form-field {\r\n    &.mat-focused {\r\n      &.mat-primary .mat-select-arrow {\r\n        color: theming.get-color-from-palette($primary, text);\r\n      }\r\n\r\n      &.mat-accent .mat-select-arrow {\r\n        color: theming.get-color-from-palette($accent, text);\r\n      }\r\n\r\n      &.mat-warn .mat-select-arrow {\r\n        color: theming.get-color-from-palette($warn, text);\r\n      }\r\n    }\r\n\r\n    .mat-select.mat-select-invalid .mat-select-arrow {\r\n      color: theming.get-color-from-palette($warn, text);\r\n    }\r\n\r\n    .mat-select.mat-select-disabled .mat-select-arrow {\r\n      color: theming.get-color-from-palette($foreground, disabled-text);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  // The unit-less line-height from the font config.\r\n  $line-height: typography-utils.line-height($config, input);\r\n\r\n  .mat-select {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n  .mat-select-trigger {\r\n    height: typography-utils.private-coerce-unitless-to-em($line-height);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/style/private';\r\n@use '../core/theming/palette';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n@mixin _checked-color($palette, $thumb-checked-hue) {\r\n  &.mat-checked {\r\n    .mat-slide-toggle-thumb {\r\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\r\n    }\r\n\r\n    .mat-slide-toggle-bar {\r\n      // Opacity is determined from the specs for the selection controls.\r\n      // See: https://material.io/design/components/selection-controls.html#specs\r\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);\r\n    }\r\n\r\n    .mat-ripple-element {\r\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\r\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\r\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $is-dark: map.get($config, is-dark);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\r\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\r\n  // information for dark themed switches, we partially keep the old behavior that is based on\r\n  // the previous specifications. For the checked color we always use the `default` hue because\r\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\r\n  // to specify each hue individually.\r\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\r\n  $thumb-checked-hue: default;\r\n\r\n  $bar-unchecked-color: theming.get-color-from-palette($foreground, disabled);\r\n  $ripple-unchecked-color: theming.get-color-from-palette($foreground, base);\r\n\r\n  .mat-slide-toggle {\r\n    @include _checked-color($accent, $thumb-checked-hue);\r\n\r\n    &.mat-primary {\r\n      @include _checked-color($primary, $thumb-checked-hue);\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _checked-color($warn, $thumb-checked-hue);\r\n    }\r\n\r\n    &:not(.mat-checked) .mat-ripple-element {\r\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\r\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\r\n      background-color: $ripple-unchecked-color;\r\n    }\r\n  }\r\n\r\n  .mat-slide-toggle-thumb {\r\n    @include private.private-theme-elevation(1, $config);\r\n    background-color: theming.get-color-from-palette(palette.$grey-palette, $thumb-unchecked-hue);\r\n  }\r\n\r\n  .mat-slide-toggle-bar {\r\n    background-color: $bar-unchecked-color;\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-slide-toggle-content {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n@mixin _inner-content-theme($palette) {\r\n  .mat-slider-track-fill,\r\n  .mat-slider-thumb,\r\n  .mat-slider-thumb-label {\r\n    background-color: theming.get-color-from-palette($palette);\r\n  }\r\n\r\n  .mat-slider-thumb-label-text {\r\n    color: theming.get-color-from-palette($palette, default-contrast);\r\n  }\r\n\r\n  .mat-slider-focus-ring {\r\n    $opacity: 0.2;\r\n    $color: theming.get-color-from-palette($palette, default, $opacity);\r\n    background-color: $color;\r\n\r\n    // `mat-color` uses `rgba` for the opacity which won't work with\r\n    // CSS variables so we need to use `opacity` as a fallback.\r\n    @if (meta.type-of($color) != color) {\r\n      opacity: $opacity;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  $mat-slider-off-color: theming.get-color-from-palette($foreground, slider-off);\r\n  $mat-slider-off-focused-color: theming.get-color-from-palette($foreground, slider-off-active);\r\n  $mat-slider-disabled-color: theming.get-color-from-palette($foreground, slider-off);\r\n  $mat-slider-labeled-min-value-thumb-color:\r\n    theming.get-color-from-palette($foreground, slider-min);\r\n  $mat-slider-labeled-min-value-thumb-label-color:\r\n    theming.get-color-from-palette($foreground, slider-off);\r\n  $mat-slider-tick-opacity: 0.7;\r\n  $mat-slider-tick-color:\r\n    theming.get-color-from-palette($foreground, base, $mat-slider-tick-opacity);\r\n  $mat-slider-tick-size: 2px;\r\n\r\n  .mat-slider-track-background {\r\n    background-color: $mat-slider-off-color;\r\n  }\r\n\r\n  .mat-primary {\r\n    @include _inner-content-theme($primary);\r\n  }\r\n\r\n  .mat-accent {\r\n    @include _inner-content-theme($accent);\r\n  }\r\n\r\n  .mat-warn {\r\n    @include _inner-content-theme($warn);\r\n  }\r\n\r\n  .mat-slider:hover,\r\n  .mat-slider.cdk-focused {\r\n    .mat-slider-track-background {\r\n      background-color: $mat-slider-off-focused-color;\r\n    }\r\n  }\r\n\r\n  .mat-slider-disabled {\r\n    .mat-slider-track-background,\r\n    .mat-slider-track-fill,\r\n    .mat-slider-thumb {\r\n      background-color: $mat-slider-disabled-color;\r\n    }\r\n\r\n    &:hover {\r\n      .mat-slider-track-background {\r\n        background-color: $mat-slider-disabled-color;\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-slider-min-value {\r\n    .mat-slider-focus-ring {\r\n      $opacity: 0.12;\r\n      $color: theming.get-color-from-palette($foreground, base, $opacity);\r\n      background-color: $color;\r\n\r\n      // `mat-color` uses `rgba` for the opacity which won't work with\r\n      // CSS variables so we need to use `opacity` as a fallback.\r\n      @if (meta.type-of($color) != color) {\r\n        opacity: $opacity;\r\n      }\r\n    }\r\n\r\n    &.mat-slider-thumb-label-showing {\r\n      .mat-slider-thumb,\r\n      .mat-slider-thumb-label {\r\n        background-color: $mat-slider-labeled-min-value-thumb-color;\r\n      }\r\n\r\n      &.cdk-focused {\r\n        .mat-slider-thumb,\r\n        .mat-slider-thumb-label {\r\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\r\n        }\r\n      }\r\n    }\r\n\r\n    &:not(.mat-slider-thumb-label-showing) {\r\n      .mat-slider-thumb {\r\n        border-color: $mat-slider-off-color;\r\n        background-color: transparent;\r\n      }\r\n\r\n      &:hover,\r\n      &.cdk-focused {\r\n        .mat-slider-thumb {\r\n          border-color: $mat-slider-off-focused-color;\r\n        }\r\n\r\n        &.mat-slider-disabled .mat-slider-thumb {\r\n          border-color: $mat-slider-disabled-color;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\r\n    border-color: $mat-slider-tick-color;\r\n\r\n    // `mat-color` uses `rgba` for the opacity which won't work with\r\n    // CSS variables so we need to use `opacity` as a fallback.\r\n    @if (meta.type-of($mat-slider-tick-color) != color) {\r\n      opacity: $mat-slider-tick-opacity;\r\n    }\r\n  }\r\n\r\n  .mat-slider-horizontal .mat-slider-ticks {\r\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\r\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\r\n    // Firefox doesn't draw the gradient correctly with 'to right'\r\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\r\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\r\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\r\n\r\n    // `mat-color` uses `rgba` for the opacity which won't work with\r\n    // CSS variables so we need to use `opacity` as a fallback.\r\n    @if (meta.type-of($mat-slider-tick-color) != color) {\r\n      opacity: $mat-slider-tick-opacity;\r\n    }\r\n  }\r\n\r\n  .mat-slider-vertical .mat-slider-ticks {\r\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\r\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\r\n\r\n    // `mat-color` uses `rgba` for the opacity which won't work with\r\n    // CSS variables so we need to use `opacity` as a fallback.\r\n    @if (meta.type-of($mat-slider-tick-color) != color) {\r\n      opacity: $mat-slider-tick-opacity;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-slider-thumb-label-text {\r\n    font: {\r\n      family: typography-utils.font-family($config);\r\n      size: typography-utils.font-size($config, caption);\r\n      weight: typography-utils.font-weight($config, body-2);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/density/private/compatibility';\r\n@use '../core/style/private';\r\n@use './stepper-variables';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $background: map.get($config, background);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n\r\n  .mat-step-header {\r\n    &.cdk-keyboard-focused,\r\n    &.cdk-program-focused,\r\n    &:hover {\r\n      background-color: theming.get-color-from-palette($background, hover);\r\n    }\r\n\r\n    // On touch devices the :hover state will linger on the element after a tap.\r\n    // Reset it via `@media` after the declaration, because the media query isn't\r\n    // supported by all browsers yet.\r\n    @media (hover: none) {\r\n      &:hover {\r\n        background: none;\r\n      }\r\n    }\r\n\r\n    .mat-step-label,\r\n    .mat-step-optional {\r\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\r\n      // instead of secondary-text.\r\n      color: theming.get-color-from-palette($foreground, secondary-text);\r\n    }\r\n\r\n    .mat-step-icon {\r\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\r\n      // instead of secondary-text.\r\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\r\n      color: theming.get-color-from-palette($primary, default-contrast);\r\n    }\r\n\r\n    .mat-step-icon-selected,\r\n    .mat-step-icon-state-done,\r\n    .mat-step-icon-state-edit {\r\n      background-color: theming.get-color-from-palette($primary);\r\n      color: theming.get-color-from-palette($primary, default-contrast);\r\n    }\r\n\r\n    &.mat-accent {\r\n      .mat-step-icon {\r\n        color: theming.get-color-from-palette($accent, default-contrast);\r\n      }\r\n\r\n      .mat-step-icon-selected,\r\n      .mat-step-icon-state-done,\r\n      .mat-step-icon-state-edit {\r\n        background-color: theming.get-color-from-palette($accent);\r\n        color: theming.get-color-from-palette($accent, default-contrast);\r\n      }\r\n    }\r\n\r\n    &.mat-warn {\r\n      .mat-step-icon {\r\n        color: theming.get-color-from-palette($warn, default-contrast);\r\n      }\r\n\r\n      .mat-step-icon-selected,\r\n      .mat-step-icon-state-done,\r\n      .mat-step-icon-state-edit {\r\n        background-color: theming.get-color-from-palette($warn);\r\n        color: theming.get-color-from-palette($warn, default-contrast);\r\n      }\r\n    }\r\n\r\n    .mat-step-icon-state-error {\r\n      background-color: transparent;\r\n      color: theming.get-color-from-palette($warn, text);\r\n    }\r\n\r\n    .mat-step-label.mat-step-label-active {\r\n      color: theming.get-color-from-palette($foreground, text);\r\n    }\r\n\r\n    .mat-step-label.mat-step-label-error {\r\n      color: theming.get-color-from-palette($warn, text);\r\n    }\r\n  }\r\n\r\n  .mat-stepper-horizontal, .mat-stepper-vertical {\r\n    background-color: theming.get-color-from-palette($background, card);\r\n  }\r\n\r\n  .mat-stepper-vertical-line::before {\r\n    border-left-color: theming.get-color-from-palette($foreground, divider);\r\n  }\r\n\r\n  .mat-horizontal-stepper-header::before,\r\n  .mat-horizontal-stepper-header::after,\r\n  .mat-stepper-horizontal-line {\r\n    border-top-color: theming.get-color-from-palette($foreground, divider);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-stepper-vertical, .mat-stepper-horizontal {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n  .mat-step-label {\r\n    font: {\r\n      size: typography-utils.font-size($config, body-1);\r\n      weight: typography-utils.font-weight($config, body-1);\r\n    };\r\n  }\r\n\r\n  .mat-step-sub-label-error {\r\n    font-weight: normal;\r\n  }\r\n\r\n  .mat-step-label-error {\r\n    font-size: typography-utils.font-size($config, body-2);\r\n  }\r\n\r\n  .mat-step-label-selected {\r\n    font: {\r\n      size: typography-utils.font-size($config, body-2);\r\n      weight: typography-utils.font-weight($config, body-2);\r\n    };\r\n  }\r\n}\r\n\r\n@mixin density($config-or-theme) {\r\n  $density-scale: theming.get-density-config($config-or-theme);\r\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\r\n    $density-scale, height);\r\n  $vertical-padding: private.private-div($height - stepper-variables.$label-header-height, 2);\r\n\r\n  @include compatibility.private-density-legacy-compatibility() {\r\n    .mat-horizontal-stepper-header {\r\n      height: $height;\r\n    }\r\n\r\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\r\n    .mat-vertical-stepper-header {\r\n      padding: $vertical-padding stepper-variables.$side-gap;\r\n    }\r\n\r\n    // Ensures that the vertical lines for the step content exceed into the step\r\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\r\n    .mat-stepper-vertical-line::before {\r\n      top: stepper-variables.$line-gap - $vertical-padding;\r\n      bottom: stepper-variables.$line-gap - $vertical-padding;\r\n    }\r\n\r\n    // Ensures that the horizontal lines for the step header are centered vertically.\r\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\r\n      &::after, &::before {\r\n        top: $vertical-padding + private.private-div(stepper-variables.$label-header-height, 2);\r\n      }\r\n    }\r\n\r\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\r\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\r\n      top: $vertical-padding + private.private-div(stepper-variables.$label-header-height, 2);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n  $header-border: 1px solid theming.get-color-from-palette($foreground, divider);\r\n\r\n  .mat-tab-nav-bar,\r\n  .mat-tab-header {\r\n    border-bottom: $header-border;\r\n  }\r\n\r\n  .mat-tab-group-inverted-header {\r\n    .mat-tab-nav-bar,\r\n    .mat-tab-header {\r\n      border-top: $header-border;\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  .mat-tab-label, .mat-tab-link {\r\n    color: theming.get-color-from-palette($foreground, text);\r\n\r\n    &.mat-tab-disabled {\r\n      color: theming.get-color-from-palette($foreground, disabled-text);\r\n    }\r\n  }\r\n\r\n  .mat-tab-header-pagination-chevron {\r\n    border-color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n\r\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\r\n    border-color: theming.get-color-from-palette($foreground, disabled-text);\r\n  }\r\n\r\n  // Remove header border when there is a background color\r\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\r\n  .mat-tab-nav-bar[class*='mat-background-'] {\r\n    border-bottom: none;\r\n    border-top: none;\r\n  }\r\n\r\n  .mat-tab-group, .mat-tab-nav-bar {\r\n    $theme-colors: (\r\n      primary: $primary,\r\n      accent: $accent,\r\n      warn: $warn\r\n    );\r\n\r\n    @each $name, $color in $theme-colors {\r\n      // Set the foreground color of the tabs\r\n      &.mat-#{$name} {\r\n        @include _label-focus-color($color);\r\n        @include _ink-bar-color($color);\r\n\r\n        // Override ink bar when background color is the same\r\n        &.mat-background-#{$name} {\r\n          > .mat-tab-header, > .mat-tab-link-container {\r\n            @include _ink-bar-color($color, default-contrast);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    @each $name, $color in $theme-colors {\r\n      // Set background color of the tabs and override focus color\r\n      &.mat-background-#{$name} {\r\n        @include _label-focus-color($color);\r\n        @include _tabs-background($color);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _ink-bar-color($color, $hue: default) {\r\n  .mat-ink-bar {\r\n    background-color: theming.get-color-from-palette($color, $hue);\r\n  }\r\n}\r\n\r\n@mixin _label-focus-color($tab-focus-color) {\r\n  .mat-tab-label,\r\n  .mat-tab-link {\r\n    &.cdk-keyboard-focused,\r\n    &.cdk-program-focused {\r\n      &:not(.mat-tab-disabled) {\r\n        background-color: theming.get-color-from-palette($tab-focus-color, lighter, 0.3);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _tabs-background($background-color) {\r\n  // Note that these selectors target direct descendants so\r\n  // that the styles don't apply to any nested tab groups.\r\n\r\n  // Set background color for the tab group\r\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\r\n    background-color: theming.get-color-from-palette($background-color);\r\n  }\r\n\r\n  // Set labels to contrast against background\r\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\r\n    color: theming.get-color-from-palette($background-color, default-contrast);\r\n\r\n    &.mat-tab-disabled {\r\n      color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\r\n    }\r\n  }\r\n\r\n  // Set pagination chevrons to contrast background\r\n  > .mat-tab-header .mat-tab-header-pagination-chevron,\r\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\r\n  > .mat-tab-link-container .mat-focus-indicator::before,\r\n  > .mat-tab-header .mat-focus-indicator::before {\r\n    border-color: theming.get-color-from-palette($background-color, default-contrast);\r\n  }\r\n\r\n  > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\r\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\r\n    border-color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\r\n  }\r\n\r\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\r\n  // color will be based on the app background color.\r\n  > .mat-tab-header .mat-ripple-element,\r\n  > .mat-tab-link-container .mat-ripple-element,\r\n  > .mat-tab-header-pagination .mat-ripple-element {\r\n    background-color: theming.get-color-from-palette($background-color, default-contrast, 0.12);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-tab-group {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n  .mat-tab-label, .mat-tab-link {\r\n    font: {\r\n      family: typography-utils.font-family($config, button);\r\n      size: typography-utils.font-size($config, button);\r\n      weight: typography-utils.font-weight($config, button);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/density/private/compatibility';\r\n@use '../core/style/variables';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use './toolbar-variables';\r\n\r\n@mixin _height($height) {\r\n  .mat-toolbar-multiple-rows {\r\n    min-height: $height;\r\n  }\r\n  .mat-toolbar-row, .mat-toolbar-single-row {\r\n    height: $height;\r\n  }\r\n}\r\n\r\n@mixin _palette-styles($palette) {\r\n  background: theming.get-color-from-palette($palette);\r\n  color: theming.get-color-from-palette($palette, default-contrast);\r\n}\r\n\r\n@mixin _form-field-overrides {\r\n  .mat-form-field-underline,\r\n  .mat-form-field-ripple,\r\n  .mat-focused .mat-form-field-ripple {\r\n    background-color: currentColor;\r\n  }\r\n\r\n  .mat-form-field-label,\r\n  .mat-focused .mat-form-field-label,\r\n  .mat-select-value,\r\n  .mat-select-arrow,\r\n  .mat-form-field.mat-focused .mat-select-arrow {\r\n    color: inherit;\r\n  }\r\n\r\n  .mat-input-element {\r\n    caret-color: currentColor;\r\n  }\r\n}\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-toolbar {\r\n    background: theming.get-color-from-palette($background, app-bar);\r\n    color: theming.get-color-from-palette($foreground, text);\r\n\r\n    &.mat-primary {\r\n      @include _palette-styles($primary);\r\n    }\r\n\r\n    &.mat-accent {\r\n      @include _palette-styles($accent);\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _palette-styles($warn);\r\n    }\r\n\r\n    @include _form-field-overrides;\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-toolbar,\r\n  .mat-toolbar h1,\r\n  .mat-toolbar h2,\r\n  .mat-toolbar h3,\r\n  .mat-toolbar h4,\r\n  .mat-toolbar h5,\r\n  .mat-toolbar h6 {\r\n    @include typography-utils.typography-level($config, title);\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n@mixin density($config-or-theme) {\r\n  $density-scale: theming.get-density-config($config-or-theme);\r\n  $height-desktop: compatibility.private-density-prop-value(\r\n      toolbar-variables.$desktop-density-config, $density-scale, height);\r\n  $height-mobile: compatibility.private-density-prop-value(\r\n      toolbar-variables.$mobile-density-config, $density-scale, height);\r\n\r\n  @include compatibility.private-density-legacy-compatibility() {\r\n    // Set the default height for the toolbar.\r\n    @include _height($height-desktop);\r\n\r\n    // As per specs, toolbars should have a different height in mobile devices. This has been\r\n    // specified in the old guidelines and is still observable in the new specifications by\r\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\r\n    @media (variables.$xsmall) {\r\n      @include _height($height-mobile);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/style/private';\r\n\r\n$target-height: 22px;\r\n$font-size: 10px;\r\n$vertical-padding: private.private-div($target-height - $font-size, 2);\r\n\r\n$handset-target-height: 30px;\r\n$handset-font-size: 14px;\r\n$handset-vertical-padding:\r\n    private.private-div($handset-target-height - $handset-font-size, 2);\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n\r\n  .mat-tooltip {\r\n    background: theming.get-color-from-palette($background, tooltip, 0.9);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-tooltip {\r\n    font-family: typography-utils.font-family($config);\r\n    font-size: $font-size;\r\n    padding-top: $vertical-padding;\r\n    padding-bottom: $vertical-padding;\r\n  }\r\n\r\n  .mat-tooltip-handset {\r\n    font-size: $handset-font-size;\r\n    padding-top: $handset-vertical-padding;\r\n    padding-bottom: $handset-vertical-padding;\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/style/list-common';\r\n\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-list-base {\r\n    .mat-list-item {\r\n      color: theming.get-color-from-palette($foreground, text);\r\n    }\r\n\r\n    .mat-list-option {\r\n      color: theming.get-color-from-palette($foreground, text);\r\n    }\r\n\r\n    .mat-subheader {\r\n      color: theming.get-color-from-palette($foreground, secondary-text);\r\n    }\r\n  }\r\n\r\n  .mat-list-item-disabled {\r\n    background-color: theming.get-color-from-palette($background, disabled-list-option);\r\n  }\r\n\r\n  .mat-list-option,\r\n  .mat-nav-list .mat-list-item,\r\n  .mat-action-list .mat-list-item {\r\n    &:hover, &:focus {\r\n      background: theming.get-color-from-palette($background, 'hover');\r\n    }\r\n  }\r\n\r\n  .mat-list-single-selected-option {\r\n    &, &:hover, &:focus {\r\n      background: theming.get-color-from-palette($background, hover, 0.12);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  $font-family: typography-utils.font-family($config);\r\n\r\n  .mat-list-item {\r\n    font-family: $font-family;\r\n  }\r\n\r\n  .mat-list-option {\r\n    font-family: $font-family;\r\n  }\r\n\r\n  // Default list\r\n  .mat-list-base {\r\n    .mat-list-item {\r\n      font-size: typography-utils.font-size($config, subheading-2);\r\n      @include list-common.base(typography-utils.font-size($config, body-1));\r\n    }\r\n\r\n    .mat-list-option {\r\n      font-size: typography-utils.font-size($config, subheading-2);\r\n      @include list-common.base(typography-utils.font-size($config, body-1));\r\n    }\r\n\r\n    .mat-subheader {\r\n      font-family: typography-utils.font-family($config, body-2);\r\n      font-size: typography-utils.font-size($config, body-2);\r\n      font-weight: typography-utils.font-weight($config, body-2);\r\n    }\r\n  }\r\n\r\n  // Dense list\r\n  .mat-list-base[dense] {\r\n    .mat-list-item {\r\n      font-size: typography-utils.font-size($config, caption);\r\n      @include list-common.base(typography-utils.font-size($config, caption));\r\n    }\r\n\r\n    .mat-list-option {\r\n      font-size: typography-utils.font-size($config, caption);\r\n      @include list-common.base(typography-utils.font-size($config, caption));\r\n    }\r\n\r\n    .mat-subheader {\r\n      font-family: $font-family;\r\n      font-size: typography-utils.font-size($config, caption);\r\n      font-weight: typography-utils.font-weight($config, body-2);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../theming/theming';\r\n@use '../typography/typography';\r\n@use '../typography/typography-utils';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $background: map.get($config, background);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n\r\n  .mat-option {\r\n    color: theming.get-color-from-palette($foreground, text);\r\n\r\n    &:hover:not(.mat-option-disabled),\r\n    &:focus:not(.mat-option-disabled) {\r\n      background: theming.get-color-from-palette($background, hover);\r\n    }\r\n\r\n    // In multiple mode there is a checkbox to show that the option is selected.\r\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\r\n      background: theming.get-color-from-palette($background, hover);\r\n    }\r\n\r\n    &.mat-active {\r\n      background: theming.get-color-from-palette($background, hover);\r\n      color: theming.get-color-from-palette($foreground, text);\r\n    }\r\n\r\n    &.mat-option-disabled {\r\n      color: theming.get-color-from-palette($foreground, hint-text);\r\n    }\r\n  }\r\n\r\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\r\n    color: theming.get-color-from-palette($primary, text);\r\n  }\r\n\r\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\r\n    color: theming.get-color-from-palette($accent, text);\r\n  }\r\n\r\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\r\n    color: theming.get-color-from-palette($warn, text);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-option {\r\n    font: {\r\n      family: typography-utils.font-family($config);\r\n      size: typography-utils.font-size($config, subheading-2);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../theming/theming';\r\n@use '../typography/typography';\r\n@use '../typography/typography-utils';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-optgroup-label {\r\n    color: theming.get-color-from-palette($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-optgroup-disabled .mat-optgroup-label {\r\n    color: theming.get-color-from-palette($foreground, hint-text);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-optgroup-label {\r\n    @include typography-utils.typography-level($config, body-2);\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use '../core/theming/theming';\r\n@use '../core/theming/palette';\r\n@use '../core/style/private';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n  $accent: map.get($config, accent);\r\n\r\n  .mat-snack-bar-container {\r\n    // Use the primary text on the dark theme, even though the lighter one uses\r\n    // a secondary, because the contrast on the light primary text is poor.\r\n    color: if($is-dark-theme, palette.$dark-primary-text, palette.$light-secondary-text);\r\n    background: if($is-dark-theme, map.get(palette.$grey-palette, 50), #323232);\r\n\r\n    @include private.private-theme-elevation(6, $config);\r\n  }\r\n\r\n  .mat-simple-snackbar-action {\r\n    color: if($is-dark-theme, inherit, theming.get-color-from-palette($accent, text));\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-simple-snackbar {\r\n    font: {\r\n      family: typography-utils.font-family($config, body-1);\r\n      size: typography-utils.font-size($config, body-1);\r\n    }\r\n  }\r\n\r\n  .mat-simple-snackbar-action {\r\n    line-height: 1;\r\n    font: {\r\n      family: inherit;\r\n      size: inherit;\r\n      weight: typography-utils.font-weight($config, button);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/density/private/compatibility';\r\n@use '../core/theming/theming';\r\n@use '../core/typography/typography';\r\n@use '../core/typography/typography-utils';\r\n@use './tree-variables';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-tree {\r\n    background: theming.get-color-from-palette($background, 'card');\r\n  }\r\n\r\n  .mat-tree-node,\r\n  .mat-nested-tree-node {\r\n    color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-tree {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n  .mat-tree-node,\r\n  .mat-nested-tree-node {\r\n    font-weight: typography-utils.font-weight($config, body-1);\r\n    font-size: typography-utils.font-size($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin density($config-or-theme) {\r\n  $density-scale: theming.get-density-config($config-or-theme);\r\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\r\n    $density-scale, height);\r\n\r\n  @include compatibility.private-density-legacy-compatibility() {\r\n    .mat-tree-node {\r\n      min-height: $height;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n","@use '../../../cdk/a11y';\r\n\r\n@mixin ripple() {\r\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\r\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\r\n  .mat-ripple {\r\n    overflow: hidden;\r\n\r\n    // By default, every ripple container should have position: relative in favor of creating an\r\n    // easy API for developers using the MatRipple directive.\r\n    position: relative;\r\n\r\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\r\n    // because we don't want all ripple containers to have their own layer since they're used in a\r\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\r\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\r\n    // text inside the element, but it isn't very well supported yet.\r\n    &:not(:empty) {\r\n      transform: translateZ(0);\r\n    }\r\n  }\r\n\r\n  .mat-ripple.mat-ripple-unbounded {\r\n    overflow: visible;\r\n  }\r\n\r\n  .mat-ripple-element {\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    pointer-events: none;\r\n\r\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\r\n    transform: scale(0);\r\n\r\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\r\n    @include a11y.high-contrast(active, off) {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\r\n/// to make that element visually hidden while remaining available to assitive technology.\r\n@mixin a11y-visually-hidden() {\r\n  .cdk-visually-hidden {\r\n    border: 0;\r\n    clip: rect(0 0 0 0);\r\n    height: 1px;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    width: 1px;\r\n\r\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\r\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\r\n    white-space: nowrap;\r\n\r\n    // Avoid browsers rendering the focus ring in some cases.\r\n    outline: 0;\r\n\r\n    // Avoid some cases where the browser will still render the native controls (see #9049).\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n  }\r\n}\r\n\r\n/// @deprecated Use `a11y-visually-hidden`.\r\n@mixin a11y() {\r\n  @include a11y-visually-hidden;\r\n}\r\n\r\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\r\n/// is non-empty.\r\n/// @param {String} selector-context The selector under which to nest the mixin's content.\r\n@mixin _optionally-nest-content($selector-context) {\r\n  @if ($selector-context == '') {\r\n    @content;\r\n  }\r\n  @else {\r\n    #{$selector-context} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n/// Applies styles for users in high contrast mode. Note that this only applies\r\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\r\n/// attribute, however Chrome handles high contrast differently.\r\n///\r\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\r\n///     `white-on-black` or `black-on-white`.\r\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\r\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\r\n///     * `off` - works for `None`\r\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\r\n@mixin high-contrast($target: active, $encapsulation: 'any') {\r\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\r\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\r\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\r\n  }\r\n\r\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\r\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\r\n           'Allowed values are \"on\", \"off\", and \"any\"';\r\n  }\r\n\r\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\r\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\r\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\r\n  @at-root {\r\n    $selector-context: #{&};\r\n\r\n    @if ($encapsulation != 'on') {\r\n      // Note that if this selector is updated, the same change has to be made inside\r\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\r\n      .cdk-high-contrast-#{$target} {\r\n        @include _optionally-nest-content($selector-context) {\r\n          @content;\r\n        }\r\n      }\r\n    }\r\n\r\n    @if ($encapsulation != 'off') {\r\n      .cdk-high-contrast-#{$target} :host {\r\n        @include _optionally-nest-content($selector-context) {\r\n          @content;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","// We want overlays to always appear over user content, so set a baseline\r\n// very high z-index for the overlay container, which is where we create the new\r\n// stacking context for all overlays.\r\n$overlay-container-z-index: 1000 !default;\r\n$overlay-z-index: 1000 !default;\r\n$overlay-backdrop-z-index: 1000 !default;\r\n\r\n// Background color for all of the backdrops\r\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\r\n\r\n// Default backdrop animation is based on the Material Design swift-ease-out.\r\n$backdrop-animation-duration: 400ms !default;\r\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\r\n\r\n/// Emits structural styles required for cdk/overlay to function.\r\n@mixin overlay() {\r\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\r\n    // Disable events from being captured on the overlay container.\r\n    pointer-events: none;\r\n\r\n    // The container should be the size of the viewport.\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  // The overlay-container is an invisible element which contains all individual overlays.\r\n  .cdk-overlay-container {\r\n    position: fixed;\r\n    z-index: $overlay-container-z-index;\r\n\r\n    &:empty {\r\n      // Hide the element when it doesn't have any child nodes. This doesn't\r\n      // include overlays that have been detached, rather than disposed.\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\r\n  // This makes centering the overlay easy without running into the subpixel rendering\r\n  // problems tied to using `transform` and without interfering with the other position\r\n  // strategies.\r\n  .cdk-global-overlay-wrapper {\r\n    display: flex;\r\n    position: absolute;\r\n    z-index: $overlay-z-index;\r\n  }\r\n\r\n  // A single overlay pane.\r\n  .cdk-overlay-pane {\r\n    // Note: it's important for this one to start off `absolute`,\r\n    // in order for us to be able to measure it correctly.\r\n    position: absolute;\r\n    pointer-events: auto;\r\n    box-sizing: border-box;\r\n    z-index: $overlay-z-index;\r\n\r\n    // For connected-position overlays, we set `display: flex` in\r\n    // order to force `max-width` and `max-height` to take effect.\r\n    display: flex;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n  }\r\n\r\n  .cdk-overlay-backdrop {\r\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n\r\n    z-index: $overlay-backdrop-z-index;\r\n    pointer-events: auto;\r\n    -webkit-tap-highlight-color: transparent;\r\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\r\n    opacity: 0;\r\n\r\n    &.cdk-overlay-backdrop-showing {\r\n      opacity: 1;\r\n\r\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\r\n      // this file will be copied to the top-level `cdk` package when putting together the files\r\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\r\n      .cdk-high-contrast-active & {\r\n        // In high contrast mode the rgba background will become solid\r\n        // so we need to fall back to making it opaque using `opacity`.\r\n        opacity: 0.6;\r\n      }\r\n    }\r\n  }\r\n\r\n  .cdk-overlay-dark-backdrop {\r\n    background: $overlay-backdrop-color;\r\n  }\r\n\r\n  .cdk-overlay-transparent-backdrop {\r\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\r\n    // capturing the user's mouse scroll events. Since we also can't use something like\r\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\r\n    // all and using `opacity` to make the element transparent.\r\n    &, &.cdk-overlay-backdrop-showing {\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  // Overlay parent element used with the connected position strategy. Used to constrain the\r\n  // overlay element's size to fit within the viewport.\r\n  .cdk-overlay-connected-position-bounding-box {\r\n    position: absolute;\r\n    z-index: $overlay-z-index;\r\n\r\n    // We use `display: flex` on this element exclusively for centering connected overlays.\r\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\r\n    // flex layout.\r\n    display: flex;\r\n\r\n    // We use the `column` direction here to avoid some flexbox issues in Edge\r\n    // when using the \"grow after open\" options.\r\n    flex-direction: column;\r\n\r\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\r\n    min-width: 1px;\r\n    min-height: 1px;\r\n  }\r\n\r\n  // Used when disabling global scrolling.\r\n  .cdk-global-scrollblock {\r\n    position: fixed;\r\n\r\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\r\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\r\n    // that the element had before we made it `fixed`.\r\n    width: 100%;\r\n\r\n    // Note: this will always add a scrollbar to whatever element it is on, which can\r\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\r\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\r\n    overflow-y: scroll;\r\n  }\r\n}\r\n","// Structural styles for the autosize text fields.\r\n@mixin text-field-autosize() {\r\n  // Remove the resize handle on autosizing textareas, because whatever height\r\n  // the user resized to will be overwritten once they start typing again.\r\n  textarea.cdk-textarea-autosize {\r\n    resize: none;\r\n  }\r\n\r\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\r\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\r\n  // rules do not interfere with the measurement.\r\n  textarea.cdk-textarea-autosize-measuring {\r\n    @include _autosize-measuring-base;\r\n    height: auto !important;\r\n    overflow: hidden !important;\r\n  }\r\n\r\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\r\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\r\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\r\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\r\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\r\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\r\n  textarea.cdk-textarea-autosize-measuring-firefox {\r\n    @include _autosize-measuring-base;\r\n    height: 0 !important;\r\n  }\r\n}\r\n\r\n// Core styles that enable monitoring autofill state of text fields.\r\n@mixin text-field-autofill() {\r\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\r\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\r\n  // needed to prevent LibSass from stripping the keyframes out.\r\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\r\n  @keyframes cdk-text-field-autofill-start {/*!*/}\r\n  @keyframes cdk-text-field-autofill-end {/*!*/}\r\n\r\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\r\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\r\n    animation: cdk-text-field-autofill-start 0s 1ms;\r\n  }\r\n\r\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\r\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\r\n    animation: cdk-text-field-autofill-end 0s 1ms;\r\n  }\r\n}\r\n\r\n@mixin _autosize-measuring-base {\r\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\r\n  // measurement. We just have to account for it later and subtract it off the final result.\r\n  padding: 2px 0 !important;\r\n  box-sizing: content-box !important;\r\n}\r\n\r\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\r\n$autofill-color-frame-count: 0;\r\n\r\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\r\n// Based on: https://stackoverflow.com/questions/2781549/\r\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\r\n@mixin text-field-autofill-color($background, $foreground:'') {\r\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\r\n    to {\r\n      background: $background;\r\n      @if $foreground != '' { color: $foreground; }\r\n    }\r\n  }\r\n\r\n  &:-webkit-autofill {\r\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\r\n  }\r\n\r\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\r\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\r\n    // event won't fire.\r\n    animation: cdk-text-field-autofill-start 0s 1ms,\r\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\r\n  }\r\n\r\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\r\n}\r\n\r\n// @deprecated Use `autosize` and `autofill` instead.\r\n@mixin text-field {\r\n  @include text-field-autosize();\r\n  @include text-field-autofill();\r\n}\r\n","@use 'sass:map';\r\n@use '../style/layout-common';\r\n\r\n/// Mixin that turns on strong focus indicators.\r\n///\r\n/// @example\r\n///   .my-app {\r\n///     @include mat-strong-focus-indicators($config);\r\n///   }\r\n@mixin strong-focus-indicators($config: ()) {\r\n  // Default focus indicator config.\r\n  $default-config: (\r\n    border-style: solid,\r\n    border-width: 3px,\r\n    border-radius: 4px,\r\n  );\r\n\r\n  // Merge default config with user config.\r\n  $config: map.merge($default-config, $config);\r\n  $border-style: map.get($config, border-style);\r\n  $border-width: map.get($config, border-width);\r\n  $border-radius: map.get($config, border-radius);\r\n\r\n  // Base styles for focus indicators.\r\n  .mat-focus-indicator::before {\r\n    @include layout-common.fill();\r\n    box-sizing: border-box;\r\n    pointer-events: none;\r\n    border: $border-width $border-style transparent;\r\n    border-radius: $border-radius;\r\n  }\r\n\r\n  // By default, all focus indicators are flush with the bounding box of their\r\n  // host element. For particular elements (listed below), default inset/offset\r\n  // values are necessary to ensure that the focus indicator is sufficiently\r\n  // contrastive and renders appropriately.\r\n\r\n  .mat-focus-indicator.mat-flat-button::before,\r\n  .mat-focus-indicator.mat-raised-button::before,\r\n  .mat-focus-indicator.mat-fab::before,\r\n  .mat-focus-indicator.mat-mini-fab::before,\r\n  .mat-focus-indicator.mat-chip::before,\r\n  .mat-focus-indicator.mat-sort-header-container::before {\r\n    margin: -($border-width + 2px);\r\n  }\r\n\r\n  .mat-focus-indicator.mat-stroked-button::before,\r\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\r\n    margin: -($border-width + 3px);\r\n  }\r\n\r\n  .mat-focus-indicator.mat-tab-link::before,\r\n  .mat-focus-indicator.mat-tab-label::before {\r\n    margin: 5px;\r\n  }\r\n\r\n  // Render the focus indicator on focus. Defining a pseudo element's\r\n  // content will cause it to render.\r\n\r\n  // Checkboxes, radios, and slide toggles render focus indicators when the\r\n  // associated visually-hidden input is focused.\r\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\r\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\r\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\r\n\r\n  // For options, render the focus indicator when the class .mat-active\r\n  // is present.\r\n  .mat-focus-indicator.mat-option.mat-active::before,\r\n\r\n  // For calendar cells, render the focus indicator when the parent cell is\r\n  // focused.\r\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\r\n\r\n  // Stepper headers have the focus indicator as a descendant,\r\n  // because `::before` is used for other styling.\r\n  .mat-step-header:focus .mat-focus-indicator::before,\r\n\r\n  // For all other components, render the focus indicator on focus.\r\n  .mat-focus-indicator:focus::before {\r\n    content: '';\r\n  }\r\n}\r\n\r\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\r\n// pseudo element within is positioned relative to the host. Private mixin included within\r\n// `mat-core`.\r\n@mixin private-strong-focus-indicators-positioning() {\r\n  .mat-focus-indicator {\r\n    position: relative;\r\n  }\r\n}\r\n","@use '../../cdk/overlay';\r\n@use '../../cdk/a11y';\r\n@use '../../cdk/text-field';\r\n\r\n// Core styles that can be used to apply material design treatments to any element.\r\n@use './ripple/ripple';\r\n@use './focus-indicators/focus-indicators';\r\n@use './typography/all-typography';\r\n\r\n// Mixin that renders all of the core styles that are not theme-dependent.\r\n@mixin core($typography-config: null) {\r\n  @include all-typography.all-component-typographies($typography-config);\r\n  @include ripple.ripple();\r\n  @include a11y.a11y-visually-hidden();\r\n  @include overlay.overlay();\r\n  @include text-field.text-field-autosize();\r\n  @include text-field.text-field-autofill();\r\n\r\n  @include focus-indicators.private-strong-focus-indicators-positioning();\r\n  @include _mdc-core();\r\n}\r\n\r\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\r\n@mixin _mdc-core() {\r\n  @include _mdc-strong-focus-indicators-positioning();\r\n}\r\n\r\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\r\n// pseudo element within is positioned relative to the host. Private mixin included within\r\n// `_mat-mdc-core`.\r\n@mixin _mdc-strong-focus-indicators-positioning() {\r\n  .mat-mdc-focus-indicator {\r\n    position: relative;\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../theming/theming';\r\n\r\n// Colors for the ripple elements.\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $foreground-base: map.get($foreground, base);\r\n  $color-opacity: 0.1;\r\n\r\n  .mat-ripple-element {\r\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\r\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\r\n    @if (meta.type-of($foreground-base) == color) {\r\n      background-color: rgba($foreground-base, $color-opacity);\r\n    }\r\n    @else {\r\n      background-color: $foreground-base;\r\n      opacity: $color-opacity;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\r\n    $color: theming.get-color-config($theme);\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../../theming/theming';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n\r\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\r\n  // this does not work well with elements layered on top of one another. To get around this we\r\n  // blend the colors together based on the base color and the theme background.\r\n  $white-30pct-opacity-on-dark: #686868;\r\n  $black-26pct-opacity-on-light: #b0b0b0;\r\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\r\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\r\n\r\n  .mat-pseudo-checkbox {\r\n    color: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\r\n\r\n    &::after {\r\n      color: theming.get-color-from-palette($background, background);\r\n    }\r\n  }\r\n\r\n  .mat-pseudo-checkbox-disabled {\r\n    color: $disabled-color;\r\n  }\r\n\r\n  .mat-primary .mat-pseudo-checkbox-checked,\r\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\r\n    background: theming.get-color-from-palette(map.get($config, primary));\r\n  }\r\n\r\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\r\n  // theme from their parent, rather than implementing their own theming, which is why we\r\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\r\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\r\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\r\n  .mat-pseudo-checkbox-checked,\r\n  .mat-pseudo-checkbox-indeterminate,\r\n  .mat-accent .mat-pseudo-checkbox-checked,\r\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\r\n    background: theming.get-color-from-palette(map.get($config, accent));\r\n  }\r\n\r\n  .mat-warn .mat-pseudo-checkbox-checked,\r\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\r\n    background: theming.get-color-from-palette(map.get($config, warn));\r\n  }\r\n\r\n  .mat-pseudo-checkbox-checked,\r\n  .mat-pseudo-checkbox-indeterminate {\r\n    &.mat-pseudo-checkbox-disabled {\r\n      background: $disabled-color;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use 'theming/theming';\r\n@use './style/private';\r\n@use './ripple/ripple-theme';\r\n@use './option/option-theme';\r\n@use './option/optgroup-theme';\r\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\r\n@use './style/elevation';\r\n\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  // Wrapper element that provides the theme background when the user's content isn't\r\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\r\n  // selector in case the mixin is included at the top level.\r\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\r\n    $background: map.get($config, background);\r\n    $foreground: map.get($config, foreground);\r\n\r\n    background-color: theming.get-color-from-palette($background, background);\r\n    color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n\r\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\r\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\r\n  // elevated.\r\n  @for $zValue from 0 through 24 {\r\n    .#{elevation.$prefix}#{$zValue} {\r\n      @include private.private-theme-elevation($zValue, $config);\r\n    }\r\n  }\r\n\r\n  // Marker that is used to determine whether the user has added a theme to their page.\r\n  @at-root {\r\n    .mat-theme-loaded-marker {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n// Mixin that renders all of the core styles that depend on the theme.\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\r\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\r\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\r\n    @include ripple-theme.theme($theme);\r\n    @include option-theme.theme($theme);\r\n    @include optgroup-theme.theme($theme);\r\n    @include pseudo-checkbox-theme.theme($theme);\r\n\r\n    $color: theming.get-color-config($theme);\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use 'sass:math';\r\n@use 'sass:meta';\r\n@use 'variables';\r\n\r\n\r\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\r\n// element.\r\n// See: https://material.io/design/environment/elevation.html\r\n// Examples:\r\n//\r\n//\r\n// .mat-foo {\r\n//   @include $mat-elevation(2);\r\n//\r\n//   &:active {\r\n//     @include $mat-elevation(8);\r\n//   }\r\n// }\r\n//\r\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\r\n//\r\n// For an explanation of the design behind how elevation is implemented, see the design doc at\r\n// https://goo.gl/Kq0k9Z.\r\n\r\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\r\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\r\n// space completely obscured by an object relative to its light source), one for penumbra (the\r\n// space partially obscured by an object), and one for ambient (the space which contains the object\r\n// itself). For a further explanation of these terms and their meanings, see\r\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\r\n\r\n// Maps for the different shadow sets and their values within each z-space. These values were\r\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\r\n// all of the values between them.\r\n\r\n@function _get-umbra-map($color, $opacity) {\r\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.2), $color);\r\n\r\n  @return (\r\n    0: '0px 0px 0px 0px #{$shadow-color}',\r\n    1: '0px 2px 1px -1px #{$shadow-color}',\r\n    2: '0px 3px 1px -2px #{$shadow-color}',\r\n    3: '0px 3px 3px -2px #{$shadow-color}',\r\n    4: '0px 2px 4px -1px #{$shadow-color}',\r\n    5: '0px 3px 5px -1px #{$shadow-color}',\r\n    6: '0px 3px 5px -1px #{$shadow-color}',\r\n    7: '0px 4px 5px -2px #{$shadow-color}',\r\n    8: '0px 5px 5px -3px #{$shadow-color}',\r\n    9: '0px 5px 6px -3px #{$shadow-color}',\r\n    10: '0px 6px 6px -3px #{$shadow-color}',\r\n    11: '0px 6px 7px -4px #{$shadow-color}',\r\n    12: '0px 7px 8px -4px #{$shadow-color}',\r\n    13: '0px 7px 8px -4px #{$shadow-color}',\r\n    14: '0px 7px 9px -4px #{$shadow-color}',\r\n    15: '0px 8px 9px -5px #{$shadow-color}',\r\n    16: '0px 8px 10px -5px #{$shadow-color}',\r\n    17: '0px 8px 11px -5px #{$shadow-color}',\r\n    18: '0px 9px 11px -5px #{$shadow-color}',\r\n    19: '0px 9px 12px -6px #{$shadow-color}',\r\n    20: '0px 10px 13px -6px #{$shadow-color}',\r\n    21: '0px 10px 13px -6px #{$shadow-color}',\r\n    22: '0px 10px 14px -6px #{$shadow-color}',\r\n    23: '0px 11px 14px -7px #{$shadow-color}',\r\n    24: '0px 11px 15px -7px #{$shadow-color}'\r\n  );\r\n}\r\n\r\n@function _get-penumbra-map($color, $opacity) {\r\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.14), $color);\r\n\r\n  @return (\r\n    0: '0px 0px 0px 0px #{$shadow-color}',\r\n    1: '0px 1px 1px 0px #{$shadow-color}',\r\n    2: '0px 2px 2px 0px #{$shadow-color}',\r\n    3: '0px 3px 4px 0px #{$shadow-color}',\r\n    4: '0px 4px 5px 0px #{$shadow-color}',\r\n    5: '0px 5px 8px 0px #{$shadow-color}',\r\n    6: '0px 6px 10px 0px #{$shadow-color}',\r\n    7: '0px 7px 10px 1px #{$shadow-color}',\r\n    8: '0px 8px 10px 1px #{$shadow-color}',\r\n    9: '0px 9px 12px 1px #{$shadow-color}',\r\n    10: '0px 10px 14px 1px #{$shadow-color}',\r\n    11: '0px 11px 15px 1px #{$shadow-color}',\r\n    12: '0px 12px 17px 2px #{$shadow-color}',\r\n    13: '0px 13px 19px 2px #{$shadow-color}',\r\n    14: '0px 14px 21px 2px #{$shadow-color}',\r\n    15: '0px 15px 22px 2px #{$shadow-color}',\r\n    16: '0px 16px 24px 2px #{$shadow-color}',\r\n    17: '0px 17px 26px 2px #{$shadow-color}',\r\n    18: '0px 18px 28px 2px #{$shadow-color}',\r\n    19: '0px 19px 29px 2px #{$shadow-color}',\r\n    20: '0px 20px 31px 3px #{$shadow-color}',\r\n    21: '0px 21px 33px 3px #{$shadow-color}',\r\n    22: '0px 22px 35px 3px #{$shadow-color}',\r\n    23: '0px 23px 36px 3px #{$shadow-color}',\r\n    24: '0px 24px 38px 3px #{$shadow-color}'\r\n  );\r\n}\r\n\r\n@function _get-ambient-map($color, $opacity) {\r\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.12), $color);\r\n\r\n  @return (\r\n    0: '0px 0px 0px 0px #{$shadow-color}',\r\n    1: '0px 1px 3px 0px #{$shadow-color}',\r\n    2: '0px 1px 5px 0px #{$shadow-color}',\r\n    3: '0px 1px 8px 0px #{$shadow-color}',\r\n    4: '0px 1px 10px 0px #{$shadow-color}',\r\n    5: '0px 1px 14px 0px #{$shadow-color}',\r\n    6: '0px 1px 18px 0px #{$shadow-color}',\r\n    7: '0px 2px 16px 1px #{$shadow-color}',\r\n    8: '0px 3px 14px 2px #{$shadow-color}',\r\n    9: '0px 3px 16px 2px #{$shadow-color}',\r\n    10: '0px 4px 18px 3px #{$shadow-color}',\r\n    11: '0px 4px 20px 3px #{$shadow-color}',\r\n    12: '0px 5px 22px 4px #{$shadow-color}',\r\n    13: '0px 5px 24px 4px #{$shadow-color}',\r\n    14: '0px 5px 26px 4px #{$shadow-color}',\r\n    15: '0px 6px 28px 5px #{$shadow-color}',\r\n    16: '0px 6px 30px 5px #{$shadow-color}',\r\n    17: '0px 6px 32px 5px #{$shadow-color}',\r\n    18: '0px 7px 34px 6px #{$shadow-color}',\r\n    19: '0px 7px 36px 6px #{$shadow-color}',\r\n    20: '0px 8px 38px 7px #{$shadow-color}',\r\n    21: '0px 8px 40px 7px #{$shadow-color}',\r\n    22: '0px 8px 42px 7px #{$shadow-color}',\r\n    23: '0px 9px 44px 8px #{$shadow-color}',\r\n    24: '0px 9px 46px 8px #{$shadow-color}'\r\n  );\r\n}\r\n\r\n// The default duration value for elevation transitions.\r\n$transition-duration: 280ms !default;\r\n\r\n// The default easing value for elevation transitions.\r\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\r\n\r\n// The default color for elevation shadows.\r\n$color: black !default;\r\n\r\n// The default opacity scaling value for elevation shadows.\r\n$opacity: 1 !default;\r\n\r\n// Prefix for elevation-related selectors.\r\n$prefix: 'mat-elevation-z';\r\n\r\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\r\n// The $zValue must be between 0 and 24.\r\n@mixin elevation($zValue, $color: $color, $opacity: $opacity) {\r\n  @if meta.type-of($zValue) != number or not math.is-unitless($zValue) {\r\n    @error '$zValue must be a unitless number';\r\n  }\r\n  @if $zValue < 0 or $zValue > 24 {\r\n    @error '$zValue must be between 0 and 24';\r\n  }\r\n\r\n  box-shadow: #{map.get(_get-umbra-map($color, $opacity), $zValue)},\r\n              #{map.get(_get-penumbra-map($color, $opacity), $zValue)},\r\n              #{map.get(_get-ambient-map($color, $opacity), $zValue)};\r\n}\r\n\r\n// Applies the elevation to an element in a manner that allows\r\n// consumers to override it via the Material elevation classes.\r\n@mixin overridable-elevation(\r\n    $zValue,\r\n    $color: $color,\r\n    $opacity: $opacity) {\r\n  &:not([class*='#{$prefix}']) {\r\n    @include elevation($zValue, $color, $opacity);\r\n  }\r\n}\r\n\r\n// Returns a string that can be used as the value for a transition property for elevation.\r\n// Calling this function directly is useful in situations where a component needs to transition\r\n// more than one property.\r\n//\r\n// .foo {\r\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\r\n// }\r\n@function private-transition-property-value(\r\n    $duration: $transition-duration,\r\n    $easing: $transition-timing-function) {\r\n  @return box-shadow #{$duration} #{$easing};\r\n}\r\n\r\n// Applies the correct css rules needed to have an element transition between elevations.\r\n// This mixin should be applied to elements whose elevation values will change depending on their\r\n// context (e.g. when active or disabled).\r\n//\r\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\r\n// be used in the same way by clients.\r\n@mixin elevation-transition(\r\n    $duration: $transition-duration,\r\n    $easing: $transition-timing-function) {\r\n  transition: private-transition-property-value($duration, $easing);\r\n}\r\n","@use 'sass:map';\r\n@use '../core/style/private';\r\n@use '../core/theming/theming';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $background: map.get($config, background);\r\n\r\n  .mat-autocomplete-panel {\r\n    @include private.private-theme-overridable-elevation(4, $config);\r\n    background: theming.get-color-from-palette($background, card);\r\n    color: theming.get-color-from-palette($foreground, text);\r\n\r\n    // Selected options in autocompletes should not be gray, but we\r\n    // only want to override the background for selected options if\r\n    // they are *not* in hover or focus state. This change has to be\r\n    // made here because base option styles are shared between the\r\n    // autocomplete and the select.\r\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\r\n      background: theming.get-color-from-palette($background, card);\r\n\r\n      &:not(.mat-option-disabled) {\r\n        color: theming.get-color-from-palette($foreground, text);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-divider {\r\n    border-top-color: theming.get-color-from-palette($foreground, divider);\r\n  }\r\n\r\n  .mat-divider-vertical {\r\n    border-right-color: theming.get-color-from-palette($foreground, divider);\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@mixin private-expansion-focus {\r\n  .mat-expansion-panel {\r\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\r\n    & .mat-expansion-panel-header.cdk-program-focused,\r\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\r\n      &:not([aria-disabled='true']) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../theming/theming';\r\n\r\n// Renders a gradient for showing the dashed line when the input is disabled.\r\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\r\n// to match the Material Design spec.\r\n@mixin private-control-disabled-underline($color) {\r\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\r\n  background-size: 4px 100%;\r\n  background-repeat: repeat-x;\r\n}\r\n\r\n// Figures out the color of the placeholder for a form control.\r\n// Used primarily to prevent the various form controls from\r\n// becoming out of sync since these colors aren't in a palette.\r\n@function private-control-placeholder-color($config) {\r\n  $foreground: map.get($config, foreground);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n  @return theming.get-color-from-palette($foreground, secondary-text,\r\n    if($is-dark-theme, 0.5, 0.42));\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n@use '../core/style/form-common';\r\n\r\n\r\n// Theme styles that only apply to the standard appearance of the form-field.\r\n\r\n@mixin standard-color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $foreground: map.get($config, foreground);\r\n  $is-dark-theme: map.get($config, is-dark);\r\n  $underline-color:\r\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\r\n\r\n  .mat-form-field-appearance-standard {\r\n    .mat-form-field-underline {\r\n      background-color: $underline-color;\r\n    }\r\n\r\n    &.mat-form-field-disabled .mat-form-field-underline {\r\n      @include form-common.private-control-disabled-underline($underline-color);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin standard-typography($config-or-theme) {}\r\n\r\n@mixin private-form-field-standard-density($config-or-theme) {}\r\n\r\n@mixin standard-theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include standard-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include private-form-field-standard-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include standard-typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-icon {\r\n    &.mat-primary {\r\n      color: theming.get-color-from-palette($primary, text);\r\n    }\r\n\r\n    &.mat-accent {\r\n      color: theming.get-color-from-palette($accent, text);\r\n    }\r\n\r\n    &.mat-warn {\r\n      color: theming.get-color-from-palette($warn, text);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n","// stylelint-disable material/no-prefixes\r\n@mixin user-select($value) {\r\n  -webkit-user-select: $value;\r\n  -moz-user-select: $value;\r\n  -ms-user-select: $value;\r\n  user-select: $value;\r\n}\r\n\r\n@mixin input-placeholder {\r\n  &::placeholder {\r\n    @content;\r\n  }\r\n\r\n  &::-moz-placeholder {\r\n    @content;\r\n  }\r\n\r\n  &::-webkit-input-placeholder {\r\n    @content;\r\n  }\r\n\r\n  &:-ms-input-placeholder {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin cursor-grab {\r\n  cursor: -webkit-grab;\r\n  cursor: grab;\r\n}\r\n\r\n@mixin cursor-grabbing {\r\n  cursor: -webkit-grabbing;\r\n  cursor: grabbing;\r\n}\r\n\r\n@mixin backface-visibility($value) {\r\n  -webkit-backface-visibility: $value;\r\n  backface-visibility: $value;\r\n}\r\n\r\n@mixin position-sticky($important: false) {\r\n  position: -webkit-sticky #{if($important, '!important', '')};\r\n  position: sticky #{if($important, '!important', '')};\r\n}\r\n\r\n@mixin private-color-adjust($value) {\r\n  -webkit-print-color-adjust: $value;\r\n  color-adjust: $value;\r\n}\r\n\r\n@mixin private-background-clip($value) {\r\n  -webkit-background-clip: $value;\r\n  background-clip: $value;\r\n}\r\n// stylelint-enable\r\n","@use 'sass:map';\r\n@use 'sass:meta';\r\n@use 'sass:color';\r\n@use '../core/theming/theming';\r\n\r\n// Approximates the correct buffer color by using a mix between the theme color\r\n// and the theme's background color.\r\n@function _get-buffer-color($theme, $background) {\r\n  $theme-color: theming.get-color-from-palette($theme);\r\n  // Return fallback color if the theme uses variables to define colors.\r\n  @if (meta.type-of($theme-color) != 'color' or meta.type-of($background) != 'color') {\r\n    @return theming.get-color-from-palette($theme, lighter);\r\n  }\r\n  @return color.mix($theme-color, $background, $weight: 25%);\r\n}\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get(map.get($config, background), background);\r\n\r\n  .mat-progress-bar-background {\r\n    fill: _get-buffer-color($primary, $background);\r\n  }\r\n\r\n  .mat-progress-bar-buffer {\r\n    background-color: _get-buffer-color($primary, $background);\r\n  }\r\n\r\n  .mat-progress-bar-fill::after {\r\n    background-color: theming.get-color-from-palette($primary);\r\n  }\r\n\r\n  .mat-progress-bar.mat-accent {\r\n    .mat-progress-bar-background {\r\n      fill: _get-buffer-color($accent, $background);\r\n    }\r\n\r\n    .mat-progress-bar-buffer {\r\n      background-color: _get-buffer-color($accent, $background);\r\n    }\r\n\r\n    .mat-progress-bar-fill::after {\r\n      background-color: theming.get-color-from-palette($accent);\r\n    }\r\n  }\r\n\r\n  .mat-progress-bar.mat-warn {\r\n    .mat-progress-bar-background {\r\n      fill: _get-buffer-color($warn, $background);\r\n    }\r\n\r\n    .mat-progress-bar-buffer {\r\n      background-color: _get-buffer-color($warn, $background);\r\n    }\r\n\r\n    .mat-progress-bar-fill::after {\r\n      background-color: theming.get-color-from-palette($warn);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n","@use 'sass:map';\r\n@use '../core/theming/theming';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n\r\n  .mat-progress-spinner, .mat-spinner {\r\n    circle {\r\n      stroke: theming.get-color-from-palette($primary);\r\n    }\r\n\r\n    &.mat-accent circle {\r\n      stroke: theming.get-color-from-palette($accent);\r\n    }\r\n\r\n    &.mat-warn circle {\r\n      stroke: theming.get-color-from-palette($warn);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:color';\r\n@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../core/style/private';\r\n@use '../core/theming/theming';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $primary: map.get($config, primary);\r\n  $accent: map.get($config, accent);\r\n  $warn: map.get($config, warn);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\r\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\r\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\r\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\r\n\r\n  .mat-drawer-container {\r\n    background-color: $drawer-container-background-color;\r\n    color: theming.get-color-from-palette($foreground, text);\r\n  }\r\n\r\n  .mat-drawer {\r\n    background-color: $drawer-background-color;\r\n    color: theming.get-color-from-palette($foreground, text);\r\n\r\n    &.mat-drawer-push {\r\n      background-color: $drawer-push-background-color;\r\n    }\r\n\r\n    &:not(.mat-drawer-side) {\r\n      // The elevation of z-16 is noted in the design specifications.\r\n      // See https://material.io/design/components/navigation-drawer.html\r\n      @include private.private-theme-elevation(16, $config);\r\n    }\r\n  }\r\n\r\n  .mat-drawer-side {\r\n    border-right: $drawer-side-border;\r\n\r\n    &.mat-drawer-end {\r\n      border-left: $drawer-side-border;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  [dir='rtl'] .mat-drawer-side {\r\n    border-left: $drawer-side-border;\r\n    border-right: none;\r\n\r\n    &.mat-drawer-end {\r\n      border-left: none;\r\n      border-right: $drawer-side-border;\r\n    }\r\n  }\r\n\r\n  .mat-drawer-backdrop.mat-drawer-shown {\r\n    $opacity: 0.6;\r\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\r\n\r\n    @if (meta.type-of($backdrop-color) == color) {\r\n      // We use invert() here to have the darken the background color expected to be used. If the\r\n      // background is light, we use a dark backdrop. If the background is dark,\r\n      // we use a light backdrop.\r\n      background-color: color.invert($backdrop-color);\r\n    }\r\n    @else {\r\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\r\n      // `opacity` to make it opaque since its end value could be a solid color.\r\n      background-color: $backdrop-color;\r\n      opacity: $opacity;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","@use 'sass:color';\r\n@use 'sass:map';\r\n@use 'sass:meta';\r\n@use '../core/theming/theming';\r\n\r\n@mixin color($config-or-theme) {\r\n  $config: theming.get-color-config($config-or-theme);\r\n  $background: map.get($config, background);\r\n  $foreground: map.get($config, foreground);\r\n\r\n  .mat-sort-header-arrow {\r\n    $table-background: theming.get-color-from-palette($background, 'card');\r\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\r\n\r\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\r\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\r\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\r\n    // using the value to determine the percentage of the background to put into foreground\r\n    // when mixing the colors together. Otherwise, if it resolves to something different\r\n    // (e.g. it resolves to a CSS variable), we use the color directly.\r\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\r\n      $text-opacity: opacity($text-color);\r\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\r\n    }\r\n    @else {\r\n      color: $text-color;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin typography($config-or-theme) {}\r\n\r\n@mixin _density($config-or-theme) {}\r\n\r\n@mixin theme($theme-or-color-config) {\r\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\r\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\r\n    $color: theming.get-color-config($theme);\r\n    $density: theming.get-density-config($theme);\r\n    $typography: theming.get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include typography($typography);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * App Global CSS\r\n * ----------------------------------------------------------------------------\r\n * Put style rules here that you want to apply globally. These styles are for\r\n * the entire app and not just one component. Additionally, this file can be\r\n * used as an entry point to import other CSS/Sass files to be included in the\r\n * output CSS.\r\n * For more information on global stylesheets, visit the documentation:\r\n * https://ionicframework.com/docs/layout/global-stylesheets\r\n */\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\n@import \"~@ionic/angular/css/core.css\";\r\n\r\n/* Basic CSS for apps built with Ionic */\r\n@import \"~@ionic/angular/css/normalize.css\";\r\n@import \"~@ionic/angular/css/structure.css\";\r\n@import \"~@ionic/angular/css/typography.css\";\r\n@import '~@ionic/angular/css/display.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\n@import \"~@ionic/angular/css/padding.css\";\r\n@import \"~@ionic/angular/css/float-elements.css\";\r\n@import \"~@ionic/angular/css/text-alignment.css\";\r\n@import \"~@ionic/angular/css/text-transformation.css\";\r\n@import \"~@ionic/angular/css/flex-utils.css\";\r\n:root {\r\n  --ion-background-color: #ffffff;\r\n  --ion-background-color-rgb: 255,255,255;\r\n  --ion-text-color: #000000;\r\n  --ion-text-color-rgb: 0,0,0;\r\n  --ion-color-step-50: #f2f2f2;\r\n  --ion-color-step-100: #e6e6e6;\r\n  --ion-color-step-150: #d9d9d9;\r\n  --ion-color-step-200: #cccccc;\r\n  --ion-color-step-250: #bfbfbf;\r\n  --ion-color-step-300: #b3b3b3;\r\n  --ion-color-step-350: #a6a6a6;\r\n  --ion-color-step-400: #999999;\r\n  --ion-color-step-450: #8c8c8c;\r\n  --ion-color-step-500: #808080;\r\n  --ion-color-step-550: #737373;\r\n  --ion-color-step-600: #666666;\r\n  --ion-color-step-650: #595959;\r\n  --ion-color-step-700: #4d4d4d;\r\n  --ion-color-step-750: #404040;\r\n  --ion-color-step-800: #333333;\r\n  --ion-color-step-850: #262626;\r\n  --ion-color-step-900: #191919;\r\n  --ion-color-step-950: #0d0d0d;\r\n}\r\n.mat-h2{\r\n    margin:0 0 5px !important; \r\n}\r\nbody, h1, h2, h3, h4, h5, h6 {\r\n  font-family: 'text-barlow-condensed' !important;\r\n  color: rgba(20, 27, 65, 1) !important;\r\n}\r\nbutton-native {\r\n  font-family: 'text' !important;\r\n}\r\nnav {\r\n  font-weight: 500 !important;\r\n  font-size: 12px !important;\r\n  font-family: 'text-barlow-condensed' !important;\r\n  color: #141B41 !important;\r\n}\r\n.header {\r\n  font-weight: 300 !important;\r\n  font-size: 40px !important;\r\n  font-family: 'text-barlow-condensed' !important;\r\n  color: #141B41 !important;\r\n  margin:0 0 5px;\r\n}\r\n.header1 {\r\n  font-weight: 300 !important;\r\n  font-size: 22px !important;\r\n  font-family: 'text-barlow-condensed' !important;\r\n  color: #141B41 !important;\r\n}\r\n.header2 {\r\n  font-weight: 700 !important;\r\n  font-size: 24px !important;\r\n  font-family: 'text' !important;\r\n  color: #484751 !important;\r\n}\r\n.body-header {\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  font-family: 'roboto';\r\n  color: #141B41;\r\n}\r\n.body-body {\r\n  font-weight: 400 !important;\r\n  font-size: 14px !important;\r\n  font-family: 'text' !important;\r\n  color: #141B41 !important;\r\n}\r\n.mat-panel-title {\r\n  font-weight: 400 !important;\r\n  font-size: 20px !important;\r\n  font-family: 'text-barlow-condensed' !important;\r\n  color: #141B41 !important;\r\n}\r\n.mat-expansion-panel-header {\r\n  font-weight: 400 !important;\r\n  font-size: 20px !important;\r\n  font-family: 'text-barlow-condensed' !important;\r\n  color: #141B41 !important;\r\n}\r\n.mat-expansion-panel-body {\r\n  padding: 0 !important;\r\n}\r\n",null,"html.ios {\r\n  --ion-default-font: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Roboto\", sans-serif;\r\n}\r\n\r\nhtml.md {\r\n  --ion-default-font: \"Roboto\", \"Helvetica Neue\", sans-serif;\r\n}\r\n\r\nhtml {\r\n  --ion-font-family: var(--ion-default-font);\r\n}\r\n\r\nbody {\r\n  background: var(--ion-background-color);\r\n}\r\n\r\nbody.backdrop-no-scroll {\r\n  overflow: hidden;\r\n}\r\n\r\nhtml.ios ion-modal.modal-card .ion-page > ion-header > ion-toolbar:first-of-type {\r\n  padding-top: 0px;\r\n}\r\n\r\nhtml.ios ion-modal .ion-page {\r\n  border-radius: inherit;\r\n}\r\n\r\n.ion-color-primary {\r\n  --ion-color-base: var(--ion-color-primary, #3880ff) !important;\r\n  --ion-color-base-rgb: var(--ion-color-primary-rgb, 56, 128, 255) !important;\r\n  --ion-color-contrast: var(--ion-color-primary-contrast, #fff) !important;\r\n  --ion-color-contrast-rgb: var(--ion-color-primary-contrast-rgb, 255, 255, 255) !important;\r\n  --ion-color-shade: var(--ion-color-primary-shade, #3171e0) !important;\r\n  --ion-color-tint: var(--ion-color-primary-tint, #4c8dff) !important;\r\n}\r\n\r\n.ion-color-secondary {\r\n  --ion-color-base: var(--ion-color-secondary, #3dc2ff) !important;\r\n  --ion-color-base-rgb: var(--ion-color-secondary-rgb, 61, 194, 255) !important;\r\n  --ion-color-contrast: var(--ion-color-secondary-contrast, #fff) !important;\r\n  --ion-color-contrast-rgb: var(--ion-color-secondary-contrast-rgb, 255, 255, 255) !important;\r\n  --ion-color-shade: var(--ion-color-secondary-shade, #36abe0) !important;\r\n  --ion-color-tint: var(--ion-color-secondary-tint, #50c8ff) !important;\r\n}\r\n\r\n.ion-color-tertiary {\r\n  --ion-color-base: var(--ion-color-tertiary, #5260ff) !important;\r\n  --ion-color-base-rgb: var(--ion-color-tertiary-rgb, 82, 96, 255) !important;\r\n  --ion-color-contrast: var(--ion-color-tertiary-contrast, #fff) !important;\r\n  --ion-color-contrast-rgb: var(--ion-color-tertiary-contrast-rgb, 255, 255, 255) !important;\r\n  --ion-color-shade: var(--ion-color-tertiary-shade, #4854e0) !important;\r\n  --ion-color-tint: var(--ion-color-tertiary-tint, #6370ff) !important;\r\n}\r\n\r\n.ion-color-success {\r\n  --ion-color-base: var(--ion-color-success, #2dd36f) !important;\r\n  --ion-color-base-rgb: var(--ion-color-success-rgb, 45, 211, 111) !important;\r\n  --ion-color-contrast: var(--ion-color-success-contrast, #fff) !important;\r\n  --ion-color-contrast-rgb: var(--ion-color-success-contrast-rgb, 255, 255, 255) !important;\r\n  --ion-color-shade: var(--ion-color-success-shade, #28ba62) !important;\r\n  --ion-color-tint: var(--ion-color-success-tint, #42d77d) !important;\r\n}\r\n\r\n.ion-color-warning {\r\n  --ion-color-base: var(--ion-color-warning, #ffc409) !important;\r\n  --ion-color-base-rgb: var(--ion-color-warning-rgb, 255, 196, 9) !important;\r\n  --ion-color-contrast: var(--ion-color-warning-contrast, #000) !important;\r\n  --ion-color-contrast-rgb: var(--ion-color-warning-contrast-rgb, 0, 0, 0) !important;\r\n  --ion-color-shade: var(--ion-color-warning-shade, #e0ac08) !important;\r\n  --ion-color-tint: var(--ion-color-warning-tint, #ffca22) !important;\r\n}\r\n\r\n.ion-color-danger {\r\n  --ion-color-base: var(--ion-color-danger, #eb445a) !important;\r\n  --ion-color-base-rgb: var(--ion-color-danger-rgb, 235, 68, 90) !important;\r\n  --ion-color-contrast: var(--ion-color-danger-contrast, #fff) !important;\r\n  --ion-color-contrast-rgb: var(--ion-color-danger-contrast-rgb, 255, 255, 255) !important;\r\n  --ion-color-shade: var(--ion-color-danger-shade, #cf3c4f) !important;\r\n  --ion-color-tint: var(--ion-color-danger-tint, #ed576b) !important;\r\n}\r\n\r\n.ion-color-light {\r\n  --ion-color-base: var(--ion-color-light, #f4f5f8) !important;\r\n  --ion-color-base-rgb: var(--ion-color-light-rgb, 244, 245, 248) !important;\r\n  --ion-color-contrast: var(--ion-color-light-contrast, #000) !important;\r\n  --ion-color-contrast-rgb: var(--ion-color-light-contrast-rgb, 0, 0, 0) !important;\r\n  --ion-color-shade: var(--ion-color-light-shade, #d7d8da) !important;\r\n  --ion-color-tint: var(--ion-color-light-tint, #f5f6f9) !important;\r\n}\r\n\r\n.ion-color-medium {\r\n  --ion-color-base: var(--ion-color-medium, #92949c) !important;\r\n  --ion-color-base-rgb: var(--ion-color-medium-rgb, 146, 148, 156) !important;\r\n  --ion-color-contrast: var(--ion-color-medium-contrast, #fff) !important;\r\n  --ion-color-contrast-rgb: var(--ion-color-medium-contrast-rgb, 255, 255, 255) !important;\r\n  --ion-color-shade: var(--ion-color-medium-shade, #808289) !important;\r\n  --ion-color-tint: var(--ion-color-medium-tint, #9d9fa6) !important;\r\n}\r\n\r\n.ion-color-dark {\r\n  --ion-color-base: var(--ion-color-dark, #222428) !important;\r\n  --ion-color-base-rgb: var(--ion-color-dark-rgb, 34, 36, 40) !important;\r\n  --ion-color-contrast: var(--ion-color-dark-contrast, #fff) !important;\r\n  --ion-color-contrast-rgb: var(--ion-color-dark-contrast-rgb, 255, 255, 255) !important;\r\n  --ion-color-shade: var(--ion-color-dark-shade, #1e2023) !important;\r\n  --ion-color-tint: var(--ion-color-dark-tint, #383a3e) !important;\r\n}\r\n\r\n.ion-page {\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  position: absolute;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  contain: layout size style;\r\n  overflow: hidden;\r\n  z-index: 0;\r\n}\r\n\r\n.split-pane-visible > .ion-page.split-pane-main {\r\n  position: relative;\r\n}\r\n\r\nion-route,\r\nion-route-redirect,\r\nion-router,\r\nion-select-option,\r\nion-nav-controller,\r\nion-menu-controller,\r\nion-action-sheet-controller,\r\nion-alert-controller,\r\nion-loading-controller,\r\nion-modal-controller,\r\nion-picker-controller,\r\nion-popover-controller,\r\nion-toast-controller,\r\n.ion-page-hidden,\r\n[hidden] {\r\n  /* stylelint-disable-next-line declaration-no-important */\r\n  display: none !important;\r\n}\r\n\r\n.ion-page-invisible {\r\n  opacity: 0;\r\n}\r\n\r\n.can-go-back > ion-header ion-back-button {\r\n  display: block;\r\n}\r\n\r\nhtml.plt-ios.plt-hybrid, html.plt-ios.plt-pwa {\r\n  --ion-statusbar-padding: 20px;\r\n}\r\n\r\n@supports (padding-top: 20px) {\r\n  html {\r\n    --ion-safe-area-top: var(--ion-statusbar-padding);\r\n  }\r\n}\r\n@supports (padding-top: constant(safe-area-inset-top)) {\r\n  html {\r\n    --ion-safe-area-top: constant(safe-area-inset-top);\r\n    --ion-safe-area-bottom: constant(safe-area-inset-bottom);\r\n    --ion-safe-area-left: constant(safe-area-inset-left);\r\n    --ion-safe-area-right: constant(safe-area-inset-right);\r\n  }\r\n}\r\n@supports (padding-top: env(safe-area-inset-top)) {\r\n  html {\r\n    --ion-safe-area-top: env(safe-area-inset-top);\r\n    --ion-safe-area-bottom: env(safe-area-inset-bottom);\r\n    --ion-safe-area-left: env(safe-area-inset-left);\r\n    --ion-safe-area-right: env(safe-area-inset-right);\r\n  }\r\n}\r\nion-card.ion-color .ion-inherit-color,\r\nion-card-header.ion-color .ion-inherit-color {\r\n  color: inherit;\r\n}\r\n\r\n.menu-content {\r\n  transform: translate3d(0,  0,  0);\r\n}\r\n\r\n.menu-content-open {\r\n  cursor: pointer;\r\n  touch-action: manipulation;\r\n  pointer-events: none;\r\n}\r\n\r\n.ios .menu-content-reveal {\r\n  box-shadow: -8px 0 42px rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n[dir=rtl].ios .menu-content-reveal {\r\n  box-shadow: 8px 0 42px rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.md .menu-content-reveal {\r\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\r\n}\r\n\r\n.md .menu-content-push {\r\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\r\n}\r\n\r\n/*# sourceMappingURL=core.css.map */\r\n",null,null,null,null,null,"audio,\r\ncanvas,\r\nprogress,\r\nvideo {\r\n  vertical-align: baseline;\r\n}\r\n\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n\r\nb,\r\nstrong {\r\n  font-weight: bold;\r\n}\r\n\r\nimg {\r\n  max-width: 100%;\r\n  border: 0;\r\n}\r\n\r\nsvg:not(:root) {\r\n  overflow: hidden;\r\n}\r\n\r\nfigure {\r\n  margin: 1em 40px;\r\n}\r\n\r\nhr {\r\n  height: 1px;\r\n  border-width: 0;\r\n  box-sizing: content-box;\r\n}\r\n\r\npre {\r\n  overflow: auto;\r\n}\r\n\r\ncode,\r\nkbd,\r\npre,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\nlabel,\r\ninput,\r\nselect,\r\ntextarea {\r\n  font-family: inherit;\r\n  line-height: normal;\r\n}\r\n\r\ntextarea {\r\n  overflow: auto;\r\n  height: auto;\r\n  font: inherit;\r\n  color: inherit;\r\n}\r\n\r\ntextarea::placeholder {\r\n  padding-left: 2px;\r\n}\r\n\r\nform,\r\ninput,\r\noptgroup,\r\nselect {\r\n  margin: 0;\r\n  font: inherit;\r\n  color: inherit;\r\n}\r\n\r\nhtml input[type=button],\r\ninput[type=reset],\r\ninput[type=submit] {\r\n  cursor: pointer;\r\n  -webkit-appearance: button;\r\n}\r\n\r\na,\r\na div,\r\na span,\r\na ion-icon,\r\na ion-label,\r\nbutton,\r\nbutton div,\r\nbutton span,\r\nbutton ion-icon,\r\nbutton ion-label,\r\n.ion-tappable,\r\n[tappable],\r\n[tappable] div,\r\n[tappable] span,\r\n[tappable] ion-icon,\r\n[tappable] ion-label,\r\ninput,\r\ntextarea {\r\n  touch-action: manipulation;\r\n}\r\n\r\na ion-label,\r\nbutton ion-label {\r\n  pointer-events: none;\r\n}\r\n\r\nbutton {\r\n  border: 0;\r\n  border-radius: 0;\r\n  font-family: inherit;\r\n  font-style: inherit;\r\n  font-variant: inherit;\r\n  line-height: 1;\r\n  text-transform: none;\r\n  cursor: pointer;\r\n  -webkit-appearance: button;\r\n}\r\n\r\n[tappable] {\r\n  cursor: pointer;\r\n}\r\n\r\na[disabled],\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n  cursor: default;\r\n}\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  padding: 0;\r\n  border: 0;\r\n}\r\n\r\ninput[type=checkbox],\r\ninput[type=radio] {\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\ninput[type=number]::-webkit-inner-spin-button,\r\ninput[type=number]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\ninput[type=search]::-webkit-search-cancel-button,\r\ninput[type=search]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\ntd,\r\nth {\r\n  padding: 0;\r\n}\r\n\r\n/*# sourceMappingURL=normalize.css.map */\r\n",null,"* {\r\n  box-sizing: border-box;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-touch-callout: none;\r\n}\r\n\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  text-size-adjust: 100%;\r\n}\r\n\r\nhtml:not(.hydrated) body {\r\n  display: none;\r\n}\r\n\r\nhtml.plt-pwa {\r\n  height: 100vh;\r\n}\r\n\r\nbody {\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -webkit-font-smoothing: antialiased;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  position: fixed;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 100%;\r\n  max-height: 100%;\r\n  text-rendering: optimizeLegibility;\r\n  overflow: hidden;\r\n  touch-action: manipulation;\r\n  -webkit-user-drag: none;\r\n  -ms-content-zooming: none;\r\n  word-wrap: break-word;\r\n  overscroll-behavior-y: none;\r\n  text-size-adjust: none;\r\n}\r\n\r\n/*# sourceMappingURL=structure.css.map */\r\n",null,"html {\r\n  font-family: var(--ion-font-family);\r\n}\r\n\r\na {\r\n  background-color: transparent;\r\n  color: var(--ion-color-primary, #3880ff);\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  margin-top: 16px;\r\n  margin-bottom: 10px;\r\n  font-weight: 500;\r\n  line-height: 1.2;\r\n}\r\nh1 {\r\n  margin-top: 20px;\r\n  font-size: 26px;\r\n}\r\nh2 {\r\n  margin-top: 18px;\r\n  font-size: 24px;\r\n}\r\nh3 {\r\n  font-size: 22px;\r\n}\r\n\r\nh4 {\r\n  font-size: 20px;\r\n}\r\n\r\nh5 {\r\n  font-size: 18px;\r\n}\r\n\r\nh6 {\r\n  font-size: 16px;\r\n}\r\n\r\nsmall {\r\n  font-size: 75%;\r\n}\r\n\r\nsub,\r\nsup {\r\n  position: relative;\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\n/*# sourceMappingURL=typography.css.map */\r\n",null,".ion-hide {\r\n  display: none !important;\r\n}\r\n\r\n.ion-hide-up {\r\n  display: none !important;\r\n}\r\n\r\n.ion-hide-down {\r\n  display: none !important;\r\n}\r\n\r\n@media (min-width: 576px) {\r\n  .ion-hide-sm-up {\r\n    display: none !important;\r\n  }\r\n}\r\n@media (max-width: 575.98px) {\r\n  .ion-hide-sm-down {\r\n    display: none !important;\r\n  }\r\n}\r\n@media (min-width: 768px) {\r\n  .ion-hide-md-up {\r\n    display: none !important;\r\n  }\r\n}\r\n@media (max-width: 767.98px) {\r\n  .ion-hide-md-down {\r\n    display: none !important;\r\n  }\r\n}\r\n@media (min-width: 992px) {\r\n  .ion-hide-lg-up {\r\n    display: none !important;\r\n  }\r\n}\r\n@media (max-width: 991.98px) {\r\n  .ion-hide-lg-down {\r\n    display: none !important;\r\n  }\r\n}\r\n@media (min-width: 1200px) {\r\n  .ion-hide-xl-up {\r\n    display: none !important;\r\n  }\r\n}\r\n@media (max-width: 1199.98px) {\r\n  .ion-hide-xl-down {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n/*# sourceMappingURL=display.css.map */\r\n",null,".ion-no-padding {\r\n  --padding-start: 0;\r\n  --padding-end: 0;\r\n  --padding-top: 0;\r\n  --padding-bottom: 0;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n}\r\n\r\n.ion-padding {\r\n  --padding-start: var(--ion-padding, 16px);\r\n  --padding-end: var(--ion-padding, 16px);\r\n  --padding-top: var(--ion-padding, 16px);\r\n  --padding-bottom: var(--ion-padding, 16px);\r\n  padding-left: var(--ion-padding, 16px);\r\n  padding-right: var(--ion-padding, 16px);\r\n  padding-top: var(--ion-padding, 16px);\r\n  padding-bottom: var(--ion-padding, 16px);\r\n}\r\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\r\n  .ion-padding {\r\n    padding-left: unset;\r\n    padding-right: unset;\r\n    -webkit-padding-start: var(--ion-padding, 16px);\r\n    padding-inline-start: var(--ion-padding, 16px);\r\n    -webkit-padding-end: var(--ion-padding, 16px);\r\n    padding-inline-end: var(--ion-padding, 16px);\r\n  }\r\n}\r\n\r\n.ion-padding-top {\r\n  --padding-top: var(--ion-padding, 16px);\r\n  padding-top: var(--ion-padding, 16px);\r\n}\r\n.ion-padding-start {\r\n  --padding-start: var(--ion-padding, 16px);\r\n  padding-left: var(--ion-padding, 16px);\r\n}\r\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\r\n  .ion-padding-start {\r\n    padding-left: unset;\r\n    -webkit-padding-start: var(--ion-padding, 16px);\r\n    padding-inline-start: var(--ion-padding, 16px);\r\n  }\r\n}\r\n\r\n.ion-padding-end {\r\n  --padding-end: var(--ion-padding, 16px);\r\n  padding-right: var(--ion-padding, 16px);\r\n}\r\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\r\n  .ion-padding-end {\r\n    padding-right: unset;\r\n    -webkit-padding-end: var(--ion-padding, 16px);\r\n    padding-inline-end: var(--ion-padding, 16px);\r\n  }\r\n}\r\n\r\n.ion-padding-bottom {\r\n  --padding-bottom: var(--ion-padding, 16px);\r\n  padding-bottom: var(--ion-padding, 16px);\r\n}\r\n.ion-padding-vertical {\r\n  --padding-top: var(--ion-padding, 16px);\r\n  --padding-bottom: var(--ion-padding, 16px);\r\n  padding-top: var(--ion-padding, 16px);\r\n  padding-bottom: var(--ion-padding, 16px);\r\n}\r\n.ion-padding-horizontal {\r\n  --padding-start: var(--ion-padding, 16px);\r\n  --padding-end: var(--ion-padding, 16px);\r\n  padding-left: var(--ion-padding, 16px);\r\n  padding-right: var(--ion-padding, 16px);\r\n}\r\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\r\n  .ion-padding-horizontal {\r\n    padding-left: unset;\r\n    padding-right: unset;\r\n    -webkit-padding-start: var(--ion-padding, 16px);\r\n    padding-inline-start: var(--ion-padding, 16px);\r\n    -webkit-padding-end: var(--ion-padding, 16px);\r\n    padding-inline-end: var(--ion-padding, 16px);\r\n  }\r\n}\r\n\r\n.ion-no-margin {\r\n  --margin-start: 0;\r\n  --margin-end: 0;\r\n  --margin-top: 0;\r\n  --margin-bottom: 0;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.ion-margin {\r\n  --margin-start: var(--ion-margin, 16px);\r\n  --margin-end: var(--ion-margin, 16px);\r\n  --margin-top: var(--ion-margin, 16px);\r\n  --margin-bottom: var(--ion-margin, 16px);\r\n  margin-left: var(--ion-margin, 16px);\r\n  margin-right: var(--ion-margin, 16px);\r\n  margin-top: var(--ion-margin, 16px);\r\n  margin-bottom: var(--ion-margin, 16px);\r\n}\r\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\r\n  .ion-margin {\r\n    margin-left: unset;\r\n    margin-right: unset;\r\n    -webkit-margin-start: var(--ion-margin, 16px);\r\n    margin-inline-start: var(--ion-margin, 16px);\r\n    -webkit-margin-end: var(--ion-margin, 16px);\r\n    margin-inline-end: var(--ion-margin, 16px);\r\n  }\r\n}\r\n\r\n.ion-margin-top {\r\n  --margin-top: var(--ion-margin, 16px);\r\n  margin-top: var(--ion-margin, 16px);\r\n}\r\n.ion-margin-start {\r\n  --margin-start: var(--ion-margin, 16px);\r\n  margin-left: var(--ion-margin, 16px);\r\n}\r\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\r\n  .ion-margin-start {\r\n    margin-left: unset;\r\n    -webkit-margin-start: var(--ion-margin, 16px);\r\n    margin-inline-start: var(--ion-margin, 16px);\r\n  }\r\n}\r\n\r\n.ion-margin-end {\r\n  --margin-end: var(--ion-margin, 16px);\r\n  margin-right: var(--ion-margin, 16px);\r\n}\r\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\r\n  .ion-margin-end {\r\n    margin-right: unset;\r\n    -webkit-margin-end: var(--ion-margin, 16px);\r\n    margin-inline-end: var(--ion-margin, 16px);\r\n  }\r\n}\r\n\r\n.ion-margin-bottom {\r\n  --margin-bottom: var(--ion-margin, 16px);\r\n  margin-bottom: var(--ion-margin, 16px);\r\n}\r\n.ion-margin-vertical {\r\n  --margin-top: var(--ion-margin, 16px);\r\n  --margin-bottom: var(--ion-margin, 16px);\r\n  margin-top: var(--ion-margin, 16px);\r\n  margin-bottom: var(--ion-margin, 16px);\r\n}\r\n.ion-margin-horizontal {\r\n  --margin-start: var(--ion-margin, 16px);\r\n  --margin-end: var(--ion-margin, 16px);\r\n  margin-left: var(--ion-margin, 16px);\r\n  margin-right: var(--ion-margin, 16px);\r\n}\r\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\r\n  .ion-margin-horizontal {\r\n    margin-left: unset;\r\n    margin-right: unset;\r\n    -webkit-margin-start: var(--ion-margin, 16px);\r\n    margin-inline-start: var(--ion-margin, 16px);\r\n    -webkit-margin-end: var(--ion-margin, 16px);\r\n    margin-inline-end: var(--ion-margin, 16px);\r\n  }\r\n}\r\n\r\n/*# sourceMappingURL=padding.css.map */\r\n",null,".ion-float-left {\r\n  float: left !important;\r\n}\r\n\r\n.ion-float-right {\r\n  float: right !important;\r\n}\r\n\r\n.ion-float-start {\r\n  float: left !important;\r\n}\r\n[dir=rtl] .ion-float-start, :host-context([dir=rtl]) .ion-float-start {\r\n  float: right !important;\r\n}\r\n\r\n.ion-float-end {\r\n  float: right !important;\r\n}\r\n[dir=rtl] .ion-float-end, :host-context([dir=rtl]) .ion-float-end {\r\n  float: left !important;\r\n}\r\n\r\n@media (min-width: 576px) {\r\n  .ion-float-sm-left {\r\n    float: left !important;\r\n  }\r\n\r\n  .ion-float-sm-right {\r\n    float: right !important;\r\n  }\r\n\r\n  .ion-float-sm-start {\r\n    float: left !important;\r\n  }\r\n  [dir=rtl] .ion-float-sm-start, :host-context([dir=rtl]) .ion-float-sm-start {\r\n    float: right !important;\r\n  }\r\n\r\n  .ion-float-sm-end {\r\n    float: right !important;\r\n  }\r\n  [dir=rtl] .ion-float-sm-end, :host-context([dir=rtl]) .ion-float-sm-end {\r\n    float: left !important;\r\n  }\r\n}\r\n@media (min-width: 768px) {\r\n  .ion-float-md-left {\r\n    float: left !important;\r\n  }\r\n\r\n  .ion-float-md-right {\r\n    float: right !important;\r\n  }\r\n\r\n  .ion-float-md-start {\r\n    float: left !important;\r\n  }\r\n  [dir=rtl] .ion-float-md-start, :host-context([dir=rtl]) .ion-float-md-start {\r\n    float: right !important;\r\n  }\r\n\r\n  .ion-float-md-end {\r\n    float: right !important;\r\n  }\r\n  [dir=rtl] .ion-float-md-end, :host-context([dir=rtl]) .ion-float-md-end {\r\n    float: left !important;\r\n  }\r\n}\r\n@media (min-width: 992px) {\r\n  .ion-float-lg-left {\r\n    float: left !important;\r\n  }\r\n\r\n  .ion-float-lg-right {\r\n    float: right !important;\r\n  }\r\n\r\n  .ion-float-lg-start {\r\n    float: left !important;\r\n  }\r\n  [dir=rtl] .ion-float-lg-start, :host-context([dir=rtl]) .ion-float-lg-start {\r\n    float: right !important;\r\n  }\r\n\r\n  .ion-float-lg-end {\r\n    float: right !important;\r\n  }\r\n  [dir=rtl] .ion-float-lg-end, :host-context([dir=rtl]) .ion-float-lg-end {\r\n    float: left !important;\r\n  }\r\n}\r\n@media (min-width: 1200px) {\r\n  .ion-float-xl-left {\r\n    float: left !important;\r\n  }\r\n\r\n  .ion-float-xl-right {\r\n    float: right !important;\r\n  }\r\n\r\n  .ion-float-xl-start {\r\n    float: left !important;\r\n  }\r\n  [dir=rtl] .ion-float-xl-start, :host-context([dir=rtl]) .ion-float-xl-start {\r\n    float: right !important;\r\n  }\r\n\r\n  .ion-float-xl-end {\r\n    float: right !important;\r\n  }\r\n  [dir=rtl] .ion-float-xl-end, :host-context([dir=rtl]) .ion-float-xl-end {\r\n    float: left !important;\r\n  }\r\n}\r\n\r\n/*# sourceMappingURL=float-elements.css.map */\r\n",null,".ion-text-center {\r\n  text-align: center !important;\r\n}\r\n\r\n.ion-text-justify {\r\n  text-align: justify !important;\r\n}\r\n\r\n.ion-text-start {\r\n  text-align: start !important;\r\n}\r\n\r\n.ion-text-end {\r\n  text-align: end !important;\r\n}\r\n\r\n.ion-text-left {\r\n  text-align: left !important;\r\n}\r\n\r\n.ion-text-right {\r\n  text-align: right !important;\r\n}\r\n\r\n.ion-text-nowrap {\r\n  white-space: nowrap !important;\r\n}\r\n\r\n.ion-text-wrap {\r\n  white-space: normal !important;\r\n}\r\n\r\n@media (min-width: 576px) {\r\n  .ion-text-sm-center {\r\n    text-align: center !important;\r\n  }\r\n\r\n  .ion-text-sm-justify {\r\n    text-align: justify !important;\r\n  }\r\n\r\n  .ion-text-sm-start {\r\n    text-align: start !important;\r\n  }\r\n\r\n  .ion-text-sm-end {\r\n    text-align: end !important;\r\n  }\r\n\r\n  .ion-text-sm-left {\r\n    text-align: left !important;\r\n  }\r\n\r\n  .ion-text-sm-right {\r\n    text-align: right !important;\r\n  }\r\n\r\n  .ion-text-sm-nowrap {\r\n    white-space: nowrap !important;\r\n  }\r\n\r\n  .ion-text-sm-wrap {\r\n    white-space: normal !important;\r\n  }\r\n}\r\n@media (min-width: 768px) {\r\n  .ion-text-md-center {\r\n    text-align: center !important;\r\n  }\r\n\r\n  .ion-text-md-justify {\r\n    text-align: justify !important;\r\n  }\r\n\r\n  .ion-text-md-start {\r\n    text-align: start !important;\r\n  }\r\n\r\n  .ion-text-md-end {\r\n    text-align: end !important;\r\n  }\r\n\r\n  .ion-text-md-left {\r\n    text-align: left !important;\r\n  }\r\n\r\n  .ion-text-md-right {\r\n    text-align: right !important;\r\n  }\r\n\r\n  .ion-text-md-nowrap {\r\n    white-space: nowrap !important;\r\n  }\r\n\r\n  .ion-text-md-wrap {\r\n    white-space: normal !important;\r\n  }\r\n}\r\n@media (min-width: 992px) {\r\n  .ion-text-lg-center {\r\n    text-align: center !important;\r\n  }\r\n\r\n  .ion-text-lg-justify {\r\n    text-align: justify !important;\r\n  }\r\n\r\n  .ion-text-lg-start {\r\n    text-align: start !important;\r\n  }\r\n\r\n  .ion-text-lg-end {\r\n    text-align: end !important;\r\n  }\r\n\r\n  .ion-text-lg-left {\r\n    text-align: left !important;\r\n  }\r\n\r\n  .ion-text-lg-right {\r\n    text-align: right !important;\r\n  }\r\n\r\n  .ion-text-lg-nowrap {\r\n    white-space: nowrap !important;\r\n  }\r\n\r\n  .ion-text-lg-wrap {\r\n    white-space: normal !important;\r\n  }\r\n}\r\n@media (min-width: 1200px) {\r\n  .ion-text-xl-center {\r\n    text-align: center !important;\r\n  }\r\n\r\n  .ion-text-xl-justify {\r\n    text-align: justify !important;\r\n  }\r\n\r\n  .ion-text-xl-start {\r\n    text-align: start !important;\r\n  }\r\n\r\n  .ion-text-xl-end {\r\n    text-align: end !important;\r\n  }\r\n\r\n  .ion-text-xl-left {\r\n    text-align: left !important;\r\n  }\r\n\r\n  .ion-text-xl-right {\r\n    text-align: right !important;\r\n  }\r\n\r\n  .ion-text-xl-nowrap {\r\n    white-space: nowrap !important;\r\n  }\r\n\r\n  .ion-text-xl-wrap {\r\n    white-space: normal !important;\r\n  }\r\n}\r\n\r\n/*# sourceMappingURL=text-alignment.css.map */\r\n",null,".ion-text-uppercase {\r\n  /* stylelint-disable-next-line declaration-no-important */\r\n  text-transform: uppercase !important;\r\n}\r\n\r\n.ion-text-lowercase {\r\n  /* stylelint-disable-next-line declaration-no-important */\r\n  text-transform: lowercase !important;\r\n}\r\n\r\n.ion-text-capitalize {\r\n  /* stylelint-disable-next-line declaration-no-important */\r\n  text-transform: capitalize !important;\r\n}\r\n\r\n@media (min-width: 576px) {\r\n  .ion-text-sm-uppercase {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: uppercase !important;\r\n  }\r\n\r\n  .ion-text-sm-lowercase {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: lowercase !important;\r\n  }\r\n\r\n  .ion-text-sm-capitalize {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: capitalize !important;\r\n  }\r\n}\r\n@media (min-width: 768px) {\r\n  .ion-text-md-uppercase {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: uppercase !important;\r\n  }\r\n\r\n  .ion-text-md-lowercase {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: lowercase !important;\r\n  }\r\n\r\n  .ion-text-md-capitalize {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: capitalize !important;\r\n  }\r\n}\r\n@media (min-width: 992px) {\r\n  .ion-text-lg-uppercase {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: uppercase !important;\r\n  }\r\n\r\n  .ion-text-lg-lowercase {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: lowercase !important;\r\n  }\r\n\r\n  .ion-text-lg-capitalize {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: capitalize !important;\r\n  }\r\n}\r\n@media (min-width: 1200px) {\r\n  .ion-text-xl-uppercase {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: uppercase !important;\r\n  }\r\n\r\n  .ion-text-xl-lowercase {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: lowercase !important;\r\n  }\r\n\r\n  .ion-text-xl-capitalize {\r\n    /* stylelint-disable-next-line declaration-no-important */\r\n    text-transform: capitalize !important;\r\n  }\r\n}\r\n\r\n/*# sourceMappingURL=text-transformation.css.map */\r\n",null,".ion-align-self-start {\r\n  align-self: flex-start !important;\r\n}\r\n\r\n.ion-align-self-end {\r\n  align-self: flex-end !important;\r\n}\r\n\r\n.ion-align-self-center {\r\n  align-self: center !important;\r\n}\r\n\r\n.ion-align-self-stretch {\r\n  align-self: stretch !important;\r\n}\r\n\r\n.ion-align-self-baseline {\r\n  align-self: baseline !important;\r\n}\r\n\r\n.ion-align-self-auto {\r\n  align-self: auto !important;\r\n}\r\n\r\n.ion-wrap {\r\n  flex-wrap: wrap !important;\r\n}\r\n\r\n.ion-nowrap {\r\n  flex-wrap: nowrap !important;\r\n}\r\n\r\n.ion-wrap-reverse {\r\n  flex-wrap: wrap-reverse !important;\r\n}\r\n\r\n.ion-justify-content-start {\r\n  justify-content: flex-start !important;\r\n}\r\n\r\n.ion-justify-content-center {\r\n  justify-content: center !important;\r\n}\r\n\r\n.ion-justify-content-end {\r\n  justify-content: flex-end !important;\r\n}\r\n\r\n.ion-justify-content-around {\r\n  justify-content: space-around !important;\r\n}\r\n\r\n.ion-justify-content-between {\r\n  justify-content: space-between !important;\r\n}\r\n\r\n.ion-justify-content-evenly {\r\n  justify-content: space-evenly !important;\r\n}\r\n\r\n.ion-align-items-start {\r\n  align-items: flex-start !important;\r\n}\r\n\r\n.ion-align-items-center {\r\n  align-items: center !important;\r\n}\r\n\r\n.ion-align-items-end {\r\n  align-items: flex-end !important;\r\n}\r\n\r\n.ion-align-items-stretch {\r\n  align-items: stretch !important;\r\n}\r\n\r\n.ion-align-items-baseline {\r\n  align-items: baseline !important;\r\n}\r\n\r\n/*# sourceMappingURL=flex-utils.css.map */\r\n"],"sourceRoot":"webpack:///"}