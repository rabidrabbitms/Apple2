{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Uid\n * @description\n * Get unique identifiers: UUID, IMEI, IMSI, ICCID and MAC.\n *\n * @usage\n * ```typescript\n * import { Uid } from '@ionic-native/uid/ngx';\n * import { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\n *\n * constructor(private uid: Uid, private androidPermissions: AndroidPermissions) { }\n *\n *\n * async getImei() {\n *  const { hasPermission } = await this.androidPermissions.checkPermission(\n *    this.androidPermissions.PERMISSION.READ_PHONE_STATE\n *  );\n *\n *  if (!hasPermission) {\n *    const result = await this.androidPermissions.requestPermission(\n *      this.androidPermissions.PERMISSION.READ_PHONE_STATE\n *    );\n *\n *    if (!result.hasPermission) {\n *      throw new Error('Permissions required');\n *    }\n *\n *    // ok, a user gave us permission, we can get him identifiers after restart app\n *    return;\n *  }\n *\n *   return this.uid.IMEI\n * }\n * ```\n */\nexport declare class Uid extends IonicNativePlugin {\n    /** Get the device Universally Unique Identifier (UUID). */\n    UUID: string;\n    /** Get the device International Mobile Station Equipment Identity (IMEI). */\n    IMEI: string;\n    /** Get the device International mobile Subscriber Identity (IMSI). */\n    IMSI: string;\n    /** Get the sim Integrated Circuit Card Identifier (ICCID). */\n    ICCID: string;\n    /** Get the Media Access Control address (MAC). */\n    MAC: string;\n}\n"]}